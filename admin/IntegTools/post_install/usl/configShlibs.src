XCOMM!/bin/ksh
XCOMM $XConsortium: configShlibs.src /main/6 1996/06/13 16:38:59 drk $

XCOMM (c) Copyright 1996 Digital Equipment Corporation.
XCOMM (c) Copyright 1996 Hewlett-Packard Company.
XCOMM (c) Copyright 1996 International Business Machines Corp.
XCOMM (c) Copyright 1996 Sun Microsystems, Inc.
XCOMM (c) Copyright 1996 Novell, Inc. 
XCOMM (c) Copyright 1996 FUJITSU LIMITED.
XCOMM (c) Copyright 1996 Hitachi.

#define STAR *

XCOMM ############################################
RemoveShlibFiles()
{
    while read SRC
    do
      if [ "$SRC" != "" ]
      then
	rm -f $SRC
	dirname=${SRC%/STAR}
	if [ -d $dirname ]
	then
	  cd $dirname
	  while [ "$dirname" != "$CDE_TOP" ]
	  do
	    cd ..
	    rmdir ${dirname##STAR/} >/dev/null 2>/dev/null
	    dirname=${dirname%/STAR}
	  done
	fi
      fi
    done <<-EOF
#include "CDE-SHLIBS.list"
	EOF
}

VerifyInstalledFiles()
{
    echo "Status   mode    owner   group   filename"
    echo "-----------------------------------------"
XCOMM	  exists  correct correct correct  /usr/dt/foo1
XCOMM	  MISSING  WRONG   WRONG   WRONG   /usr/dt/foo2
XCOMM        exists    the link is correct    /usr/dt/link

    while read SRC
    do
#include "../verify.func"
    done <<-EOF
#include "CDE-SHLIBS.lst"
	EOF
}

#include "../option.func"

MakeTheLink()
{
XCOMM
XCOMM Usage: configShlibs
XCOMM
XCOMM creates links in the install tree libtt.so -> libtt.so.1
XCOMM

  cd CDE_INSTALLATION_TOP/lib

  for lib in `/bin/ls *.so.*`
  do
    echo "  Creating symlink for $lib"

    link=`echo $lib | cut -d. -f1,2`

    rm -f $link
    ln -s $lib $link

  done
}

XCOMM ##########################################################################
XCOMM
XCOMM				Main Body
XCOMM
XCOMM ##########################################################################

PRODUCT=CDE
FILESET=CDE-SHLIBS
retval=0
CDE_TOP=CDE_INSTALLATION_TOP
CDE_CONF_TOP=CDE_CONFIGURATION_TOP

  HandleOption $*

  if [ "$OPERATION" = "deconfigure" ]
  then

    echo "de-Configuring for CDE-SHLIBS..."

    RemoveShlibFiles

    VerifyInstalledFiles

  elif [ "$OPERATION" = "configure" ]
  then

    MakeTheLink

  elif [ "$OPERATION" = "verify" ]
  then

    VerifyInstalledFiles

  fi

  return $retval
