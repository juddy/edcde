<!-- $XConsortium: Tasks.sgm /main/11 1996/10/30 21:22:15 cdedoc $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->
<Chapter Id="Tasks">
<Title>dtterm Tasks</Title>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.1">
<Para><XRef Linkend="StartStopTerminalEmulatorSI"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.2">
<Para><XRef Linkend="XTClosingTerminalTA"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.3">
<Para><XRef Linkend="CutPasteTextTA"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.4">
<Para><XRef Linkend="windowresize"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.5">
<Para><XRef Linkend="ResizeTerminalWindowTA"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.6">
<Para><XRef Linkend="XTRunningClientsTA"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.7">
<Para><XRef Linkend="rlogin"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.8">
<Para><XRef Linkend="config"></Para>
</ListItem>
</ItemizedList>
<Sect1 Id="StartStopTerminalEmulatorSI">
<Title>To Start dtterm</Title>
<Para>There are several ways you can start a &ProductName; <ComputerOutput>dtterm</ComputerOutput> terminal
emulator:
</Para>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.9">
<Para>From the Front Panel
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.10">
<Para>From File Manager
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.11">
<Para>From a command in an existing terminal window
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.12">
<Para>From Application Manager
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.13">
<Para>From New in the <ComputerOutput>dtterm</ComputerOutput> Window pulldown menu
</Para>
</ListItem>
</ItemizedList>
<!--s1 id=XTUsingTerminalControlTA-->
<Procedure>
<Title>To Start dtterm from the Front Panel</Title>
<IndexTerm>
<Primary>starting: terminal emulator</Primary>
</IndexTerm>
<IndexTerm>
<Primary>closing: terminal emulator</Primary>
</IndexTerm>
<IndexTerm>
<Primary>Terminal: button</Primary>
</IndexTerm>
<IndexTerm>
<Primary>button: Terminal</Primary>
</IndexTerm>
<Step>
<Para>The terminal control is located in the Personal Applications subpanel.
</Para>
<Graphic Entityref="fptermOL" Id="HTRM.TSKS.fig.1"></Graphic>
<ItemizedList Mark="&bull;">
<ListItem Id="HTRM.TSKS.item.14">
<Para>Click the terminal control. The busy light blinks indicating that
the terminal is being activated.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.15">
<Para>The <ComputerOutput>dtterm</ComputerOutput> window appears after a short time.
</Para>
</ListItem>
</ItemizedList>
<!-- s1 id=ToStartATerminalFromFileManagerTA -->
</Step>
</Procedure>
<Procedure>
<Title>To Start dtterm from File Manager</Title>
<Step>
<ItemizedList Mark="&bull;">
<ListItem Id="HTRM.TSKS.item.16">
<Para>Choose Open Terminal from the File menu.
</Para>
</ListItem>
</ItemizedList>
<Graphic Entityref="fmgrtermOL" Id="HTRM.TSKS.fig.2"></Graphic>
<Para>This opens <ComputerOutput>dtterm</ComputerOutput> with the same current directory
as the File Manager view.</Para>
<!-- s1 id=XTStartingTermFromCommandLineTA -->
</Step>
</Procedure>
<Procedure>
<Title>To Start a Terminal Emulator Other Than dtterm</Title>
<Step>
<Para>To use a terminal emulator other than
<ComputerOutput>dtterm</ComputerOutput>,
start it from a command line in an
existing terminal emulator window.</Para>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.17">
<Para>At the command line prompt, type the name of the terminal emulator and
any options you want. For example, to start <ComputerOutput>xterm</ComputerOutput>, enter:</Para>
<ProgramListing>xterm  [<Symbol Role="Variable">options</Symbol>] &amp;
</ProgramListing>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">options</Symbol></Term>
<ListItem>
<Para>represents optional items to customize the terminal emulator.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><ComputerOutput>&</ComputerOutput></Term>
<ListItem>
<Para>specifies that the terminal emulator runs in the background
so you can continue working in your
original window while the terminal emulator is
running.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>The terminal emulator starts in the current workspace
unless directed otherwise by options.
</Para>
</ListItem>
</ItemizedList>
</Step>
</Procedure>
<Procedure>
<Title>To Start dtterm from the Window Menu</Title>
<Step>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.18">
<Para>Choose New from the Window menu in an existing <ComputerOutput>dtterm</ComputerOutput> window.
A duplicate <ComputerOutput>dtterm</ComputerOutput> window appears.
</Para>
</ListItem>
</ItemizedList>
</Step>
</Procedure>
<Procedure>
<Title>Examples</Title>
<Step>
<Para>The following command starts a <ComputerOutput>dtterm</ComputerOutput> window in the workspace <ComputerOutput>Project
Notes</ComputerOutput>:</Para>
<ProgramListing>dtterm -xrm '*workspaceList: "Project Notes"' &amp;
</ProgramListing>
<Para>The following command starts a <ComputerOutput>dtterm</ComputerOutput> window on a screen on the system
named "lgmcd":</Para>
<ProgramListing>dtterm -display lgmcd:0.1 &amp;
</ProgramListing>
</Step>
</Procedure>
<Procedure>
<Title>See Also</Title>
<Step>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.19">
<Para>Refer to the <Link Type="jump" Linkend="manpage1x"><ComputerOutput>dtterm (1X)</ComputerOutput></Link> man page for details
about the options available for <ComputerOutput>dtterm</ComputerOutput>.
</Para>
</ListItem>
</ItemizedList>
</Step>
</Procedure>
</Sect1>
<Sect1 Id="XTClosingTerminalTA">
<Title>To Close dtterm</Title>
<IndexTerm>
<Primary>closing: <ComputerOutput>dtterm</ComputerOutput></Primary>
</IndexTerm>
<IndexTerm>
<Primary>window menu: button</Primary>
</IndexTerm>
<OrderedList Role="tight">
<ListItem Id="HTRM.TSKS.item.20">
<Para>Type <ComputerOutput>exit</ComputerOutput> at the command line and press Return.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.21">
<Para><Emphasis>Or</Emphasis>, Choose Exit from the Window menu.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.22">
<Para><Emphasis>Or</Emphasis>, choose Close from the window
menu pulldown menu (accessed from the button at the upper left corner of
the window manager frame).
</Para>
</ListItem>
</OrderedList>
<Note>
<Para>Typing <ComputerOutput>exit</ComputerOutput> at the command line is the preferred method of
closing <ComputerOutput>dtterm</ComputerOutput>. Closing it through the menus doesn't terminate
any background
processes you started from <ComputerOutput>dtterm</ComputerOutput>, which can sometimes cause
problems.
</Para>
</Note>
</Sect1>
<Sect1 Id="CutPasteTextTA">
<Title>To Copy and Paste Text</Title>
<IndexTerm>
<Primary>cutting: text</Primary>
</IndexTerm>
<IndexTerm>
<Primary>pasting: text</Primary>
</IndexTerm>
<IndexTerm>
<Primary>text: cutting and pasting</Primary>
</IndexTerm>
<Procedure>
<Title>To Copy Text</Title>
<Step>
<OrderedList>
<ListItem Id="HTRM.TSKS.item.23">
<Para>Using mouse button 1,
drag the pointer over the text you want to copy. The text appears
highlighted.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.24">
<Para>Release mouse button 1 after all the text you want
to copy is highlighted.
</Para>
</ListItem>
</OrderedList>
<Para>The text is not
removed from its original position.</Para>
</Step>
</Procedure>
<Procedure>
<Title>To Paste Text</Title>
<Step>
<OrderedList>
<ListItem Id="HTRM.TSKS.item.25">
<Para>Position the cursor where you want to insert the text.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.26">
<Para>Click mouse button 2.
</Para>
</ListItem>
</OrderedList>
<Para>A copy of the current selection is pasted at the location you
indicated. You can paste additional copies by repeating the above steps.</Para>
</Step>
</Procedure>
</Sect1>
<Sect1 Id="windowresize">
<Title>To Resize the dtterm Window</Title>
<IndexTerm>
<Primary>resize window</Primary>
</IndexTerm>
<OrderedList Role="tight">
<ListItem Id="HTRM.TSKS.item.27">
<Para>Choose Window Size from Options.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.28">
<Para>Choose one of the three sizes:
</Para>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.29">
<Para>80x24
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.30">
<Para>132x24
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.31">
<Para>normal
</Para>
</ListItem>
</ItemizedList>
</ListItem>
</OrderedList>
<Note>
<Para>In some cases, depending on the screen size and font size you are using,
you may not be able
to resize the <ComputerOutput>dtterm</ComputerOutput> window to 132 columns. If this occurs, <ComputerOutput>dtterm</ComputerOutput>
resizes to
the maximum number of columns allowable under the circumstances.
</Para>
</Note>
<Para>You can also resize <ComputerOutput>dtterm</ComputerOutput> using the Window Manager menu.
</Para>
<Procedure>
<Title>See Also</Title>
<Step>
<Para><XRef Linkend="ResizeTerminalWindowTA"></Para>
</Step>
</Procedure>
</Sect1>
<Sect1 Id="ResizeTerminalWindowTA">
<Title>To Resize the Window Contents</Title>
<IndexTerm>
<Primary><ComputerOutput>resize</ComputerOutput> function</Primary>
</IndexTerm>
<Para>When you change the size of a terminal emulator window, applications running in the
window may not know about the resizing. Use this procedure to resize the
application's output.</Para>
<ItemizedList Mark="&bull;">
<ListItem Id="HTRM.TSKS.item.32">
<Para>At the command-line prompt type:
</Para>
<ProgramListing>eval `resize`
</ProgramListing>
</ListItem>
</ItemizedList>
<Procedure>
<Title>See Also</Title>
<Step>
<Para><XRef Linkend="windowresize"></Para>
</Step>
</Procedure>
</Sect1>
<Sect1 Id="XTRunningClientsTA">
<Title>To Start Applications in a dtterm Window</Title>
<ItemizedList Mark="&bull;">
<ListItem Id="HTRM.TSKS.item.33">
<Para>Enter the command to start the application at the command line prompt.
</Para>
</ListItem>
</ItemizedList>
<Para>The general syntax for starting an application is:</Para>
<ProgramListing><Symbol Role="Variable">application</Symbol> [<Symbol Role="Variable">options</Symbol>] &amp;
</ProgramListing>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">application</Symbol></Term>
<ListItem>
<Para>The application name.</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">options</Symbol></Term>
<ListItem>
<Para>a list of optional information to be passed to the
application.</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><ComputerOutput>&</ComputerOutput></Term>
<ListItem>
<Para>specifies that the application runs in the background so
you can continue to use the terminal emulator window
while the application is running.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Procedure>
<Title>Example</Title>
<Step>
<Para>To start a digital clock from the command line:
</Para>
<ProgramListing>xclock -digital &amp;
</ProgramListing>
</Step>
</Procedure>
<Procedure>
<Title>See Also</Title>
<Step>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.34">
<Para>Refer to the man page or other documentation for each application to
find the command and options to use for that application.
</Para>
</ListItem>
</ItemizedList>
</Step>
</Procedure>
</Sect1>
<Sect1 Id="rlogin">
<Title>To Log On to a Remote System</Title>
<Procedure>
<Title>Using rlogin</Title>
<Step>
<Para>Use the <ComputerOutput>rlogin</ComputerOutput> command in an existing terminal emulator window to log
in to a remote host.
Once the window is acting as a terminal to the remote host, you can run
applications there, redirecting the display back to your system if you
desire.</Para>
</Step>
</Procedure>
<Procedure>
<Title>Example</Title>
<Step>
<Para>The following command logs onto a system named <ComputerOutput>there</ComputerOutput>, runs
the client <ComputerOutput>xload</ComputerOutput>, and redirects the display back to your original
system. Assume your system is named <ComputerOutput>here</ComputerOutput>.
</Para>
<ProgramListing>rlogin there
xload -display here:0
</ProgramListing>
</Step>
</Procedure>
<Procedure>
<Title>Using remsh</Title>
<Step>
<Para>The <command>remsh</command> command starts a shell on a remote host, performs some
client (often starting a terminal emulator on that host), and redirects the
display back to your original system if desired. (Systems that don't support
<command>remsh</command> usually sypport the equivalent <command>rsh</command> command.)
The syntax for the <command>remsh</command> command is:
</Para>
<ProgramListing>remsh <Symbol Role="Variable">remote</Symbol> -n <Symbol Role="Variable">client</Symbol> -display <Symbol Role="Variable">system:display[.screen]</Symbol>
</ProgramListing>
<Para>where:
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">remote</Symbol></Term>
<ListItem>
<Para>The remote host name
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">client</Symbol></Term>
<ListItem>
<Para>The program you want to run on the remote host
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">system:display[.screen]</Symbol></Term>
<ListItem>
<Para>The host and display on which the results
are to be displayed.</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Step>
</Procedure>
<Procedure>
<Title>Example</Title>
<Step>
<Para>The following command runs <ComputerOutput>xload</ComputerOutput> on the remote host named
<ComputerOutput>there</ComputerOutput>, and directs output back to your system, <ComputerOutput>here</ComputerOutput>.
</Para>
<ProgramListing>remsh there -n /usr/bin/X11/xload -display here:0.0 &
</ProgramListing>
<Para>The <ComputerOutput>remsh</ComputerOutput> command is often used when customizing a menu to access other
hosts.</Para>
</Step>
</Procedure>
</Sect1>
<Sect1 Id="config">
<Title>To Configure dtterm</Title>
<ItemizedList Mark="&bull;">
<ListItem Id="HTRM.TSKS.item.35">
<Para><XRef Linkend="setresources"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.36">
<Para><XRef Linkend="XTUsingScrollbarsTA"></Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.37">
<Para><XRef Linkend="XTSettingTTYResourceTA"></Para>
</ListItem>
</ItemizedList>
<Sect2 Id="setresources">
<Title>To Set dtterm Resources</Title>
<Para>A resource is a variable whose value affects some attribute of
<ComputerOutput>dtterm</ComputerOutput>. Examples of resources are foreground color, background
color, height, and width. Resources are found in a resource database.
Examples of <ComputerOutput>dtterm</ComputerOutput> resources are:</Para>
<ProgramListing>Dtterm*saveLines:  4s
Dtterm*scrollBar: True
</ProgramListing>
<Para>App-default files for the desktop applications are located in the
<ComputerOutput>/usr/dt/app-defaults/language</ComputerOutput> directory.</Para>
<Para>Resources are loaded at session start-up by Session Manager. For information
on how Session Manager loads the resources into the RESOURCE_MANAGER,
see "Loading the Session Resources" in the <Emphasis>CDE Advanced User's & System
Administrator's Guide</Emphasis>.</Para>
<Sect3 Id="HTRM.TSKS.div.1">
<Title>To Set System-Wide Resources</Title>
<ItemizedList Mark="&bull;" Role="tight">
<ListItem Id="HTRM.TSKS.item.38">
<Para>Add the resources to the file <ComputerOutput>/etc/dt/config/language/sys.resources</ComputerOutput>.
(You may have to create the file.)
</Para>
</ListItem>
</ItemizedList>
<Para>For example, if in <ComputerOutput>/etc/dt/config/C/sys.resources</ComputerOutput> you specify:</Para>
<ProgramListing>AnApplication*resource: value
</ProgramListing>
<Para>then the resource <ComputerOutput>AnApplication*resource</ComputerOutput> is set in each user's
RESOURCE_MANAGER property at the next login.</Para>
</Sect3>
<Sect3 Id="HTRM.TSKS.div.2">
<Title>To Set Personal Resources</Title>
<OrderedList Role="tight">
<ListItem Id="HTRM.TSKS.item.39">
<Para>Add the resources to the file <Emphasis>HomeDirectory</Emphasis><ComputerOutput>/.Xdefaults</ComputerOutput>.
</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.40">
<Para>Double-click Reload Resources in the Desktop_Tools application group.
</Para>
</ListItem>
</OrderedList>
<!-- MODULE XTUsingScrollbarsTA xt405.TAe -->
</Sect3>
</Sect2>
<Sect2 Id="XTUsingScrollbarsTA">
<Title>To Specify Scrollbars</Title>
<OrderedList>
<ListItem Id="HTRM.TSKS.item.41">
<Para>Specify a <ComputerOutput>scrollBar</ComputerOutput> resource for
the terminal emulator.
If the value of <ComputerOutput>scrollBar</ComputerOutput> is True, <ComputerOutput>dtterm</ComputerOutput> will
have scrollbars. If the value is False, it will not have scrollbars.</Para>
</ListItem>
<ListItem Id="HTRM.TSKS.item.42">
<Para>Log out, then log back in for the current session. (For home session,
set home session, log out, then log back in.)
</Para>
</ListItem>
</OrderedList>
<Procedure>
<Title>Examples</Title>
<Step>
<Para>To set scrollbars in all <ComputerOutput>dtterm</ComputerOutput> windows:
</Para>
<ProgramListing>Dtterm*scrollBar:     True
</ProgramListing>
<Para>To set scrollbars only for <ComputerOutput>dtterm</ComputerOutput> windows named
"localTerminal":
</Para>
<ProgramListing>localTerminal*scrollBar:   True
</ProgramListing>
</Step>
</Procedure>
</Sect2>
<Sect2 Id="XTSettingTTYResourceTA">
<Title>To Set Terminal Control Characters</Title>
<ItemizedList Mark="&bull;">
<ListItem Id="HTRM.TSKS.item.43">
<Para>Edit the <ComputerOutput>ttyModes</ComputerOutput> resource using one of the methods described in
<Link Type="jump" Linkend="setresources">Setting dtterm Resources</Link>.
</Para>
</ListItem>
</ItemizedList>
<Para>The syntax for this resource is:
</Para>
<ProgramListing>ttyModes:  <Symbol Role="Variable">^C</Symbol>  <Symbol Role="Variable">name</Symbol>
</ProgramListing>
<Para>where <Symbol Role="Variable">name</Symbol> is the control, and <Symbol Role="Variable">C</Symbol> is the character. For example,
the default value of <ComputerOutput>ttyModes</ComputerOutput> is:
</Para>
<ProgramListing>ttyModes:	erase ^H intr ^C kill ^U start ^Q stop ^S swtch ^@
</ProgramListing>
<Para>Because <ComputerOutput>dtterm</ComputerOutput> only <Emphasis>emulates</Emphasis> a terminal, your
control characters might not be what you are used to on a physical
terminal. The <ComputerOutput>ttyModes</ComputerOutput> resource enables you to set control characters
for your terminal emulator.</Para>
<Para>By default, Login Manager sets the following control characters.
</Para>
<VariableList>
<VarListEntry>
<Term><Emphasis Role="heading">Control name</Emphasis></Term>
<ListItem>
<Para><Emphasis Role="heading"> Character (Effect)</Emphasis></Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>erase</Term>
<ListItem>
<Para>^H (Backspace erases characters)
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>intr</Term>
<ListItem>
<Para>^C (Interrupt - cancel the current operation and redisplay the
command line prompt)
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>kill</Term>
<ListItem>
<Para>^U (Clear the input line)
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>start</Term>
<ListItem>
<Para>^Q (Start subprocess output)
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>swtch</Term>
<ListItem>
<Para>^@ (Switch between layers in a shell)
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Note>
<Para>The "<ComputerOutput>^</ComputerOutput>" character stands for the <Keycap>CTRL</Keycap> key, so to interrupt an
operation in progress you press <Keycap>CTRL</Keycap> <Keycap>C</Keycap>. When setting
<ComputerOutput>ttyModes</ComputerOutput>, use the <Keycap>^</Keycap>
key instead of the <Keycap>CTRL</Keycap> key.
</Para>
</Note>
</Sect2>
</Sect1>
</Chapter>
<!--fickle 1.15 help-to-docbook 1.4 01/17/96 16:46:59-->
