<!-- $XConsortium: con_xval.sgm /main/7 1996/08/30 13:36:49 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->
<![ %CDE.C.CDE; [<RefEntry Id="CDEMX.XCDI.MAN112.rsml.1">]]>
<![ %CDE.C.XO; [<RefEntry Id="XCDI.MAN112.rsml.1">]]>
<RefMeta>
<RefEntryTitle>tt_message_context_xval</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>tt_message_context_xval</Function></RefName>
<RefPurpose>retrieve and deserialize the data from a message's context
</RefPurpose>
</RefNameDiv>
<RefSynopsisDiv>
<FuncSynopsis Remap="ANSI">
<FuncSynopsisInfo>#include &lt;Tt/tt_c.h>
</FuncSynopsisInfo>
<FuncDef>Tt_status <Function>tt_message_context_xval</Function></FuncDef>
<ParamDef>Tt_message <Parameter>m</Parameter></ParamDef>
<ParamDef>const char *<Parameter>slotname</Parameter></ParamDef>
<ParamDef>xdrproc_t <Parameter>xdr_proc</Parameter></ParamDef>
<ParamDef>void **<Parameter>value</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>The
<Function>tt_message_context_xval</Function> function
retrieves and deserializes the data from a message's context.
</Para>
<Para>The
<Emphasis>m</Emphasis> argument is the opaque handle for the message involved in this operation.
The
<Emphasis>slotname</Emphasis> argument describes the context of this message.
The
<Emphasis>xdr_proc</Emphasis> argument
points to the XDR procedure to be used to deserialize the data in the
<Symbol Role="Variable">n</Symbol>th argument into newly allocated storage,
the address of which will be stored in the pointer whose address is
<Symbol Role="Variable">value</Symbol>.</Para>
<Para>The
<Symbol Role="Variable">value</Symbol> argument is the data to be deserialized.
</Para>
</RefSect1>
<RefSect1>
<Title>RETURN VALUE</Title>
<Para>Upon successful completion, the
<Function>tt_message_context_xval</Function> function returns the status of the operation as one of the following
<StructName Role="typedef">Tt_status</StructName> values:
</Para>
<VariableList>
<VarListEntry>
<Term>TT_OK</Term>
<ListItem>
<Para>The operation completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_MODE</Term>
<ListItem>
<Para>The specified
<StructName Role="typedef">Tt_mode</StructName> is invalid.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_NOMP</Term>
<ListItem>
<Para>The
&cdeman.ttsession; process is not running and the ToolTalk service cannot restart it.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_POINTER</Term>
<ListItem>
<Para>The pointer passed does not point to an object of
the correct type for this operation.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_NUM</Term>
<ListItem>
<Para>The integer value passed was invalid (out of range).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_XDR</Term>
<ListItem>
<Para>The XDR procedure failed on the given data, or evaluated to a
zero-length expression.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>APPLICATION USAGE</Title>
<Para>The allocation calls are made by the XDR procedure; therefore, any
storage allocated is not allocated from the ToolTalk allocation stack.
The application should use the
<Function>xdr_free</Function>(3) call to free this storage.
</Para>
</RefSect1>
<RefSect1>
<Title>SEE ALSO</Title>
<Para>&cdeman.Tt.tt.c.h;
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.12 mancsf-to-docbook 1.2 08/07/95 23:18:47-->
