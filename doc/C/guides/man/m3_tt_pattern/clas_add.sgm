<!-- $XConsortium: clas_add.sgm /main/5 1996/08/30 14:10:55 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<![ %CDE.C.CDE; [<RefEntry Id="CDEMX.XCDI.MAN190.rsml.1">]]>
<![ %CDE.C.XO; [<RefEntry Id="XCDI.MAN190.rsml.1">]]>
<RefMeta>
<RefEntryTitle>tt_pattern_class_add</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>tt_pattern_class_add</Function></RefName>
<RefPurpose>add a value to the class information for a pattern
</RefPurpose>
</RefNameDiv>
<!-- $XConsortium: clas_add.sgm /main/5 1996/08/30 14:10:55 rws $-->
<!-- CDE Common Source Format, Version 1.0.0-->
<!-- (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company-->
<!-- (c) Copyright 1993, 1994, 1995 International Business Machines Corp.-->
<!-- (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.-->
<!-- (c) Copyright 1993, 1994, 1995 Novell, Inc.-->
<RefSynopsisDiv>
<FuncSynopsis Remap="ANSI">
<FuncSynopsisInfo>#include &lt;Tt/tt_c.h>
</FuncSynopsisInfo>
<FuncDef>Tt_status <Function>tt_pattern_class_add</Function></FuncDef>
<ParamDef>Tt_pattern <Parameter>p</Parameter></ParamDef>
<ParamDef>Tt_class <Parameter>c</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>The
<Function>tt_pattern_class_add</Function> function
adds a value to the class information for the specified pattern.
</Para>
<Para>If the class is
<SystemItem Class="Constant">TT_REQUEST</SystemItem>, the sending process expects a reply to the message.
</Para>
<Para>If the class is
<SystemItem Class="Constant">TT_NOTICE</SystemItem>, the sending process does not expect a reply to the
message.
</Para>
<Para>The
<Emphasis>p</Emphasis> argument is a unique handle for a message pattern.
This handle is returned after
&cdeman.tt.pattern.create; is called.
The
<Emphasis>c</Emphasis> argument indicates whether the receiving process is to
take action after the message is received.
The following values are defined:
</Para>
<VariableList>
<VarListEntry>
<Term>TT_NOTICE</Term>
<ListItem>
<Para>A notice of an event.
The sender does not want feedback on this message.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_REQUEST</Term>
<ListItem>
<Para>A request for some action to be taken.
The sender must be notified of progress,
success or failure, and must receive any return values.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RETURN VALUE</Title>
<Para>Upon successful completion, the
<Function>tt_pattern_class_add</Function> function returns the status of the operation as one of the following
<StructName Role="typedef">Tt_status</StructName> values:
</Para>
<VariableList>
<VarListEntry>
<Term>TT_OK</Term>
<ListItem>
<Para>The operation completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_NOMP</Term>
<ListItem>
<Para>The
&cdeman.ttsession; process is not running and the ToolTalk service cannot restart it.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_POINTER</Term>
<ListItem>
<Para>The pointer passed does not point to an object of
the correct type for this operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>SEE ALSO</Title>
<Para>&cdeman.Tt.tt.c.h;, &cdeman.tt.pattern.create;.</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.12 mancsf-to-docbook 1.2 08/07/95 23:18:47-->
