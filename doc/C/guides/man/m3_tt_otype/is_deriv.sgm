<!-- $XConsortium: is_deriv.sgm /main/5 1996/08/30 14:38:23 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<![ %CDE.C.CDE; [<RefEntry Id="CDEMX.XCDI.MAN176.rsml.1">]]>
<![ %CDE.C.XO; [<RefEntry Id="XCDI.MAN176.rsml.1">]]>
<RefMeta>
<RefEntryTitle>tt_otype_is_derived</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>tt_otype_is_derived</Function></RefName>
<RefPurpose>indicate the otype derivations
</RefPurpose>
</RefNameDiv>
<!-- $XConsortium: is_deriv.sgm /main/5 1996/08/30 14:38:23 rws $-->
<!-- CDE Common Source Format, Version 1.0.0-->
<!-- (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company-->
<!-- (c) Copyright 1993, 1994, 1995 International Business Machines Corp.-->
<!-- (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.-->
<!-- (c) Copyright 1993, 1994, 1995 Novell, Inc.-->
<RefSynopsisDiv>
<FuncSynopsis Remap="ANSI">
<FuncSynopsisInfo>#include &lt;Tt/tt_c.h>
</FuncSynopsisInfo>
<FuncDef>int <Function>tt_otype_is_derived</Function></FuncDef>
<ParamDef>const char *<Parameter>derivedotype</Parameter></ParamDef>
<ParamDef>const char *<Parameter>baseotype</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>The
<Function>tt_otype_is_derived</Function> function
specifies whether the derived
otype
is derived directly or
indirectly from the base
otype.
</Para>
<Para>The
<Emphasis>derivedotype</Emphasis> argument is the specified derived
otype.
The
<Emphasis>baseotype</Emphasis> argument is the specified base
otype.
</Para>
</RefSect1>
<RefSect1>
<Title>RETURN VALUE</Title>
<Para>Upon successful completion, the
<Function>tt_otype_is_derived</Function> function returns 1 if the
<Emphasis>derivedotype</Emphasis> is derived directly or indirectly from
<Emphasis>baseotype</Emphasis>; otherwise, it returns zero.
</Para>
<Para>The application can use
&cdeman.tt.int.error; to extract one of the following
<StructName Role="typedef">Tt_status</StructName> values from the returned integer:
</Para>
<VariableList>
<VarListEntry>
<Term>TT_OK</Term>
<ListItem>
<Para>The operation completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_NOMP</Term>
<ListItem>
<Para>The
&cdeman.ttsession; process is not running and the ToolTalk service cannot restart it.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_OTYPE</Term>
<ListItem>
<Para>The specified object type is not the name of an installed object type.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>SEE ALSO</Title>
<Para>&cdeman.Tt.tt.c.h;, &cdeman.tt.otype.deriveds.count;, &cdeman.tt.otype.base;, &cdeman.tt.otype.derived;, &cdeman.tt.spec.type;, &cdeman.tt.message.otype;, &cdeman.tt.int.error;.</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.12 mancsf-to-docbook 1.2 08/07/95 23:18:47-->
