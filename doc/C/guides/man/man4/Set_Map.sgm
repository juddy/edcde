<!-- $XConsortium: Set_Map.sgm /main/6 1996/09/08 20:16:01 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<![ %CDE.C.CDE; [<RefEntry Id="CDEMX.XCDI.MAN311.rsml.1">]]>
<![ %CDE.C.XO; [<RefEntry Id="XCDI.MAN311.rsml.1">]]>
<RefMeta>
<RefEntryTitle>Set_Mapped</RefEntryTitle>
<ManVolNum>special file</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Symbol Role="Message">Set_Mapped</Symbol></RefName>
<RefPurpose>set whether a tool is mapped to the screen
</RefPurpose>
</RefNameDiv>
<!-- $XConsortium: Set_Map.sgm /main/6 1996/09/08 20:16:01 rws $-->
<!-- CDE Common Source Format, Version 1.0.0-->
<!-- (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company-->
<!-- (c) Copyright 1993, 1994, 1995 International Business Machines Corp.-->
<!-- (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.-->
<!-- (c) Copyright 1993, 1994, 1995 Novell, Inc.-->
<RefSynopsisDiv>
<Synopsis>Set_Mapped(in boolean <Symbol Role="Variable">mapped</Symbol>
        [in messageID <Emphasis>commission</Emphasis>]);
</Synopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>The
<Symbol Role="Message">Set_Mapped</Symbol> request
sets the mapped state of the optionally specified
window, or of the window primarily associated with the handling
procid (if no window is specified).
</Para>
<Para>The
<Symbol Role="Variable">mapped</Symbol> argument
is a Boolean value indicating whether the specified window is (to be)
mapped to the screen.
</Para>
<Para>The
<Emphasis>commission</Emphasis> argument
is the ID of the ongoing request, if any, that resulted in the creation
of the window in question.
</Para>
</RefSect1>
<RefSect1>
<Title>APPLICATION USAGE</Title>
<Para>The
&cdeman.ttdt.session.join;, and
&cdeman.ttdt.message.accept;, functions can be used by Xt applications to register for,
and transparently process, the
<Symbol Role="Message">Set_Mapped</Symbol> request.
</Para>
</RefSect1>
<RefSect1>
<Title>EXAMPLES</Title>
<Para>The
<Symbol Role="Message">Set_Mapped</Symbol> request can be sent as in the following example:
</Para>
<InformalExample Remap="indent">
<ProgramListing>Tt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
                        the_recipient_procid, TTDT_SET_MAPPED,
                        my_callback);
tt_message_iarg_add(msg, TT_IN, Tttk_boolean, 1);
tt_message_send(msg);
</ProgramListing>
</InformalExample>
</RefSect1>
<![ %CDE.C.CDE; [
<RefSect1>
<Title>WARNINGS</Title>
<Para><Symbol Role="Message">Set_Mapped</Symbol> can also be sent as a multicast notice, as an
<Emphasis>edict</Emphasis> to all tools in the scope of the message.
The consequences of doing so can be severe and unexpected.
</Para>
</RefSect1>
]]>
<RefSect1>
<Title>SEE ALSO</Title>
<Para>&cdeman.tt.message.iarg.add;, &cdeman.tt.message.send;, &cdeman.ttdt.message.accept;, &cdeman.ttdt.session.join;; <Symbol Role="Message">Get_Mapped</Symbol> request.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.12 mancsf-to-docbook 1.2 08/07/95 23:18:47-->
