<!-- $XConsortium: MmdbGBBI.sgm /main/6 1996/09/08 20:06:23 rws $ -->
<!-- (c) Copyright 1996 Digital Equipment Corporation. -->
<!-- (c) Copyright 1996 Hewlett-Packard Company. -->
<!-- (c) Copyright 1996 International Business Machines Corp. -->
<!-- (c) Copyright 1996 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1996 Novell, Inc. -->
<!-- (c) Copyright 1996 FUJITSU LIMITED. -->
<!-- (c) Copyright 1996 Hitachi. -->
<![ %CDE.C.CDE; [<refentry id="CDE.INFO.DtMmdbGetBookCaseByInde">]]><refmeta><refentrytitle>
DtMmdbGetBookCaseByIndex</refentrytitle><manvolnum>library call</manvolnum></refmeta><refnamediv>
<refname><function>DtMmdbGetBookCaseByIndex</function></refname><refpurpose>obtains
a descriptor for a bookcase based on an infolib index</refpurpose></refnamediv><refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>#include &lt;DtMmdb.h></funcsynopsisinfo>
<funcdef>int <function>DtMmdbGetBookCaseByIndex</function></funcdef>
<paramdef>int <parameter>infolib_descriptor</parameter></paramdef>
<paramdef>int <parameter>index</parameter></paramdef>
</funcsynopsis>
</refsynopsisdiv><refsect1>
<title>DESCRIPTION</title>
<para>The <function>DtMmdbGetBookCaseByIndex</function> function
makes the database engine ready to provide access service for
a bookcase. It allows you to access all bookcases in an infolib
without knowing their names.
</para>
</refsect1><refsect1>
<title>ARGUMENTS</title>
<variablelist>
<varlistentry><term><symbol role="Variable">infolib_descriptor</symbol></term>
<listitem>
<para>Specifies the infolib that contains the bookcase.</para>
</listitem>
</varlistentry>
<varlistentry><term><symbol role="Variable">index</symbol></term>
<listitem>
<para>Specifies the index of the bookcase within the infolib.
The value must be an integer in the
range 0 to <emphasis>n</emphasis>-1, where
<emphasis>n</emphasis> is the number of bookcases in the infolib.
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1><refsect1>
<title>RETURN VALUE</title>
<para>If <function>DtMmdbGetBookCaseByIndex</function> completes
successfully, it returns the descriptor for the bookcase.
If it fails, it returns -1.
</para>
</refsect1><refsect1>
<title>EXAMPLE</title>
<para>The following shows how a <function>DtMmdbGetBookCaseByIndex</function> call
might be coded.</para>
<informalexample>
<programlisting>DtMmdbGetBookCaseByIndex(myInfoLibDescriptor, i);
</programlisting>
</informalexample>
</refsect1><refsect1>
<title>SEE ALSO</title>
<para>&cdeman.DtMmdbGetBookCaseByLoc;,
&cdeman.DtMmdbGetBookCaseByLocs;,
&cdeman.DtMmdbGetBookCaseByName;
</para>
</refsect1></refentry>

