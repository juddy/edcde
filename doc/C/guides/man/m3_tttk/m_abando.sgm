<!-- $XConsortium: m_abando.sgm /main/5 1996/08/30 14:02:17 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<![ %CDE.C.CDE; [<RefEntry Id="CDEMX.XCDI.MAN275.rsml.1">]]>
<![ %CDE.C.XO; [<RefEntry Id="XCDI.MAN275.rsml.1">]]>
<RefMeta>
<RefEntryTitle>tttk_message_abandon</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>tttk_message_abandon</Function></RefName>
<RefPurpose>finalize a message properly
</RefPurpose>
</RefNameDiv>
<!-- $XConsortium: m_abando.sgm /main/5 1996/08/30 14:02:17 rws $-->
<!-- CDE Common Source Format, Version 1.0.0-->
<!-- (c) Copyright 1993, 1994, 1995 Hewlett-Packard Company-->
<!-- (c) Copyright 1993, 1994, 1995 International Business Machines Corp.-->
<!-- (c) Copyright 1993, 1994, 1995 Sun Microsystems, Inc.-->
<!-- (c) Copyright 1993, 1994, 1995 Novell, Inc.-->
<RefSynopsisDiv>
<FuncSynopsis Remap="ANSI">
<FuncSynopsisInfo>#include &lt;Tt/tttk.h>
</FuncSynopsisInfo>
<FuncDef>Tt_status <Function>tttk_message_abandon</Function></FuncDef>
<ParamDef>Tt_message <Parameter>msg</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>The
<Function>tttk_message_abandon</Function> function is used by an application
when it does not understand a message
and wants to get rid of it.
The
<Function>tttk_message_abandon</Function> function fails or rejects
<Emphasis>msg</Emphasis> if appropriate, and then destroys it.
The
<Function>tttk_message_abandon</Function> will reject or fail the message only if
<Emphasis>msg</Emphasis> is a
<SystemItem Class="Constant">TT_REQUEST</SystemItem> in
<StructName Role="typedef">Tt_state</StructName> <SystemItem Class="Constant">TT_SENT</SystemItem>. If it has a
<StructName Role="typedef">Tt_address</StructName> of
<SystemItem Class="Constant">TT_HANDLER</SystemItem> or a
<Function>tt_message_status</Function> of
<SystemItem Class="Constant">TT_WRN_START_MESSAGE</SystemItem>, then it fails the message;
otherwise, it rejects it.
In either case,
<Function>tttk_message_abandon</Function> gives
<Emphasis>msg</Emphasis> a message status (see
&cdeman.tt.message.status;) of
<SystemItem Class="Constant">TT_DESKTOP_ENOTSUP</SystemItem>.</Para>
</RefSect1>
<RefSect1>
<Title>RETURN VALUE</Title>
<Para>Upon successful completion, the
<Function>tttk_message_abandon</Function> function returns the status of the operation as one of the following
<StructName Role="typedef">Tt_status</StructName> values:
</Para>
<VariableList>
<VarListEntry>
<Term>TT_OK</Term>
<ListItem>
<Para>The operation completed successfully.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_NOMP</Term>
<ListItem>
<Para>The
&cdeman.ttsession; process is not running and the ToolTalk service cannot restart it.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_NOTHANDLER</Term>
<ListItem>
<Para>This application is not the handler for this message.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>TT_ERR_POINTER</Term>
<ListItem>
<Para>The pointer passed does not point to an object
of the correct type for this operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>SEE ALSO</Title>
<Para>&cdeman.Tt.tttk.h;, &cdeman.tt.message.status;, &cdeman.tttk.message.fail;, &cdeman.tttk.message.reject;.</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.12 mancsf-to-docbook 1.2 08/07/95 23:18:47-->
