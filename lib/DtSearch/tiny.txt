# $XConsortium: tiny.txt /main/2 1996/11/11 11:33:03 drk $
  mknfsexp Command
  
  
  Purpose
  
  Exports a directory to NFS clients.
  
   Syntax
  
  /usr/etc/mknfsexp  -d Directory [  -t {  rw |  ro |  rm 
  -h HostName [ , HostName ... ] } ] [ 
  -a UID ] [  -r HostName [ , HostName
  ... ] ] [  -c HostName [ , HostName ... ] ] [  -s |  -n ]
  [  -I |  -B |  -N ]
  
  Description
  
  The mknfsexp command takes the flags and parameters specified and
  constructs  a  line  that  is  syntactically   correct   for  the
  /etc/exports file. If this command is invoked
  with the -B flag, an entry will be added to the /etc/exports file
  and the exportfs command is invoked to export the directory
  specified.  Alternatively, the -I flag adds an entry to the
  exports file and does not export the directory,
  or the -N flag does not add an entry to the exports file but does
  export the directory.
  
  Flags
  
  -d Directory  Specifies the directory that is to be exported or
  changed.
  
  -t Type       Specifies whether the directory is read-write, read-only,
  or read-mostly.
  
  rw    Exports the directory read-write.  This is the system default.
  
  ro    Exports the directory read-only.
  
  rm    Exports the directory read-mostly.  If chosen, the -h option
  must  be  used to specify the hosts that have read-write  permis-
  sion.
  
  -h Hostname [ , HostName ] ...
  
  Specifies which hosts have read-write access to the directory.
  This  option  is valid only when the exported file is to be read-
  mostly.
  
  -a UID        Uses the UID parameter as the effective user ID only if a
  request comes from an unknown user.  The default  value  of  this
  option is -2.
  
  Note: Root users (uid 0) are always considered unknown by the NFS
  server, unless they are included in the root option.  Setting the
  value of UID to -1 disables anonymous access.
  
  -r HostName [ , HostName ] ...
  
  Gives root users on the specified hosts access to the directory.
  The default is for no hosts to be granted root access.
  
  -c HostName [ , HostName ] ...
  
  Gives mount access to each of the clients listed.  A client can
  either be a host or a netgroup.    The  default  is  to allow all
  hosts access.
  
  -s    Requires clients to use a more secure protocol when accessing
  the directory.
  
  -n    Does not require the client to use the more secure protocol.
  This flag is the default.
  
  -I    Adds an entry to the /etc/exports file so that the next time
  the exportfs command is invoked during system restart, the direc-
  tory will be exported.
  
  -N    Does not add an entry to the /etc/exports file but the exportfs
  command is invoked with the correct parameters so that the direc-
  tory is exported.
  
  -B    Adds an entry to the /etc/exports file and the exportfs command
  is executed to export the directory.  This flag is the default.
  
  Examples
  
  1.    To export a directory with read-only permission, enter:
  
  mknfsexp -d /usr -t ro
  
  In this example, the mknfsexp command exports the /usr directory
  with read-only permission.
  
  2.    To export a directory with read-mostly permission and a secure
  protocol to specific hosts, enter:
  
  mknfsexp -d /u/guest -t rm -h bighost,littlehost -s
  
  In this example, the mknfsexp command exports the /u/guest direc-
  tory with read-mostly permission  and  a  more secure protocol is
  used.
  
  3.    To export a directory with read-write permission to a specific
  netgroup and specific hosts,  and to make the export effective on
  the next system restart, enter:
  
  mknfsexp -d /usr -t rw -c host1,host3,grp3 -I
  
  In the above example, the mknfsexp command exports the /usr
  directory and gives read and write permission to host1, host2,
  and grp3.  The -I flag makes this change effective on the next
  system restart.
  
  Implementation Specifics
  
  This command is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  File
  
   /etc/exports Lists the directories that the server can export.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  client,  default,  directory,  export,  flag, 
  host,  parameter,  protocol,  root user,  server.
  
  For more information about NFS, see  Network File System (NFS)
  Overview for System Management.
  
  Related Information
  
  The  chnfsexp command,  exportfs command,  rmnfsexp command.
  
   How to Export a Directory Using NFS.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
  

  rmuser  Command
  
  
  Purpose
  
  Removes a user account.
  
   Syntax
  
  rmuser [  -p ] Name
  
  Description
  
  The rmuser command removes the user account identified by the
  Name parameter.  All attributes defined for the
  user are removed, but the user's home directory  and  files owned
  by the user are not deleted. The user name must already exist as
  a  lower case, alphanumeric character string of 8  characters  or
  less that begins with an alphabetic  character, and cannot be the
  ALL or default keywords. If the -p flag is
  specified, the rmuser command also removes passwords and other
  user authentication information from the /etc/security/passwd
  file.
  
  Only the root user can remove administrative users, those users
  that have the admin attribute set to true in the
  /etc/security/user file.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit rmuser
  
  Flag
  
  -p    Removes user password information from the /etc/security/passwd
  file.
  
  Security
  
  Access Control: This command should grant execute (x) access only
  to the root user  and members of the security group.  The command
  should have the trusted computing base attribute and run setuid
  to the root user to access the user database.
  
  Files Accessed:
  
  Mode  File
  
  rw    /etc/passwd
  
  rw    /etc/security/passwd
  
  rw    /etc/security/user
  
  rw    /etc/security/limits
  
  rw    /etc/security/environ
  
  rw    /etc/security/audit/config
  
  rw    /etc/group
  
  rw    /etc/security/group
  
  Auditing Events:
  
  Event Information
  
  USER_Remove   user
  
  Examples
  
  1.    To remove the user davis account and its attributes from the
  local system:
  
  rmuser davis
  
  2.    To remove the user davis account and all its attributes, in-
  cluding passwords and other  user  authentication  information in
  the /etc/sec/passwd file, enter:
  
  rmuser -p davis
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/rmuser   Specifies the path to the rmuser command.
  
   /etc/passwd  Contains the basic attributes of users.
  
   /etc/security/passwd         Contains password information.
  
   /etc/security/limits Defines resource quotas and limits for each
  user.
  
   /etc/security/user   Contains the extended attributes of users.
  
   /etc/security/environ        Contains environment attributes of users.
  
   /etc/security/audit/config   Contains audit configuration informa-
  tion.
  
   /etc/group   Contains the basic attributes of groups.
  
   /etc/security/group  Contains the extended attributes of groups.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  access,  attribute,  authentica-
  tion,  character,  character string,  group,  home directory, 
  keyword,  parameter,  password,  path,  program,  root user, 
  setuid,  system,  user.
  
         Security Introduction describes the identification and authenti-
  cation  of  users, discretionary access control, the trusted com-
  puting base, and auditing.
  
  Related Information
  
  The  chfn command,  chgrpmem command,  chsh command,  chgroup
  command,  chuser command,  lsgroup command,  lsuser command, 
  mkgroup command,   mkuser command,  passwd command, 
  pwdadm command,  rmgroup command,  setgroups command, 
  setsenv command.
  
  
  
  

  mkclient Command
  
  
  Purpose
  
  Uncomments the entry in the /etc/rc.nfs file for the ypbind dae-
  mon and starts the ypbind daemon to configure a client.
  
   Syntax
  
  /usr/etc/yp/mkclient [  -I |  -B |  -N ]
  
  Description
  
  The mkclient command uncomments the entry to the /etc/rc.nfs file
  to start the ypbind daemon to configure a client. The mkclient
  command starts the ypbind daemon by using the appropriate  System
  Resource Controller (SRC) command.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit mkclient
  
  Flags
  
  -I    Uncomments the entry for starting the ypbind daemon to the
  /etc/rc.nfs file.  This entry causes the ypbind
  daemon to start during the next system restart.
  
  -B    Uncomments the entry to the /etc/rc.nfs file and starts the
  ypbind daemon.  This flag is the default.
  
  -N    Causes the startsrc command to start the ypbind daemon.  This
  flag does not affect the /etc/rc.nfs file.
  
  Example
  
  To modify the /etc/rc.nfs file so that the ypbind daemon is
  started on the next system restart, enter:
  
  mkclient -I
  
  Implementation Specifics
  
  This command is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  Files
  
  /etc/yp/domainname directory  Contains the NIS maps for the NIS
  domain.
  
  /etc/rc.nfs   Contains the startup script for the NFS and NIS dae-
  mons.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  daemon.
  
  For information about managing NIS, see  Network Information Ser-
  vice (NIS) Overview for System Management.
  
  Related Information
  
  The  mkmaster command,  rmyp command,  smit command,  startsrc
  command.
  
  The  ypbind daemon,  yppasswdd daemon,  ypserv daemon,  ypupdated
  daemon.
  
   Network File System (NFS) Overview for System Management.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
   System Management Interface Tool (SMIT) Overview,  System
  Resource Controller Overview.
  
  

  rmsnaobj Command
  
  
  Purpose
  
  Deletes one or more aliases, profiles, or combination and all the
  objects' aliases from the SNA configuration database.
  
   Syntax
  
  rmsnaobj  -t ObjectType ProfileName ProfileName ...
  
  Description
  
  The rmsnaobj command deletes one or more aliases, profiles, or
  combination and all the objects' aliases  from the SNA configura-
  tion database.  When called with an ObjectType and ProfileName
  that refer to an alias, this command removes that alias
  from the SNA configuration database.
  
  When called with an ObjectType and ProfileName that refer to a
  profile that may be removed, rmsnaobj command removes the profile
  and all its aliases from the SNA configuration database. The
  ProfileName parameter specifies the name of the alias or
  profile to be deleted.  Default and special  profiles,  which are
  required for the successful execution of SNA, cannot be removed.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit rmsnaobj
  
  Flags
  
  -t ObjectType Specifies the profile type of the alias or profile
  to be deleted.
  
  Example
  
  You have connection profiles named CONNECT1, CONNECT2, and
  CONNECT3.  THREE is an alias for CONNECT3.
  You have local LU profiles named LOCAL1 and LOCAL2.  LU2 is an
  alias for LOCAL2.  You wish to remove the connection profile
  CONNECT2, the local LU profile LOCAL2, and the
  THREE alias from CONNECT3.  Removing LOCAL2 also removes the LU2
  alias.  Enter the following commands:
  
  rmsnaobj -t connection CONNECT2 THREE
  
  rmsnaobj -t local_lu LOCAL2
  
  Implementation Specifics
  
  This command is part of AIX Systems Network Architecture Ser-
  vices/6000.
  
  This command is not available for Japanese Language Support.
  
  Files
  
  /usr/bin      Directory in which the rmsnaobj command resides.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  mksnaobj command,  chsnaobj command.
  
  The  System Management Interface Tool (SMIT) Overview.
  
  

  mknfs Command
  
  
  Purpose
  
  Configures the system to run NFS.
  
   Syntax
  
  /ust/etc/mknfs [  -I |  -N |  -B ]
  
  Description
  
  The mknfs command configures the system to run the NFS daemons.
  The mknfs command adds an entry to the inittab file so that the
  /etc/rc.nfs file will be executed on system res-
  tart.
  
  Flags
  
  -I    Adds an entry to the inittab file to execute the /etc/rc.nfs
  file on system restart.
  
  -N    Executes the /etc/rc.nfs file to start the NFS daemons immedi-
  ately.    When  started  this way, the daemons run until the next
  system restart.
  
  -B    Adds an entry to the inittab file to execute the /etc/rc.nfs
  file on system restart.  The mknfs command also executes the
  /etc/rc.nfs file immediately to start  the  NFS
  daemons.  This flag is the default.
  
  Implementation Specifics
  
  This command is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  Files
  
  inittab       Controls the initialization process of the system.
  
  /etc/rc.nfs   Contains the startup script for the NFS and NIS dae-
  mons.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  configure,  daemon,  default,  flag.
  
  For more information about NFS, see  Network File System (NFS)
  Overview for System Management.
  
  Related Information
  
  The  chnfs command,  mknfsexp command,  mknfsmnt command,  rmnfs
  command.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
   How to Set Up NFS on Your Network .
  
  

  psrev Command
  
  
  Purpose
  
  Reverses the page order of a PostScript file and selects a page
  range for printing.
  
   Syntax
  
  psrev [  -R ] [  -s Pagespec,... ] [ File ]
  
  Description
  
  The psrev command reverses the page order of the file specified
  by the File variable and prints the pages specified by the
  Pagespec parameter.  The psrev command writes
  the resulting file to the standard output.
  
  Note: The file specified by the File variable must conform to the
  PostScript file structuring conventions.
  
  If no File variable is specified, the psrev command reads from
  standard input.
  
  Flags
  
  -R    Does not reverse the page order (but subsets the pages if
  specified).
  
  -sPagespec    Specifies a range (or several ranges) of pages to be
  printed.  The Pagespec parameter is a string, not containing
  spaces, of the following form:
  
  Pagespec,...
  
        The Pagespec parameter may be a single page number or a range of
  the form N-M, which prints pages N through M.  -N prints from the
  beginning of the document to page N.  M- prints from page M to
  the end of the document.
  
  Files
  
  /usr/tmp/RV*  Contains the temporary file if the input is a pipe.
  
  Related Information
  
  The  enscript command.
  
  

  usrck Command
  
  
  Purpose
  
  Verifies the correctness of a user definition.
  
   Syntax
  
  usrck {  -n |   -p |  -t |  -y } {ALL   | User . . .}
  
  Description
  
  The usrck command verifies the correctness of the user defini-
  tions in the user database files, by checking the definitions for
  ALL the users or for the users specified by the User parameter.
  If more than one user is specified, there must be a space between
  the names.  You must select a flag to indicate whether the system
  should try to fix erroneous attributes.
  
  The command first checks the entries in the /etc/passwd file.  If
  you  indicate  that the system should fix errors, duplicate  user
  names  are  reported  and removed, but duplicate IDs are reported
  only, since there is no system fix.  If an entry has  fewer  than
  six colon-separated fields, the entry is reported, but not fixed.
  The usrck command next checks specific user attributes in other
  files.
  
  A list of all the user attributes follows, with notations stating
  which attributes are checked:
  
  admgroups     Checks to see if the admgroups are defined in the user
  database  and, if you indicate that the system should fix errors,
  the command removes any groups that are not in the database.
  
  auditclasses  Checks to see if the auditclasses are defined for the
  user in the /etc/security/audit/config file.  If you indicate
  that  the system should fix errors, the command deletes  all  the
  auditclasses      that     are     not     defined     in     the
  /etc/security/audit/config file.
  
  auth1 Checks the primary authentication method.  Unless the method
  is   NONE   or   SYSTEM,   it    must    be    defined   in   the
  /etc/security/login.cfg file and the program at-
  tribute must exist and be executable by the root  user.    If you
  indicate  that  the system should fix errors, it will disable the
  user account if an error is found.
  
  auth2 Checks the secondary authentication method.  Unless the
  method   is   NONE  or  SYSTEM,  it  must  be  defined   in   the
  /etc/security/login.cfg file and the program at-
  tribute  must exist and be executable by the root user.  There is
  no system fix.
  
  core  Checks to ensure that the values are sensible.  If not, the
  command resets the values to 200 blocks, the minimum value.
  
  cpu   Checks to ensure that the values are sensible.  If not, the
  command resets the values to 120 seconds, the minimum value.
  
  data  Checks to ensure that the values are sensible.  If not, the
  command resets the values to 128 blocks (64K), the minimum value.
  
  expires       No check.
  
  fsize Checks to ensure that the values are sensible.  If not, the
  command resets the values to 200 blocks, the minimum value.
  
  gecos No check.
  
  home  Checks the existence and accessibility of the home directory
  by read mode  and  search  mode.  If you indicate that the system
  should  fix  errors, it will disable the user account if an error
  is found.
  
  id    Checks the uniqueness of the user ID.  If you indicate that the
  system should fix errors,  the  command deletes any invalid entry
  in the /etc/passwd file.
  
  login No check.
  
  name  Checks the uniqueness and composition of the user name.  The
  name must be an alphanumeric string of not  more  that  8 charac-
  ters, and begin with an alphabetic character.  The name cannot be
  the ALL or default keywords.  If you indicate that the system
  should fix errors,  the  command will disable the user account if
  an error is found and delete any invalid entry in the /etc/passwd
  file.
  
  pgrp  Checks for the existence of the primary group in the user da-
  tabase.  If you indicate that the system  should  fix  errors, it
  will disable the user account if an error is found.
  
  rlogin        No check.
  
  rss   Checks to ensure that the values are sensible.  If not, the
  command resets the values to 128 blocks (64K), the minimum value.
  
  shell Checks the existence and accessibility of the shell by exe-
  cute mode.  If you indicate that the system should fix errors, it
  will disable the user account if an error is found.
  
  stack Checks to ensure that the values are sensible.  If not, the
  command resets the values to 128 blocks (64K), the minimum value.
  
  su    No check.
  
  sugroups      Checks for the existence of the sugroups in the user da-
  tabase files.  If you indicate that the system should fix errors,
  it will delete all the groups that are not in the database.
  
  sysenv        No check.
  
  tpath Checks to ensure that the shell attribute is tagged as a
  trusted process if tpath=always.  If you indicate that the system
  should fix errors, it will disable  the  user account if an error
  is found.
  
  ttys  Checks for the existence of the ttys in the user database
  files.  If you indicate  that  the  system  should fix errors, it
  will delete  all  the  ttys that do not exist from the user data-
  base.
  
  usrenv        No check.
  
  If the fix involves disabling a user account, use the chuser com-
  mand to re-set the value of the expires attribute to an expired
  date and time.  You can use the System Management Interface  Tool
  (SMIT) to run the chuser command by entering:
  
  smit chuser
  
  The root user or a member of the security group can re-enable a
  user account by removing the expires attribute or setting the
  expires attribute  to  a  future  date and time.
  The root user's account is not disabled by the usrck command.
  
  Generally, the sysck command calls the usrck command as part of
  the verification of a trusted-system installation.  If the usrck
  command finds any errors in the user database, the root user or a
  member of the security group should execute both the grpck com-
  mand and the pwdck command.
  
  The usrck command checks to see if the database management pass-
  word files (the etc/passwd.dir file and the /etc/passwd.pag file)
  are  up-to-date or newer than  the  system  password  files  (the
  /etc/passwd file and the /etc/security/passwd
  file).    If  the database management password files are
  out-of-date, a warning message appears  indicating  that the root
  user should run the mkpasswd command.
  
  Flags
  
  -n    Reports errors but does not fix them.
  
  -p    Fixes errors but does not report them.
  
  -t    Reports errors and asks if they should be fixed.
  
  -y    Fixes errors and reports them.
  
  Security
  
  Access Control:
  
  This command should grant execute (x) access to the root user and
  members of the security group.    The command should be setuid to
  the root user and have the trusted computing base attribute.
  
  Files Accessed:
  
  Mode  File
  
  r     /etc/passwd
  
  r     /etc/security/user
  
  rw    /etc/security/group
  
  rw    /etc/group
  
  rw    /etc/security/limits
  
  rw    /etc/security/audit/config
  
  rw    /etc/security/login.cfg
  
  Auditing Events:
  
  Event Information
  
  USER_Check    user, attribute-error, status
  
  Examples
  
  1.    To verify that all the users exist in the user database, and
  have any errors reported (but not fixed), enter:
  
  usrck -n ALL 
  
  2.    To delete from the user definitions those users who are not in
  the user database files, and have any errors reported, enter:
  
  usrck -y ALL  
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/usrck    Specifies the path of the usrck command.
  
   /etc/passwd  Contains basic user attributes.
  
   /etc/security/user   Contains the extended attributes of users.
  
   /etc/group   Contains basic group attributes.
  
   /etc/security/group  Contains the extended attributes of groups.
  
   /etc/security/limits Contains the process resource limits of
  users.
  
  / etc/security/audit/config   Contains audit system configuration
  information.
  
   /etc/security/login.cfg      Contains configuration information.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  access,  attribute,  flag, 
  group,  keyword,  parameter,  path,  root user,  setuid,  system,
   trusted computing base,  trusted path,  user,  value,  verify.
  
         Security Introduction describes the identification and authenti-
  cation of users, discretionary  access  control, the trusted com-
  puting base, and auditing.
  
  Related Information
  
  The  grpck command,  pwdck command,  sysck command.
  
  
  
  

  arp Command
  
  
  Purpose
  
  Displays and modifies address resolution.
  
   Syntax
  
  
  
  Display ARP Entries
  
  arp { HostName |   -a }
  
  Delete an ARP Entry
  
  arp  -d HostName
  
  Create an ARP Entry
  
  arp  -s HostName Address [ temp ] [ pub ]
  
  Import ARP Entries from Another File
  
  arp  -f FileName
  
  Description
  
  The arp command displays and modifies the Internet-to-adapter ad-
  dress translation tables used by the  Address Resolution Proto-
  col.  The arp command displays the current ARP entry for the host
  specified by the HostName variable.  The host may be specified by
  name or number, using Internet dotted decimal notation.
  
  Flags
  
  -a    Displays all of the current ARP entries.  Use the crash com-
  mand to look at KMEM or UMUnix variables.
  
  -d HostName   Deletes an entry for the host specified by the
  HostName variable if the user has root user authority.
  
  -f FileName   Causes the file specified by the FileName variable to
  be  read  and multiple entries to  be  set  in  the  ARP  tables.
  Entries in the file should be in the form:
  
  Type HostName AdapterAddress [route] [temp] [pub]
  
  where
  
  Type  Specifies the type of hardware address as follows:
  
        ether for an Ethernet interface
  
        802.3 for an 802.3 interface
  
        802.5 for a Token-Ring interface
  
  HostName      Specifies the remote host.
  
  AdapterAddress        Specifies the hardware address of the adapter for
  this host as six hexadecimal bytes separated  by colons.  Use the
  netstat -v command to display the local hardware ad-
  dress.
  
  route Specifies the route for a Token-Ring interface as defined in
  the Token-Ring header.
  
  temp  Specifies that this ARP table entry is temporary.  The table
  entry is permanent if this argument is omitted.
  
  pub   Specifies that this table entry is to be published, and that
  this system will act as an ARP server responding  to requests for
  HostName,  even though the host address is not
  its own.
  
  -s HostName AdapterAddress [temp] [pub]       Creates an ARP entry for
  the host specified by the HostName variable with the adapter ad-
  dress specified by the AdapterAddress variable.  The adapter ad-
  dress is given as 6 hex bytes separated by colons.  The line must
  be in the following format:
  
  Type HostName AdapterAddress [route] [temp] [pub]
  
  where
  
  Type  Specifies the type of hardware address as follows:
  
        ether for an Ethernet interface
  
        802.3 for an 802.3 interface
  
        802.5 for a Token-Ring interface
  
  HostName      Specifies the host name for which to create an entry.
  
  AdapterAddress        Specifies the hardware address of the adapter for
  this host as 6 hexadecimal  bytes  separated  by colons.  Use the
  netstat -v command to display the local hardware ad-
  dress.
  
  route Specifies the route for a Token-Ring interface as defined in
  the Token-Ring header.
  
  temp  Specifies that this ARP table entry is temporary.  The table
  entry is permanent if this argument is omitted.
  
  pub   Specifies that this table entry is to be published, and that
  this  system will act as an ARP server responding to requests for
  HostName, even though the host address is not
  its own.
  
  Examples
  
  1.    To add a single entry to the arp mapping tables until the next
  time the system is restarted, enter:
  
  arp -s 802.3 host2 0:dd:0:a:85:0 temp
  
  2.    To delete a map table entry for the specified host with the arp
  command, enter:
  
  arp -d host1 flag
  
  Implementation Specifics
  
  This command is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  dotted decimal,  host,  protocol.
  
   Understanding Protocols for TCP/IP.
  
  Related Information
  
   Address Resolution Protocol.
  
  The  crash command,  ifconfig command,  netstat command.
  
  The  inetd daemon.
  
  

  mknamsv Command
  
  
  Purpose
  
  Configures TCP/IP-based name service on a host for a client.
  
   Syntax
  
  mknamsv  -a {"Attribute=Value..." |  -A FileName}
  
  Description
  
  The mknamsv high-level command configures a TCP/IP instance to
  use a name server.  It calls the  namerslv low-level command to
  configure the  resolv.conf file appropriately.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit mknamerslv
  
  Flags
  
  -A FileName   Specifies the name of the file containing named daemon
  initialization information.
  
  -a "Attribute=Value..."       Specifies a list of attributes with
  corresponding values to be used for updating the named server in-
  itialization files in the database.  Attributes available are:
  
  Domain        domain name
  
  NameServer    Internet address of name server in dotted decimal for-
  mat.
  
  Examples
  
  1.    To configure the name server initialization files, enter the
  command in the following format:
  
  mknamsv -a"domain=austin.ibm.com nameserver=192.9.200.1"
  
  In this example the domain name and name server address are up-
  dated.  The previous domain and name server are overwritten.
  
  2.    To configure name server initialization files according to in-
  formation  in  another file, enter the command in  the  following
  format:
  
  mknamsv -A namsv.file
  
  In this example, the file that contains the configuration infor-
  mation is namsv.file.
  
  Implementation Specifics
  
  This command is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/ resolv.conf     Contains DOMAIN name server information for lo-
  cal resolver routines.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  client,  host,  name server,  server.
  
   Understanding Naming for TCP/IP.
  
   Configuring Name Servers for TCP/IP.
  
  Related Information
  
  Understanding the  SMIT Interface for TCP/IP.
  
  The  namerslv command.
  
  
1
  uux Command
  
  
  Purpose
  
  Runs a command on another AIX or UNIX-based system.
  
   Syntax
  
  uux [ -c| -C] [ -n| -z] [ -] [ -aName] [ -b]  [ -gGrade] [] [ -r] [ -sFile] [ -xDebugLevel] CommandString
  -p] [ -r] [ -sFile] [ -xDebugLevel] CommandString
  
  Description
  
  The uux command is a Basic Networking Utilities (BNU) command
  that runs a specified command on a  specified  AIX or other UNIX-
  based system while enabling the user to continue  working  on the
  local system.  Before running the requested command, the uux com-
  mand gathers any  necessary  files  from  the designated systems.
  The user can direct the output  from  the  command  to a specific
  file on a specific  system.  For security reasons, many installa-
  tions permit the uux command to run only the  rmail command.
  
  The uux commands on other systems create execute (X.*) files that
  run AIX commands on the local system.  In addition, the uux com-
  mand on the local system creates both command (C.*) files and
  data (D.*) files for transfer to other systems.  Execute files
  contain the command string  to be executed on the designated sys-
  tem.  Command files contain the same information as those created
  by the  uucp command.  Data files either contain the data for a
  remote command execution or else become X.* files on remote sys-
  tems for remote command executions.
  
  The full path name of an execute file is a form of the following:
  
  /usr/spool/uucp/System/X.SystemNxxxx
  
  After creating the files in the spooling directory, the uux com-
  mand calls the  uucico daemon to transfer the files from the
  spooling directory on the local  system  to the designated remote
  system.  Once the files are transferred, the  uuxqt daemon on the
  remote system executes the CommandString on the specified system,
  placing any output from the command in the file designated by the
  original uux command request.
  
  The CommandString argument is made up of one or more arguments
  that look like an AIX command line, except that CommandString ar-
  gument may  be  prefixed  by the name of the remote system in the
  form System!.  The default System is the local system.  Unless
  the user entering the uux command includes the  -n flag, the com-
  mand notifies that user if the remote  system  does  not  run the
  command.  This response comes by mail from the remote system.
  
  Source and Destination File Names
  
  *     When specifying the destination of the output of a command, the
  uux command can be entered in either one of the following
  formats:
  
  -     uux [Options] "CommandString> Destination"
  
  -     uux [Options] CommandString\ {Destination\}.
  
  *     Destination names can be either of the following:
  
  -     A full path name.
  
  -     A full path name preceded by \~User, where User is a login name
  on the specified system.  The uux command replaces this path name
  with the user's login directory.
  
  *     The shell pattern-matching characters ? (question mark), * (as-
  terisk), and [ ... ] (brackets) can be used in the path name of a
  source file (such as files compared by the  diff command); the
  appropriate  system expands them.  However, using the * character
  may occasionally  produce unpredictable or unanticipated results.
  Shell pattern-matching characters  should not be used in the des-
  tination path name.
  
  *     Place either two backslashes (\ . . . \) or a pair of quota-
  tion  marks  (" . . . ")  around pattern-matching characters in a
  path name so the local shell cannot interpret them before the uux
  command sends the command to a designated system.
  
  *     If you are using the special shell characters > (greater than),
  < (less than),  ;  (semicolon),  or  |  (vertical bar) in a path
  name, place either \ . . . \ or " . . . " around the individual
  character or around the entire command string.
  
  *     Do not use the shell redirection characters << or >> in a path
  name.
  
  *     The uux command attempts to move all files specified on the com-
  mand line to the designated system.    Enclose  the  names of all
  output files in parentheses so that the uux command does not try
  to transfer them.
  
  *     When specifying a System, always place it before the
  CommandString argument in the entry. System
  names can contain only ASCII characters.
  
  *     The ! (exclamation point) preceding the name of the local system
  in a  command is optional.  If you choose to include the ! to run
  a command on the  local system using files from two different re-
  mote systems, use ! instead of System! to represent the local
  system, and add System! as the first entry in any path name on
  the remote systems.
  
  *     The exclamation point representing a system in BNU syntax has a
  different meaning in C shells.  When running the uux command in a
  C shell, place a \ (backslash) before the exclamation point in a
  system name.
  
  Note: The notation \~ (tilde) is the shorthand way of specifying
  the public spooling directory,  /usr/spool/uucppublic.
  
  Flags
  
  -     Makes the standard input to the uux command the standard input
  to the CommandString argument.
  
  -aName        Replaces the user ID of the person issuing the command with
  the user ID specified with the Name variable.
  
  -b    Returns standard input to the command if the exit status is not
  zero.
  
  -c    Transfers the source files to the destination on the specified
  system.  The source files are copied into the spooling directory,
  and the uucico daemon is invoked immediately.  This flag is the
  default.
  
  -C    Transfers the source files to the spool directory.  After a set
  period of time (specified in the uusched program), the  uucico
  daemon attempts to transfer the files to the destination  on  the
  specified computer.
  
  Occasionally, there are problems in transferring a source file;
  for  example, the remote computer may not be working or the login
  attempt  may  fail.  In such cases, the file remains in the spool
  directory until it is either  transferred successfully or removed
  by the  uucleanup command.
  
  -gGrade       Specifies when the files are to be transmitted during a
  particular connection.  The Grade variable specifies a single
  number  (0 through 9) or letter (A through Z, a through z); lower
  ASCII-sequence characters  cause the files to be transmitted ear-
  lier than do higher sequence characters.    The  number  0 is the
  highest (earliest) grade; z is the lowest  (latest).  The default
  is N.
  
  -j    Displays the job identification number of the process that is
  running the command on  the  specified  system.   Use this job ID
  with the BNU  uustat command to check the status of the command
  or with the  uustat -k flag to terminate the process.
  
  -n    Prevents user notification by the  mail command of the success
  or failure of a command.  The  default  is  to notify the user if
  the command fails.
  
  -p    Uses the standard input to the uux command as the standard in-
  put to the CommandString argument.  A - (minus) has the same ef-
  fect.
  
  -r    Prevents the starting of the spooling program that transfers
  files between systems.  The default is to start the spooling pro-
  gram.
  
  -sFile        Reports the status of the transfer in a file specified by
  the File variable on the designated system.  File names can con-
  tain only ASCII characters.
  
  -xDebugLevel  Displays debugging information on the screen of the
  local system.  The DebugLevel variable must be a number from 0 to
  9. A higher number gives a more detailed report.
  
  -z    Notifies the user if the command completes successfully.  This
  flag is the opposite of the system default, which  is  to  notify
  the user only in the event of a failure.
  
  Examples
  
  1.    To run the qprt command on a remote system, enter:
  
  uux merlin!qprt /reports/memos/lance
  
  In this example, the remote file /reports/memos/lance is printed
  on remote system merlin.  Since neither the  -n nor  -z flag is
  specified, the uux command notifies the user only if the remote
  system fails to run the command.  The response comes by the  mail
  command from the remote system.
  
  2.    To run commands on two remote systems, enter the information on
  separate command lines:
  
  uux merlin!qprt /reports/memos/lance
  uux zeus!qprt /test/examples/examp1
  
  In this example, the remote /reports/memos/lance file is printed
  on remote system merlin, and the remote /test/examples/examp1
  file is printed on remote system zeus.  Since neither the  -n nor
   -z flag is specified, the uux command notifies the user only if
  the remote  system  fails to run the command.  The response comes
  by the  mail command from the remote system.
  
  3.    To queue a job that compares a file on the local system with a
  file on a remote system, using the  diff command on the local
  system, and get the job ID of the job, enter:
  
  uux -j "/bin/diff /usr/amy/f1 hera!/u/amy/f2 > \~/f1.diff"
  
  In this example, the /usr/amy/f1 file on the local system is com-
  pared to the /u/amy/f2 file on the remote system hera and the
  output is placed in the f1.diff file in the local public directo-
  ry    (the    full    path     name     of     this    file    is
  /usr/spool/uucppublic/f1.diff).   The destina-
  tion name must be entered either  preceded  by a > with the whole
  command string enclosed in " " (quotation marks) or entered en-
  closed in braces and backslashes, as \{ DestinationName \}.
  The -j flag causes the uux command to return the BNU job ID of
  the job.
  
  4.    To use the  diff command on the local system to compare files
  that are located on two different remote systems, enter:
  
  uux "!/bin/diff hera!/usr/amy/f1 venus!/u/amy/f2 > !f1.diff"
  
  In this example, the /usr/amy/f1 file from the remote system hera
  is compared to the /u/amy/f2 file from the remote system venus
  and the output is placed in the file f1.diff, located in the
  current working directory on the local system.
  
  The output file must be write-enabled.  If you are uncertain
  about  the  permission  status  of a specific target output file,
  direct the results to the  public  directory.    The  exclamation
  points  representing the local system are optional.  The destina-
  tion name must be entered either preceded by a > with  the  whole
  command string enclosed in " " (quotation marks) or entered en-
  closed in braces and backslashes, as \{ DestinationName \}.
  
  5.    To execute the  diff command on two separate files from dif-
  ferent systems, enter:
  
  uux "hera!/bin/diff /tmp/out1 zeus/tmp/out2 > \~/DF"
  
  In this example, the diff file is on the remote system hera.  The
  first source file is on the remote system hera, and the second-
  file is on the system zeus.  (zeus may be the local system or
  another remote  system.) The output is directed to the file DF in
  the public directory on the local system.
  
  6.    To specify an output file on a different remote system, enter:
  
  uux hera!uucp venus!/u/amy/f1 \{merlin!/u/geo/test\}
  
  In this example, the  uucp command is run on the remote system
  hera, and the /u/amy/f1 file, stored on system
  venus, is sent to user geo on system merlin as
  test.  The destination name is entered enclosed
  in braces and backslashes.
  
  7.    To get selected fields from a file on a remote system and place
  them in a file on the local system, enter:
  
  uux "cut -f1 -d: hera\!/etc/passwd > \~/passw.cut"
  
  In this example, the  cut command is run on the local system.
  The  first  field  from each line of the password file on  system
  hera is placed in the passw.cut file in the
  public directory on the local system.  The uux command is running
  in a C shell, so a \ (backslash) must precede the exclamation
  point in the name of the remote system.
  
  Implementation Specifics
  
  This command is part of the Basic Network Utilities Program (BNU)
  in BOS Extensions 1 of AIX Base Operating System.
  
  Files
  
  /usr/bin/uux  Specifies the command pathname.
  
   /usr/spool/uucp      Is the spooling directory.
  
   /usr/spool/uucppublic        Is the public directory.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  directory,  file, remote system
  
  Related Information
  
  The  ct command,  cu command,  mail command,  rmail command,  uu-
  cleanup command,  uucp command,  uuname command,  uupick
  command,  uustat command,  uuto command,  qprt command.
  
  The  sendmail daemon,  uucico daemon,  uuxqt daemon.
  
  
1
  hostname Command
  
  
  Purpose
  
  Sets or displays the name of the current host system.
  
   Syntax
  
  hostname [  HostName ] [  -s ]
  
  Description
  
  The hostname command displays the name of the current host sys-
  tem.  Only users with  root user authority can set the host name.
  The  mkdev command and the  chdev commands also set the host name
  permanently.  Use the mkdev command when you are defining the
  TCP/IP instance for the first time.
  
  You can use the System Management Interface Tool (SMIT) to set
  the host name permanently.  To use SMIT, enter:
  
  smit mkhostname
  
  Flag
  
  -s    Trims any domain information from the printed name.
  
  Parameter
  
  HostName      Sets the primary name of the host.
  
  Note: You must have root user authority to use the HostName
  parameter.
  
  Implementation Specifics
  
  This command is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  host,  name server,  network address.
  
   Understanding Naming for TCP/IP.
  
  Related Information
  
  The  chdev command,  gethostname command,  mkdev command, 
  sethostname command.
  
  
1
  errdead Command
  
  
  Purpose
  
  Extracts error records from a system dump.
  
   Syntax
  
  errdead
  
  Description
  
  The errdead command extracts error records from a system dump
  containing the internal buffer maintained by the /dev/error file.
  The errdead command extracts the error records from the dump file
  and adds those error records directly to the system error log.
  
  The error log daemon need not be running when the errdead command
  is run.
  
  Example
  
  1.    To create a dump image file from the previous system dump,
  enter:
  
  /usr/lib/errdead /usr/adm/ras/dumpfile
  
  Implementation Specifics
  
  The errdead command invokes the system dump format utility
  /usr/adm/ras/dmprtns/dmpfmt -x -C errlg -A to extract
  the log buffer from the dump image.
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The  Error Logging Overview.
  
        The following glossary entries:  buffer,  command,  daemon, 
  dump,  error log,  extract,  file,  format,  image,  log,  system
  dump,  system,  user.
  
  Related Information
  
  The  errdemon daemon.
  
  The  errclear command,  errinstall command,  errlogger command, 
  errmsg command,  errpt command,  errstop command,  errup-
  date command.
  
  The  Error Logging Overview.
  
  
1
  lssrc Command
  
  
  Purpose
  
  Gets the status of a subsystem, a group of subsystems, or a sub-
  server.
  
   Syntax
  
  
  
  Status All
  
  lssrc [  -h Host ]  -a
  
  Group Status
  
  lssrc [  -h Host ]  -g GroupName
  
  Subsystem Status
  
  lssrc [  -h Host ] [  -l ]  -s Subsystem
  
  Status by PID
  
  lssrc [  -h Host ] [  -l ]  -p Subsystem PID
  
  Subserver Status
  
  lssrc [  -h Host ] [  -l ]  -t Type [  -p SubsystemPID ] [  -o
  Object ] [  -P SubserverPID ]
  
  Description
  
  The lssrc command sends a request to the System Resource Con-
  troller to get status on  a  subsystem, a group of subsystems, or
  all subsystems.  The lssrc command sends a subsystem request
  packet to the daemon  to be forwarded to the subsystem for a sub-
  server status or a long subsystem status.
  
  When the  -l flag is absent, the status request is assumed to be
  a short  status.  A short status of a subsystem, group of subsys-
  tems,  or  all subsystems is handled by the System Resource  Con-
  troller.
  
  When the  -l flag is present for a subsystem, a status request is
  taken to the subsystem and  the  subsystem sends the status back.
  The  -l flag is supported only for those subsystems not using
  signals as their communication  method.    For  either  a long or
  short status of a subserver, the subsystem  is  sent a status re-
  quest packet, and the subsystem sends the status back.
  
  Flags
  
  -a    Specifies that status is requested for all subsystems.
  
  -g GroupName  Specifies a group of subsystems to get status for.
  The command is unsuccessful if the GroupName name is not con-
  tained in the subsystem object class.
  
  -h Host       Specifies the foreign host on which this status action is
  requested.
  
  -l    Specifies that a long subsystem or a long subserver status is
  requested.  Long status requires that a status request be sent to
  the subsystem; it is the responsibility  of  the subsystem to re-
  turn the status.
  
  -o Object     Specifies that a subserver Object is passed to the sub-
  system as a character string.
  
  -p SubsystemPID       Specifies a particular instance of the
  SubsystemPID parameter  to  get status for, or a
  particular instance of the subsystem  to  which  the  status sub-
  server request is to be taken.
  
  -P SubserverPID       Specifies that a SubserverPID is to be passed to
  the subsystem as a character string.
  
  -s Subsystem  Specifies a subsystem to get status for.  The
  Subsystem name can be the actual  subsystem name
  or the synonym name for the subsystem.  The command is unsuccess-
  ful if the Subsystem name is not contained in the subsystem ob-
  ject class.
  
  -t Type       Specifies a subserver to get status for.  The command is
  unsuccessful if the subserver Type is not contained in the sub-
  server object class.
  
  Examples
  
  1.    To get the status of all subsystems on the local machine,
  enter:
  
  lssrc -a
  
  This gets the status of all subsystems known on the local
  machine.
  
  2.    To get the status of all subsystems on a foreign host, enter:
  
  lssrc -h zork -a
  
  This gets the status of all subsystems known on the zork machine.
  
  3.    To get the status of the srctest subsystem, enter:
  
  lssrc -s srctest
  
  This gets the status of all instances of the srctest subsystem on
  the local machine.
  
  4.    To get the status of the subsystem by PID, enter:
  
  lssrc -p 1234
  
  This gets the status of the subsystem with the subsystem PID of
  1234 on the local machine.
  
  5.    To get the status of the tcpip subsystem group, enter:
  
  lssrc -g tcpip
  
  This gets the status of all instances of subsystems in the tcpip
  group on the local machine.
  
  6.    To get the status of the tester subserver, enter:
  
  lssrc -t tester -p 1234
  
  This gets the status of tester subserver that belongs to the
  srctest subsystem  with  the  subsystem  PID of
  1234 on the local machine.
  
  7.    To get the status of the subsystem by PID, enter:
  
  lssrc -l -p 1234
  
  This gets the long status of the subsystem with the PID of 1234.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /etc/objrepos/SRCsubsys       Specifies the SRC Subsystem Configuration
  Object Class.
  
  /etc/objrepos/SRCsubsvr       Specifies the SRC Subserver Configuration
  Object Class.
  
  /etc/services Defines the sockets and protocols used for Internet
  services.
  
  /dev/SRC      Specifies the AF_UNIX socket file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  subsystem,  subserver,  object class.
  
  The  System Resource Controller Overview gives an explanation of
  subsystems, subservers, and the System Resource Controller.
  
  Related Information
  
  The  System Resource Controller Overview gives an explanation of
  subsystems, subservers, and the System Resource Controller.
  
  
1
  ps630 Command
  
  
  Purpose
  
  Converts Diablo 630 print files to PostScript format.
  
   Syntax
  
  ps630 [  -f Bodyfont ] [  -p File ] [  -s Pitch ] [  -F Boldfont
  ] [ File...  ]
  
  Description
  
  The ps630 command converts Diablo 630 format print files to
  PostScript  format   for   printing   on   a
  PostScript printer.  If no File variable is
  specified, the ps630 command reads from standard input.  By de-
  fault, the PostScript file is sent to the standard output.
  
  The ps630 command can convert nroff files generated with the
  -Txerox flag.  Typewheel emulation information
  can be  specified  as options.  Font specifications (for bold and
  regular) are PostScript font names (such asTimes-Roman, Times-
  Bold, Courier-Bold, Courier-BoldOblique).  Ten,  twelve,  or fif-
  teen characters per inch can be selected.
  
  Some applications produce ``bold'' by double-striking a charac-
  ter.    This  will  not  appear  as  bold  when  translated  into
  PostScript format.  Only the bold produced by issuing
  the  proper Diablo command sequence (Esc-O) will result  in  bold
  characters.
  
  The output of the ps630 command cannot be page-reversed.  Times-
  Roman and Helvetica are narrow fonts that may look squeezed if no
  adjustment of page width is made by the application.
  
  The following Diablo 630 commands are not supported: print
  suppression, HY-Plot, extended character  set,  downloading print
  wheel information  or  program  mode,  page lengths other than 11
  inches, paper feeder control, hammer energy control, remote diag-
  nostic, backward printing control.
  
  Note: The Diablo 630 command for ``reverse printing'' is support-
  ed.
  
  Flags
  
  -fBodyfont    Sets the font to be used for normal printing.  The de-
  fault is Courier.
  
  -pFile        Causes the PostScript file to be written to the file
  specified by the File parameter rather than to the standard out-
  put.
  
  -sPitch       Selects type size for printing (both the regular and bold
  fonts are scaled to this size).  Pitch  is in characters per inch
  and must be one of 10, 12, or 15.  The default is 12.
  
  -FBoldfont    Sets the font to be used for boldface.  The default is
  Courier-Bold.
  
  Environment Variables
  
  PSLIBDIR      Path name of a directory to use instead of /usr/lib/ps
  for ps630 prologue.
  
  Related Information
  
  The  enscript command, command.
  
  
1
  stty Command (BSD)
  
  
  Purpose
  
  Sets, resets, or reports workstation operating parameters.
  
   Syntax
  
  stty Option
  
  Description
  
  The stty command (BSD) sets certain workstation I/O options for
  the device that is the current standard input.  The stty command
  (BSD) writes its output to the  device  that is the current stan-
  dard output.  If no options are specified,  it  reports the speed
  of the terminal and  the  settings  of  any options that are dif-
  ferent from their defaults.
  
  The stty command (BSD) is called by the line-discipline-
  independent stty command when the stty command encounters options
  it does not recognize.  Unrecognized options are passed as param-
  eters to the line-discipline-dependent stty command associated
  with the terminal's active line discipline.  When Berkeley is the
  active line descipline, the stty command passes parameters to the
  stty command (BSD).
  
  Note: The stty command (BSD) does not make compatibility checks on
  any parameter combinations.
  
  Flags
  
  all   Reports all normally used option settings.
  
  cbreak        Makes each character available to the read subroutine as
  received  with  no  erase and kill processing, but all other pro-
  cessing, such as interrupt and suspend is performed.
  
  -cbreak       Makes characters available to read only when a new-line
  character is received.
  
  cooked        See the  -raw option.
  
  echo  Echoes back every character typed.
  
  -echo Does not echo characters.
  
  ek    Sets erase and kill characters to the # (pound sign) and @ (at
  sign), respectively.
  
  even  Allows even parity input.
  
  -even Does not allow even parity input.
  
  everything    Everything the stty command knows about is printed.
  
  lcase Maps uppercase to lowercase characters.
  
  -lcase        Does not map case.
  
  odd   Allows odd parity input.
  
  -odd  Does not allow odd parity inputs.
  
  nl    Accepts only a new-line character to end lines.
  
  -nl   Allows carriage return for new-line characters, and output
  CR/LF for carriage return or new-line characters.
  
  raw   Allows raw mode input (no input processing, such as erase,
  kill, or interrupt); parity bit passed back.
  
  -raw  Does not allow raw mode.
  
  speed Prints only the terminal speed to standard output.
  
  size  Prints the terminal (window) sizes to standard output (first
  rows and then columns).
  
  tabs  Preserves tabs.
  
  -tabs Replaces tabs with spaces when printing.
  
  tandem        Enables flow control so that the system sends out the stop
  character  when its internal queue is in danger of overflowing on
  input.  Sends the start character when the system is ready to ac-
  cept further input.
  
  -tandem       Disables stop/start flow control.
  
  The following options take a character argument, c.  You can also
  specify c as `u' or `undef', which sets the value to be unde-
  fined.  The value '\^x', a two-character sequence, is also inter-
  pereted as a control character, with '\^?' representing delete.
  
  erase c       Sets erase character to the key sequence specified by c
  (default Ctrl-H).
  
  kill c        Sets kill character to the key sequence specified by c
  (default (Ctrl-U).
  
  intr c        Sets interrupt character to the key sequence specified by c
  (default (Ctrl-C).
  
  quit c        Sets quit character to the key sequence specified by c (de-
  fault Ctrl-\).
  
  start c       Sets start character to the key sequence specified by c
  (default Ctrl-Q).
  
  stop c        Sets stop character to the key sequence specified by c (de-
  fault Ctrl-S).
  
  eof c Sets end-of-file character to the key sequence specified by
  c (default Ctrl-D).  This character is an addi-
  tional character causing wakeup.
  
  brk c Sets break character to the key sequence specified by c (de-
  fault undefined).  This character is an additional character
  causing wakeup.
  
  cr0, cr1, cr2, cr3    Selects the style of delay for carriage return.
  
  n10, n11, n12, n13    Selects the style of delay for line feed.
  
  tab0, tab1, tab2, tab3        Selects the style of delay for tab.
  
  ff0, ff1      Selects the style of delay for form feed.
  
  bs0, bs1      Selects the style of delay for back space.
  
  tty33 Sets all modes suitable for the Teletype Corporation Model
  33 terminal.
  
  tty37 Sets all modes suitable for the Teletype Corporation Model
  37 terminal.
  
  vt05  Sets all modes suitable for the Digital Equipment Corp.  VT05
  terminal.
  
  dec   Sets all modes suitable for the Digital Equipment Corp.
  operating systems users (erase, kill, and interrupt characters to
  \^?, \^U, and \^C, decctlq and ``newcrt'').
  
  tn300 Sets all modes suitable for a General Electric TermiNet 300.
  
  ti700 Sets all modes suitable for Texas Instruments 700-series
  terminals.
  
  tek   Sets all modes suitable for Tektronix 4014 terminals.
  
  0     Hangs up the phone line immediately.
  
  50, 75, 110, 134, 200, 300, 600, 1200, 1800, 2400, 4800, 9600,
  19200, 38400, exta, extb      Sets baud rate to the
  number given, if possible.  (All  speeds are not supported by all
  hardware interfaces.)
  
  rows n        Records the terminal's size as having n rows.
  
  columns n     Records the terminal's size as having n columns.  This
  command can be abbreviated: cols n.
  
  The standard (new) Berkeley terminal driver that supports the job
  control processing of the C shell (the  csh command) and the Korn
  shell (the  ksh command) is fully described in  Understanding the
  Berkeley  (sgtty.h File) Line Discipline.  The following  options
  apply to the new Berkeley terminal driver:
  
  new   Uses new device driver (switching to the new driver flushes
  type ahead).
  
  crt   Sets options for a display ( crtbs,  ctlecho and, if >= 1200
  baud,  crterase and  crtkill).
  
  crtbs Echoes backspaces on erase characters.
  
  prterase      Prints terminal echoes erased characters backwards within
  \ (backslash) and / (slash).
  
  crterase      Wipes out erased characters with backspace-space-
  backspace.
  
  -crterase     Leaves erased characters visible; just backspace.
  
  crtkill       Wipes out input on line kill as specified by the  crterase
  option.
  
  -crtkill      Echoes a line-kill character and a new-line character on
  line kill.
  
  ctlecho       Echoes control characters as \^x (and deletes as \^?).
  Prints two backspaces following the EOT character (Ctrl-D).
  
  -ctlecho      Echoes control characters as themselves.  In Cooked mode,
  EOT (Ctrl-D) is not echoed.
  
  decctlq       Specifies that after output is suspended (normally by
  \^S), only a start character (normally \^Q) restarts it.  This is
  compatible with DEC's vendor-supplied systems.
  
  -decctkq      Specifies that after output is suspended, it can be res-
  tarted  by typing any character.  The  start  character  restarts
  output without providing any input.  (This is the default.)
  
  tostop        Specifies that background jobs stop if they attempt termi-
  nal output.
  
  -tostop       Specifies that output is allowed from background jobs to
  the terminal.
  
  tilde Converts \~ (tilde) to ` (grave) on output (for Hazeltine
  terminals).
  
  -tilde        Does not convert \~ (tilde) to ` (grave) on output.
  
  flusho        Specifies that output is being discarded because the user
  pressed the Ctrl-O key sequence (internal state bit).
  
  -flusho       Specifies that output is not being discarded.
  
  pendin        Specifies that input is pending after a switch from the 
  cbreak to the  cooked option, and will be input again
  when a  read becomes pending or when more input arrives (internal
  state bit).
  
  -pendin       Specifies that input is not pending.
  
  pass8 Passes all 8 bits through on input, in any mode.
  
  -pass8        Strips the 0200 bit on input except in raw mode.
  
  mdmbuf        Starts or stops output on carrier transitions (not imple-
  mented).
  
  -mdmbuf       Returns error if write attempted after carrier drops.
  
  litout        Sends output characters without any processing.
  
  -litout       Does normal output processing, inserting delays, and so
  on.
  
  nohang        Specifies that a hang-up signal not be sent if the carrier
  drops.
  
  -nohang       Sends a hang-up signal to the control process group when
  the carrier drops.
  
  etxack        Diablo-style ETX/ACK handshaking (not implemented).
  
  The following special characters are applicable only to the new
  terminal device driver and are not normally changed.
  
  susp c        Sets suspend process character to the key sequence speci-
  fied by c (default Ctrl-Z).
  
  dsusp c       Sets delayed suspend process character to the key sequence
  specified by c (default Ctrl-Y).
  
  rprnt c       Sets reprint line character to the key sequence specified
  by c (default Ctrl-R).
  
  flush c       Sets flush output character to the key sequence specified
  by c (default Ctrl-O).
  
  werase c      Sets word erase character to the key sequence specified
  by c (default Ctrl-W).
  
  lnext c       Sets literal next character to the key sequence specified
  by c (default Ctrl-V).
  
  Examples
  
  1.    To switch to the standard (new) terminal driver, enter:
  
  stty new
  
  2.    To display everything the stty command knows about tty5, enter:
  
  stty everything < /dev/tty5
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  tabs command,  tset command,  csh command,  ksh command, 
  stty command,  stty command (POSIX).
  
  The  terminfo File,  tty Special File.
  
  The  TTY Subsystem Overview.,  National Language Support Over-
  view.
  
   Understanding the Berkeley (sgtty.h File) Line Discipline.
  
  
1
  x_chg_net Command
  
  
  Purpose
  
  Changes an existing Xstation network type.   
  
   Syntax
  
  x_def_net -bFile -dDirectory [-gAddress] -hType [-iAddress]
  [-mMask] -nTypeName -sNumber
  
  Description
  
  The x_chg_net command changes, for the current host, the charac-
  teristics of the Xstation network type specified by the TypeName
  parameter, and stores the changed definition in the /etc/bootptab
  file.  The TypeName parameter must contain x_st_mgr. as a prefix,
  for example, x_st_mgr.ether, and be used with the -n flag.
  
  Flags
  
  -bFile        Specifies the name of the boot file.
  
  -dDirectory   Specifies the home directory of the boot file.
  
  -gAddress     Specifies the  gateway address (the internet address of
  the gateway host).  This parameter is used to establish a connec-
  tion to another host on the network.
  
  -hType        Specifies the type of network hardware.  The Type parameter
  can be ethernet, or tokenring or ieee802.
  
  -iAddress     Specifies the internet (IP) address of the bootserver
  host.  This identifies the bootserver host on the network.
  
  -mMask        Specifies the subnet mask.
  
  -nTypeName    Specifies the name of the network type.  The TypeName
  parameter must contain the prefix x_st_mgr. and can include an
  identifier for the type of hardware network, such as ether (for
  ethernet), tr (for token ring) or 802 (for IEEE 802.3).  The net-
  work type is stored in the /etc/bootptab file.
  
  -sNumber      Specifies the number of the server port in hexadecimal
  notation.  This usually is 1b58 and is in the /etc/services file.
  
  Security
  
  User management is responsible for evaluation, selection, and im-
  plementation of security features.
  
  Example
  
  To change the characteristics of a network type named
  x_st_mgr.ether,  enter a command like the fol-
  lowing:
  
  x_chg_net -nx_st_mgr.ether -bbootfile \
  -d/usr/lpp/x_st_mgr/bin -hethernet -s1b58
  
  In this example, the characteristics include the following: the
  bootfile name is bootfile, the bootfile home directory is
  /usr/lpp/x_st_mgr/bin,  the  network  type  is
  ethernet and the server port number is 1b58.
  
  Implementation Specifics
  
  This command is part of AIX Xstation Manager/6000.
  
  Files
  
  /etc/bootptab The boot protocol table.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  boot,  current host,  gateway host,  host, 
  Internet Protocol (IP),  network,  port,  protocol,  server, 
  subnet address mask.
  
  Related Information
  
  The  bootpd command,  x_add_trm_120 command,  x_add_trm_130 com-
  mand,  x_chg_trm_120 command,  x_chg_trm_130 command,  x_def_net
  command,  x_ls_trm command,  x_ls_net command,  x_rm_net command,
   x_rm_trm command,  xset command.
  
  
1
  mkgroup Command
  
  
  Purpose
  
  Creates a new group.
  
   Syntax
  
  mkgroup [  -a ] [  -A ]  Group
  
  Description
  
  The mkgroup command creates a new group account with the name
  specified by the Group parameter.  The group name must be an al-
  phanumeric character  string  of 8 characters or less that begins
  with an alphabetic character, and cannot be the ALL or default
  keywords.
  
  A standard user group is created unless the -a flag is used to
  create an administrative group.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit mkgroup
  
  Flags
  
  -a    Creates an administrative group.  Only the root user can use
  this flag.
  
  -A    Sets the invoker of the command as the group administrator.
  Otherwise,  the  administrators are as defined in the adms stanza
  of the /etc/security/group file.
  
  Security
  
  Access Control:This command should be a standard user program.
  The command should have the trusted computing base attribute and
  run setuid to the root user to access the user database.
  
  Files Accessed:
  
  Mode  File
  
  r     /etc/passwd
  
  rw    /etc/group
  
  rw    /etc/security/group
  
  rw    /etc/security/.ids
  
  Auditing Events:
  
  Event Information
  
  GROUP_Create  group
  
  Examples
  
  1.    To create a new group account called finance, enter:
  
  mkgroup finance
  
  2.    To create a new administrative group account named finance,
  enter:
  
  mkgroup -a finance
  
  Only the root user can give this command.
  
  3.    To set the invoker of the command as the group administrator,
  enter:
  
  mkgroup -A finance
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/mkgroup  Specifies the path to the mkgroup command.
  
   /etc/group   Contains the basic attributes of groups.
  
   /etc/security/group  Contains the extended attributes of groups.
  
   /etc/passwd  Contains basic user information.
  
   /etc/security/passwd Contains password information.
  
  /etc/security/.ids    Contains standard and administrative user IDs
  and group IDs.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  access,  character,  group, 
  keyword,  parameter,  path,  program,  root user,  setuid, 
  trusted computing base,  user.
  
         Security Introduction describes the identification and authenti-
  cation of users, discretionary access control,  the  trusted com-
  puting base, and auditing.
  
  Related Information
  
  The  chgroup command,  chgrpmem command,  chuser command, 
  lsgroup command,  lsuser command,  mkgroup command,  
  mkuser command,  passwd command,  pwdadm command, 
  rmgroup command,  rmuser command,  setgroups command, 
  setsenv command.
  
  
  
  
1
  rpcgen Command
  
  
  Purpose
  
  Generates C code to implement an RPC protocol.
  
   Syntax
  
  
  
  Generate Four Types of Output Files for a File
  
  /usr/bin/rpcgen InputFile
  
  Generate a Specific Output File for a File
  
  rpcgen {  -c |  -h |  -l |  -m } [  -o OutputFile ] [ InputFile ]
  
  Generate a Server-Side File for TCP or UDP
  
  rpcgen {  -s Transport ... } [  -o OutputFile ] [ InputFile ]
  
  Description
  
  The rpcgen command generates C code to implement a Remote Pro-
  cedure Call (RPC) protocol.  The input to rpcgen is a language
  similar to C known as RPC Language.
  
  The first syntax structure is the most commonly used form for the
  rpcgen command where it takes an input file and generates four
  output files.  For example, if the InputFile is named proto.x,
  then the rpcgen command generates the following:
  
  proto.h       A header file
  
  proto_xdr.c   XDR routines
  
  proto_svc.c   Server-side stubs
  
  proto_clnt.c  Client-side stubs.
  
  Use the other syntax structures when you want to generate a par-
  ticular output file rather than all four output files.
  
  The  cpp command, a C preprocessor, is run on all input files be-
  fore they are actually interpreted by the rpcgen command.  There-
  fore, all the cpp directives are legal within an rpcgen input
  file.  For each type of output file, the rpcgen command defines a
  special cpp symbol for use by the rpcgen programmer:
  
  RPC_HDR       Defined when compiling into header files
  
  RPC_XDR       Defined when compiling into XDR routines
  
  RPC_SVC       Defined when compiling into server-side stubs
  
  RPC_CLNT      Defined when compiling into client-side stubs.
  
  In addition, rpcgen does some preprocessing of its own.  Any line
  beginning with a % (percent sign) passes directly into the output
  file, uninterpreted by the rpcgen command.
  
  To create your own XDR routines, leave the data types undefined.
  For every data type that is undefined, the rpcgen command assumes
  that a routine exists by prepending xdr_ to the name of the unde-
  fined type.
  
  Notes:
  
  1.    Nesting is not supported.  As a work-around, structures can be
  declared at top-level, with their  names used inside other struc-
  tures in order to achieve the same effect.
  
  2.    Name clashes can occur when using program definitions, since
  the apparent scoping does not really apply.  Most of these can be
  avoided  by giving unique  names  for  programs,  versions,  pro-
  cedures, and types.
  
  Flags
  
  -c    Compiles into XDR routines.
  
  -h    Compiles into C data definitions (a header file).
  
  -l    Compiles into client-side stubs.
  
  -m    Compiles into server-side stubs, but does not generate a main
  routine.  This option is useful for  doing call-back routines and
  for writing a main routine to do initialization.
  
  -o  OutputFile        Specifies the name of the output file.  If none is
  specified, standard output is used.
  
  -s Transport  Compiles into server-side stubs, using given tran-
  sport.  The supported transports are udp and tcp.  This option
  may be invoked more than once  to  compile  a  server that serves
  multiple transports.
  
  Implementation Specifics
  
  This command is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  client,  scope,  server.
  
  For more information about NFS, see  Network File System (NFS)
  Overview for System Management.
  
  Related Information
  
  The  cpp command.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
   Remote Procedure Call (RPC) Overview for Programming.
  
  
1
  nl Command
  
  
  Purpose
  
  Numbers lines in a file.
  
   Syntax
  
  nl [  -bType ] [  -fType ] [  -hType ] [  -lNumber ] [ 
  -dDelimiter ] [  -iNumber ] [  -nFormat ] [ 
  -vNumber ] [  -wNumber ] [  -p ] [ 
  -s[Separator ] ] [ File ]
  
  Description
  
  The nl command reads the File parameter (standard input by de-
  fault), numbers the lines  in  the input, and writes the numbered
  lines to standard output.  In the output, the nl command numbers
  the lines  on  the left according to the flags you specify on the
  command line.
  
  The input test must be written in logical pages.  Each logical
  page  has a header, a body, and a footer section  (you  can  have
  empty sections).  Unless you use the  -p flag, the nl command
  resets  the  line numbers at the start of each logical page.  You
  can set line-numbering flags independently for the  header, body,
  and footer sections  (for  example,  no  numbering  of header and
  footer lines while numbering text lines only in the body).
  
  Signal the start of logical page sections with lines in the file
  that contain only the following delimiter characters:
  
  Line Contents Start Of
  
  \:\:\:        Header
  
  \:\:  Body
  
  \:    Footer
  
  You can name only one file on the command line.  You can list the
  flags and the file name in any order.
  
  Flags
  
  All the parameters are set by default.  Use the following flags
  to change these default settings.  Except for the  -s flag, enter
  a flag without a parameter to see its default value.
  
  -bType        Chooses which body section lines to number.  The recognized
  Type parameter values are:
  
  a     Numbers all lines.
  
  t     Does not number blank lines (default).
  
  n     Does not number any lines.
  
  pPattern      Numbers only those lines containing the specified Pattern
  parameter.
  
  -dDelimiter   Uses the two characters specified by the Delimiter
  parameter as the delimiters for the start of a logical  page sec-
  tion.  The default characters  are  \:  (backslash followed by a
  colon).  You may specify two ASCII characters, two 1-byte extend-
  ed characters, or one extended  character.  If you enter only one
  1-byte character after the -d flag, the second character remains
  the default ( a colon).  If you want to use a backslash as a del-
  imiter, enter two backslashes (\\).
  
  -fType        Chooses which logical page footer lines to number.  The
  possible values for the Type parameter are the same as the  -b
  flag.  The default value of the Type parameter is n (no
  lines numbered).
  
  -hType        Chooses which logical page header lines to number.  The
  possible values for the Type parameter are the same as the  -b
  flag.  The default value of the Type parameteris n (no
  lines numbered).
  
  -iNumber      Increments logical page line numbers by the number speci-
  fied in the Number parameter.  The default value of the Number
  parameter is 1.
  
  -lNumber      Uses the value specified in the Number parameter as the
  number of blank lines to count as one.  For example, -l3 only
  numbers the third  adjacent blank line.  The default value of the
  Number parameter is 2.  This flag can only be
  used in documents where the -ba flag is used.
  
  -nFormat      Uses the value of the Format parameter as the line
  numbering format.  Recognized formats are:
  
  ln    Left-justified, leading zeros suppressed.
  
  rn    Right-justified, leading zeros suppressed (default).
  
  rz    Right-justified, leading zeros kept.
  
  -p    Does not restart numbering at logical page delimiters.
  
  -s[Separator] Separates the text from its line number by the char-
  acter specified in the Separator parameter.  The default value of
  the Separator parameter is a tab character.  If you enter the -s
  flag without a parameter, there is no separation between the line
  number and its text.
  
  -vNumber      Sets the initial logical page line number to the value
  specified by the Number parameter, The default value of the
  Number parameter is 1.
  
  -wNumber      Uses the value specified by the Number parameter as the
  number  of  characters  in the line number.  The default value of
  the Number parameter is 6.
  
  Examples
  
  1.    To number only the non-blank lines:
  
  nl chap1
  
  This displays a numbered listing of chap1, numbering only the
  non-blank lines in the body sections.  If chap1 contains no
  \:\:\+:, or \: delimiters, then the entire file is considered
  the body.
  
  2.    To number all lines:
  
  nl -ba chap1
  
  This numbers all the lines in the body sections, including blank
  lines.  This form of the nl command is adequate for most uses.
  
  3.    To specify a different line number format:
  
  nl -i10 -nrz -s:: -v10 -w4 chap1
  
  This numbers the lines of chap1 starting with ten (-v10) and
  counting by tens (-i10).  It displays four digits for each number
  (-w4), including leading zeros (-nrz).  The line numbers are
  separated from the text by two colons (-s : :).
  
  For example, if chap1 contains the text:
  
  A not-so-important
  note to remember:
  
  You can't kill time
  without injuring eternity.
  
  then the numbered listing is:
  
  0010::A not-so-important
  0020::note to remember
  
  0030::You can't kill time
  0040::without injuring eternity.
  
  Note that the blank line was not numbered.  To do this, use the 
  -ba flag as shown in example 2.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /usr/bin/nl   Specifies the nl command file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  standard input and  standard
  output.
  
         Files Overview introduces you to files and the way you can work
  with them.
  
         Input and Output Overview describes how to redirect input and
  output.
  
  Related Information
  
  The  pr command.
  
  
2
  xtalk Command
  
  
  Purpose
  
  Enables you to communicate with another person over an X.25 net-
  work.
  
   Syntax
  
  xtalk [ -n] [  -l EntryName ] [  -q |  -s ]
  
  Description
  
  The xtalk command provides a panel-driven environment where you
  can make or receive a call and then either talk to another person
  by typing messages on a panel, or send and  receive  files.   You
  can  have the details of the other people with whom you  want  to
  communicate in an address list.  The xtalk command also enables
  you  to  view, change, add to, and delete from the address  list.
  The -l flag tells xtalk to listen for incoming calls for the
  EntryName specified.  The EntryName is the name
  of an entry in the routing list.
  
  With the -n flag, the xtalk command starts a process running in
  the background to listen for incoming calls.
  
  Flags
  
  -n    Runs the xtalk process in the background.
  
  -l    Listens for calls for the routing list entry specified by the
  EntryName variable.
  
  -q    Displays the title panel for 2 seconds.
  
  -s    Does not display the title panel.
  
  Examples
  
  1.    To listen for incoming calls for one person whose details are
  specified in the routing list entry named USER2, enter:
  
  xtalk -n -l USER2
  
  2.    To listen for incoming calls; make or receive calls; talk to
  another person; send  or  receive files; view, change, add to, or
  delete from the address list, enter:
  
  xtalk -l USER2
  
  3.    To make or receive calls; talk to another person; send or re-
  ceive files; view, change,  add  to,  or  delete from the address
  list; but not listen for calls, enter:
  
  xtalk
  
  Implementation Specifics
  
  This command is part of X.25 Application in AIX BOS Extensions 2.
  
  Files
  
  /etc/xtalk.names      Contains the systemwide  xtalk address list,
  which  can  be  used by all users on the system to route outgoing
  calls.
  
  $HOME/xtalk.names     Contains the individual user's  xtalk address
  list used to route outgoing calls.
  
  /etc/xrt.names        Contains the  X.25 routing list, used to route in-
  coming calls.
  
  ./OtherUserName.log   Names the message logging file.  The
  OtherUserName variable specifies the address-
  list name of the user with  whom  messages were exchanged, or the
  last eight digits of the other user's network user address.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  address list,  call,  listen,  outgoing call, 
  routing list.
  
   Using the xtalk Command.
  
  Related Information
  
   X.25 Overview.
  
   How to Get xtalk to Listen for Calls,  How to Make a Call with
  xtalk,  How to Receive a Call with xtalk,  How to Have an xtalk
  Conversation,  How to Log an xtalk Conversation,  How to Transfer
  Files with xtalk,  How to End a Call with xtalk,  How to Manage
  xtalk Address Lists,  How to Manage the X.25 Routing List.
  
  The  xcomms command,  xroute command,  xmanage command,  xmonitor
  command,  mail command,  talk command,  ftp command.
  
  
2
  rmserver Command
  
  
  Purpose
  
  Removes a subserver definition from the subserver object class.
  
   Syntax
  
  rmserver  -t Type
  
  Description
  
  The rmserver command removes an existing subserver definition
  from the subserver object class.
  
  Flag
  
  -t Type       Specifies the subserver name that uniquely identifies the
  existing subserver to be removed.  The rmserver command is unsuc-
  cessful if the Type name is not known in the subserver object
  class.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/objrepos/SRCsubsvr       Specifies the SRC Subserver Configuration
  Object Class.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  subserver,  object class.
  
  The  System Resource Controller Overview gives an explanation of
  subsystems, subservers, and the System Resource Controller.
  
  Related Information
  
  The  chserver command,  mkserver command.
  
  The  System Resource Controller Overview gives an explanation of
  subsystems, subservers, and the System Resource Controller.
  
  
2
  nvdmconf Command
  
  
  Purpose
  
  Displays the menu that is used to create or update the NetView
  Distribution Manager (NetView DM) catcher (also known as agent or
  downstream server) configuration file.
  
   Syntax
  
  nvdmconf
  
  Description
  
  When you invoke the nvdmconf command, the menu titled Configura-
  tion  File Maintenance Program appears on the screen.  This  menu
  enables you to create or update the six corresponding information
  fields  in  the NetView DM catcher configuration profile.    Each
  term in the  left menu column identifies one of these information
  fields.    New information is entered in the fields the right  of
  each colon.
  
  Note: A list of applicable options (enclosed in parentheses and
  separated  by  commas) is provided along the right  side  of  the
  menu.
  
  Use the up-down arrow keys (or the tab key) to move from menu
  field to menu field.  Use the alphanumeric keys to enter  new in-
  formation.  Then press the F6 key to update the NetView DM catch-
  er configuration file.  Press the F3 key to return to the AIX
  command prompt.
  
  Note: Press the F5 key to refresh the menu screen with the infor-
  mation stored in the /usr/lpp/nvdm/nvdmrel.cnf configuration
  file.
  
  Menu Fields
  
  Field 1: LU Name for Relay    This field is the LU name in the LU0
  configuration of the LU that is to be used for NetView DM commun-
  ications.  The default is NDMLU.
  
  Field 2: DSN Case Conversion  This field indicates your DSN (Data
  Set Names) case conversion choice.
  
  Note: The Data Set Names of the files in question are specified in
  the S/370 host NetView DM commands.
  
  Enter L in this field to change the case of the DSN to all lower
  case characters, or enter U to change the case of the DSN to all
  upper case characters.
  
  Note: The default is to leave the field blank, which results in no
  DSN case conversion.
  
  Field 3: Log File Option      This field indicates your Log File Option
  choice.  Enter Y in this field to create log messages for all
  NetView DM catcher transactions and errors on the console screen.
  Enter N in this field if no messages are wanted.
  
  Field 4: Default Path for Data Files  This field contains the de-
  fault path to be used for all data files referenced by S/370 host
  NetView DM commands.  (This pathname should not end with a trail-
  ing slash.) Once  set,  this path serves as the path for all data
  sets referenced  by  S/370  host  NetView  DM  that do not have a
  specified path.
  
  Note: The default is to take the path statement specified in the
  S/370 host NetView DM commands.  See the section for  Dataset
  Name Processing for the nvdmrelay Command for related informa-
  tion.
  
  Field 5: File Conversion Option       This field indicates your File
  Conversion Option choice.  Enter Y in this field if you want file
  conversions or file renaming  to be done on all data sets sent or
  received from the S/370 host system.  Enter N in this field if no
  file conversion or renaming should be done.
  
  Field 6: Line Re-open Delay in Secs   This field sets the time in-
  terval in seconds that the NetView DM catcher delays before  try-
  ing to reopen the communication  link  to  the  S/370 host in the
  event of a communication link failure.
  
  Security
  
  Privilege Control: root authority
  
  Implementation Specifics
  
  This command is part of AIX Network Management/6000.
  
  Files
  
  /usr/lpp/nvdm/nvdmrel.cnf     NetView DM Configuration Information
  
  /usr/lpp/lu0/lu0.cnf  LU0 Configuration File
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  The  Alert Manager Overview for Network Management contains in-
  formation about the Alert Manager program.
  
  Related Information
  
  The  nvdmconvCommand the  nvdmrelay Command and the  lu0config
  Command.
  
  The  Host Command Facility Catcher and NetView DM Catcher Over-
  view for Network Management contains additional information about
  these two programs.
  
   List of Alert Manager Commands for Network Management.
  
  
2
  gettable Command
  
  
  Purpose
  
  Gets NIC format host tables from a host.
  
   Syntax
  
  gettable [  -v ] Host [ OutFile ]
  
  Description
  
  The gettable command is used to obtain the Network Information
  Center (NIC) standard  host tables from a server indicated by the
  Host parameter.  The tables,  if  retrieved, are
  placed in the file indicated by the OutFile parameter.
  
  The gettable command opens a TCP connection to the port indicated
  in the service specification for the Host parameter.  A request
  is  then made for all names  and  the  resultant  information  is
  placed in the output file.
  
  The gettable command is best used in conjunction with the  htable
  command, which converts the NIC standard file format to that used
  by the network library lookup routines.
  
  Flag
  
  -v    Gets just the version number instead of the complete host table
  and puts the output in the OutFile file or, by default, in a file
  named the hosts.txt file.
  
  Parameters
  
  Host  The name of the host machine to use in getting the host
  tables.
  
  OutFile       The name of the file to use for placing the host tables.
  The default is the hosts.txt file.
  
  Implementation Specifics
  
  This command is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  daemon,  server.
  
   Transmission Control Protocol (TCP) and  Understanding Protocols
  for TCP/IP.
  
  Related Information
  
  The  htable command.
  
  
2
  tlog Command
  
  
  Purpose
  
  Tests an AUTOLOG script.
  
   Syntax
  
  tlog  SessionName
  
  Description
  
  The tlog command tests an AUTOLOG script with an existing emula-
  tor session to aid in debugging any problems with  the  logon  or
  logoff scripts.
  
  The user invokes an emulator session and notes the session name
  from  the  operator information area.  An emulator SHELL  key  is
  used to create a subshell, and the tlog command is invoked.  The
  user will be prompted for the logonid string (unless specified in
  the session profile) and for the password string.  The tlog com-
  mand issues  a message that testing of the logon script is to be-
  gin in three seconds.  This allows the user enough time to switch
  back to the emulator  session  if  running in another AIX virtual
  terminal and observe  the  behavior  of  the  logon  script.   By
  switching back and forth between the emulator session and the AIX
  virtual terminal running the tlog command, both the behavior of
  the  script  and any messages issued by the test program  can  be
  seen easily.
  
  Return Value
  
  After the logon script completes, the tlog command issues a mes-
  sage indicating  the  exit status from the script.  If the status
  is non zero, the test program terminates.  Otherwise, a prompt is
  displayed  requesting the user to press the Enter key to continue
  testing.
  
  After the Enter key is pressed, a message is displayed indicating
  that testing of the logoff script is to begin in  3 seconds.  The
  user  can  again  observe  the behavior of the script.  After the
  logoff  script completes,  the  exit  status  of  the  script  is
  displayed and the test program terminates.
  
  Parameter
  
  SessionName   Specifies the session in use by the e789 HCON emulator
  from  [a-z].    Capital  letters  are  interpreted  as  lowercase
  letters.
  
  Implementation Specifics
  
  The tlog command is part of the AIX 3270 Host Connection Pro-
  gram/6000 (HCON).
  
  File
  
  /usr/bin directory    Contains the tlog command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
   HCON Overview for Programming introduces the HCON programming
  facilities.
  
  Related Information
  
   Understanding HCON Session Profiles discusses HCON display and
  printer sessions.
  
   Understanding Host Logon Procedures introduces manual and au-
  tomatic logon procedures, and discusses the AUTOLOG facility.
  
   Understanding the HCON Application Programming Interface (API)
  discusses the API and how it is used to write programs,  Under-
  standing the File Transfer Program Interface discusses  transfer-
  ring files between the RISC System/6000 and a host system.  
  Using AUTOLOG Procedures with the HCON API outlines logging on to
  and off of a host system with an API application.
  
  
2
  x_add_trm_120 Command
  
  
  Purpose
  
  Adds an Xstation 120 to the host.
  
   Syntax
  
  x_add_trm_120 120 Name TypeName Address Server Time Device Pan
  Mode Host Program
  
  Description
  
  The x_add_trm_120 command adds the Xstation 120 specified by the
  Name parameter to the current  host,  and stores
  the configuration in the /usr/lpp/x_st_mgr/bin/x_st_mgrd.cf file,
  the /usr/lpp/x_st_mgr/bin/x_st_mgrd.tmty file, and the
  /etc/bootptab file.
  
  Mandatory parameters are:
  
  120   Specifies the Xstation model.  This command can be used only
  for an Xstation 120.
  
  Name  Specifies the name of the Xstation.  The Name parameter can
  be up to 8 characters long  and  include the lower case letters a
  through  z,  the  numbers  0  through 9, the - (dash) and  the  .
  (period).  Name can be a user name, such as taylor, or a group
  name with a number appended, such as graphs-2, and should identi-
  fy  an Xstation by its location in the work place or by the  pri-
  mary user's name.  Name is stored in the /etc/hosts file.
  
  Note:  Name should not start with a lowercase or an uppercase o or
  a lowercase or uppercase x, followed by an  octal  or hexadecimal
  numeric.  These characters are  interpreted  as  octal or hexade-
  cimal numbers, instead of as a terminal name.  In the examples x3
  and xE4, the 3 and the E4 are hexadecimal numerics.
  
  TypeName      Specifies the name you create to identify the type of
  network protocol.  The TypeName parameter must contain the prefix
  x_st_mgr. and can include an identifier for the type of network
  protocol, such as ether (for ethernet), tr (for token ring) or
  802  (for  IEEE  802.3).      An   example  is
  x_st_mgr.ether.  The name of the network type is
  stored in the /etc/bootptab file.
  
  Address       Specifies the  hardware address of the Xstation.  This ad-
  dress appears on the LAN Statistics screen of the Xstation. Each
  Xstation has  a  unique  6-byte  hexadecimal hardware address, in
  XXXXXXXXXXXX format, and cannot be changed by the user.
  
  Server        Identifies the Xstation as a primary or secondary boot
  server.  Two options are valid: y for a primary server and n for
  a secondary server.
  
  Time  Specifies the number of seconds a boot server must wait be-
  fore answering a boot-protocol  broadcast  request.    The  valid
  number for  a primary server is 00, since there is no delay time.
  For a secondary server, refer to the number range in SMIT.
  
  Device        Specifies the input device.  Device must be mouse or
  tablet.
  
  Pan   Specifies whether the hardware pan feature is enabled or dis-
  abled.    The hardware pan feature allows the Xstation to use all
  the  additional video memory for a display area that appears when
  the user pans the  cursor to the edge of the screen.  Two options
  are valid: y enables and n disables the pan feature.
  
  Mode  Specifies the mode used by X Display Manager Control Protocol
  (XDMCP).  XDMCP uses the xdm program to facilitate the connection
  of an X terminal to a remote host.  XDMCP also allows the user to
  turn  an  Xterminal  off and on again and still maintain an esta-
  blished connection to the remote host.  Valid options are:
  
  broadcast     Sends a message to the network and waits for an xdmcp
  host to respond.
  
  direct        Directs a request to an xdmcp manager known to the Xsta-
  tion.
  
  indirect      Sends an indirect request to an xdmcp manager that main-
  tains a list of xdmcp hosts.    The manager assigns an xdmcp host
  to respond to the Xstation.
  
  off   No X Display Manager Control Protocol (XDMCP).
  
  Host  Specifies the internet (IP) address of the xdmcp host used
  for direct  or  indirect  communication with the Xstation.  Valid
  options are none or the internet address of an xdmcp host.  If
  XDMCP is not used or if broadcast mode is used, the value of Host
  is none.  The internet address of an xdmcp host must be specified
  if Mode is direct or indirect.
  
  Program       Identifies the startup program.  This program should be
  the aixterm command with selected options. The startup configura-
  tion is stored in the /usr/lpp/x_st_mgr/bin/x_st_mgrd.cf file.
  
  Security
  
  User management is responsible for evaluation, selection, and im-
  plementation of security features.
  
  Example
  
  To add Xstation taylor to the current host as a primary server,
  enter a command like the following:
  
  x_add_trm_120 120 taylor x_st_mgr.ether 10005ac38e9 y \
  00 mouse n off none \
  /usr/bin/X11/bin/aixterm -W \
  -e /usr/lpp/x_st_mgr/bin/login
  
  Xstation taylor is added to the current host, as defined by the
  parameters: model 120, a network type of ethernet, a hardware ad-
  dress of 10005ac38e9, primary server status, no delay time, input
  from  a  mouse,  no  hardware pan feature, xdmcpmode off, no host
  name, and a startup program that runs the aixterm command with
  two options.  The  aixterm -W -e Program command initializes the
  Enhanced X-Windows terminal emulator with the mouse cursor in the
  center of the window, and runs the  login command to initialize a
  user session.
  
  Implementation Specifics
  
  This command is part of AIX Xstation Manager/6000.
  
  Files
  
  /usr/lpp/x_st_mgr/bin/x_st_mgrd.cf    The Xstation Manager configura-
  tion file.
  
  /usr/lpp/x_st_mgr/bin/x_st_mgrd.tmty  The terminal list file.
  
  /etc/bootptab The boot protocol table.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  boot,  current host,  gateway host,  host, 
  Internet Protocol (IP),  network,  port,  protocol,  server, 
  subnet address mask.
  
  Related Information
  
  The  aixterm command,  bootpd command,  login command, 
  x_add_trm_130 command,  x_chg_net command,  x_chg_trm_120
  command,  x_chg_trm_130 command,  x_def_net command,  x_ls_trm
  command,  x_ls_net command,  x_rm_net command,  x_rm_trm command,
   xset command.
  
  
2
  piopredef Command
  
  
  Purpose
  
  Creates a predefined printer data-stream definition.
  
   Syntax
  
  piopredef [ -r]   -dQueueDeviceName  -q PrintQueueName 
  -s DataStreamType  -t PrinterType
  
  Description
  
  The piopredef command creates a predefined printer data-stream
  definition  from a virtual printer definition.  It can be thought
  of as the inverse of the  mkvirprt command.  The mkvirprt command
  copies  a  predefined  printer data stream definition to create a
  virtual printer  definition,  which  can  then  be  customized as
  desired.  The piopredef command, however, copies a customized
  virtual  printer definition to create a predefined  printer  data
  stream definition.
  
  The piopredef command can be used to create a predefined printer
  definition for an unsupported  printer  that accepts a print data
  stream similar  to  that  of a supported printer.  For example, a
  virtual printer definition for an IBM 4201-3 Proprinter  III  can
  be created with the  mkvirprt command, displayed with the 
  lsvirprt command, modified  as  necessary  for the unsup-
  ported printer with the  chvirprt command, and then specified
  with the piopredef command to create a predefined definition for
  the unsupported printer.
  
  The new predefined printer definition can then be specified with
  a mkvirprt command to generate additional virtual printers for
  the unsupported printer type on the same computer, or transported
  to other computers and used there.
  
  Flags
  
  -d QueueDeviceName    Specifieswith the QueueDeviceName variable the
  spooler of the customized  virtual  printer definition to be used
  to create the predefined printer definition.
  
  -q PrintQueueName     Specifieswith the PrintQueueName variable the
  spooler of the virtual  printer  definition  to be used to create
  the predefined printer definition.
  
  -r    Specifies that if the -s flag and the -t flag specify a prede-
  fined printer definition that  already  exists,  the existing one
  should be replaced.
  
  -s DataStreamType     Specifies with the DataStreamType variable the
  printer for the predefined  printer  definition  to  be  created.
  Example data stream types are:
  
  asc   IBM extended ASCII
  
  gl    Hewlett-Packard GL
  
  pcl   Hewlett-Packard PCL
  
  ps    PostScript
  
  630   Diablo 630
  
  855   Texas Instruments 855.
  
  -t PrinterType        Specifies the printer type for the predefined
  printer definition to be created.  Examples of  existing  printer
  types are: 4201-3, hplj-2, ti2115, and so on.
  
  Note: If no flags are specified, the command syntax is displayed.
  
  Example
  
  To create a new predefined printer definition from an existing
  virtual printer definition for the virtual printer, enter:
  
  piopredef -d mypro -q proq -s asc -t 9234-2
  
  The attributes for the virtual printer assigned to the mypro
  queue device on the proq print queue are copied to create a new
  predefined printer definition for the 9234-2 printer (asc data
  stream).
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /etc/piopredef file   Command file.
  
  /usr/lpd/pio/predef/* directory       Predefined printer data stream at-
  tribute   files.      File    names    are    in    the   format:
  PrinterType.DataStreamType.
  
  /usr/lpd/pio/custom/* directory       Customized virtual printer attri-
  bute    files.        File    names    are    in    the   format:
  PrintQueueName:QueueDeviceName.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  data stream,  virtual printer.
  
  The  Printer Overview for System Management explains the concepts
  of managing the print subsystem, such as Understanding the Print
  Spooler and Understanding the Printer Backend.
  
  The  Queuing System Overview for System Management . explains the
  concepts  needed to configure print queues,  queue  devices,  and
  virtual printers, as well as information  about managing jobs al-
  ready in the print queue.
  
  Related Information
  
   Printer Addition Management Subsystem: Programming Overview
  explains the concepts  you  need to add a new printer to
  the system.
  
   How to Add a Printer Using the Virtual Printer Commands explains
  how to add a printer that closely emulates a supported printer.
  
   How to Add a Printer Using the Printer Colon File explains how
  to add a new printer that emulates several data streams or that
  does not closely emulate an existing printer.
  
   Printer Code Page Translation Tables describes the two-stage
  process  of  translating  code  points in the print file to  code
  points for the printer.
  
   Printer Colon File Conventions lists the conventions for printer
  and attribute names and values in colon files.
  
   Printer Colon File Escape Sequences describes the embedded
  references and logic for attribute  values  in  the printer back-
  end's  database  colon  files  that  are placed in the  attribute
  string.
  
   Printer Specific Information provides configuration and use in-
  formation for specific printers.
  
   Virtual Printer Attribute Values provides an overview of the at-
  tribute  values that reside in the colon files in the  Predefined
  and Customized database directories.
  
   Printer Support Provided with AIX Version 3 lists the printer
  classes supported by AIX for RISC System/6000 and printers that
  are representative of those classes.
  
   Printer Backend Overview for Programming presents the concepts
  you need to write your own printer backend.
  
  
2
  pac Command
  
  
  Purpose
  
  Prepares printer/plotter accounting records.
  
   Syntax
  
  /usr/bin/pac [  -c ] [  -m ]  [  -p Price ] [  -P Printer ] [  -q
  File] [  -r ] [  -s ] [ Name ...  ]
  
  Description
  
  The pac command prepares printer/plotter accounting records for
  each user of the selected printer  or  for the users specified by
  the Name parameter.  For printer choices, see the -P flag.
  
  The unit of measure is the number of pages, with the exception of
  rasher devices, for which feet  of  paper is measured.  Output is
  expressed both as the number of units used and the charge in dol-
  lars.  For information on the charge (price) per unit, see the -p
  flag.
  
  Flags
  
  -c    Sorts the output by price instead of alphabetically by user.
  
  -m    Groups all the printing charges for a user, regardless of the
  host machine.
  
  -p Price      Specifies the price, in dollars, charged per unit of out-
  put.  Alternatively, the system charges $0.02 per unit.
  
  -P Printer    Specifies the printer for which accounting records are
  prepared.  Alternatively, the system selects the printer named by
  the PRINTER environment variable, or the default value lp0.
  
  -qFile        Specifies the queue configuration file.  The default value
  is /usr/bin/qconfig.
  
  -r    Reverses the sorting order, so that records are sorted alpha-
  betically from z to a, or in descending order by price.
  
  -s    Summarizes the accounting information in a summary file.  This
  flag is needed for busy systems.
  
  Examples
  
  1.    To produce printer/plotter accounting information for all users
  of the lp0 printer, enter:
  
  /usr/bin/pac
  
  The command displays the number of printed pages and the charge,
  sorted by user.  This assumes that there is no PRINTER environ-
  ment variable.
  
  2.    To collect printer/plotter accounting records in a summary
  file, enter:
  
  /usr/bin/pac -s
  
  3.    To produce printer/plotter accounting information for
  smith, jones and greene from
  the lp12 printer enter:
  
  /usr/bin/pac -Plp12 smith jones greene
  
  Implementation Specifics
  
  This command is part of Accounting Services in AIX BOS Extensions
  2 and is provided for compatibility  with  Berkeley Software Dis-
  tribution (BSD) systems.
  
  Files
  
  /usr/bin/pac  The path to the pac command.
  
  /usr/bin/qconfig      The path to the file.
  
  /usr/adm/?acct        Contains raw accounting files.
  
  /usr/adm/?_sum        Contains summary accounting files.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  accounting system,  default
  value,  default,  directory,  flag,  output,  parameter,  path, 
  record,  system,  user,  value.
  
         How to Set Up an Accounting System describes the steps you must
  take to establish an Accounting System.
  
         Accounting Overview describes the Accounting System, the
  preparation  of  daily and monthly reports,  and  the  accounting
  files.
  
  Related Information
  
  The  acct/* command,  acctcms command,  acctcom command,  acctcon
  command,  acctmerg command,  acctprc command,  runacct command.
  
  
  
  
  
  
2
  chsnaobj Command
  
  
  Purpose
  
  Changes the description of a currently defined profile in the SNA
  configuration database.
  
   Syntax
  
  chsnaobj  -t  ObjectType [ SubOptions ] ProfileName
  
  Description
  
  The chsnaobj command changes the description of the  ObjectType
  and ProfileName profile in the SNA configuration database.  The
  fields that are changed depend on the ObjectType selected and are
  specified by the field attribute options described  below.    The
  ProfileName parameter specifies the name of the
  SNA configuration database entry to be changed.
  
  The SubOptions parameter specifies the possible flags the user
  may choose within the ObjectType class.  Refer to the  mksnaobj
  and chsnaobj Object Classes for more information on the different
  flags associated with each ObjectType.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit chsnaobj
  
  Flags
  
  -t  ObjectType        Specifies the profile type to be changed.  The
  SubOptions parameter is a subset of field attribute op-
  tions based on ObjectType selected.
  
  Example
  
  In order to make local LU profile LU20 CP Session Capable, enter
  the following command:
  
  chsnaobj -t local_lu -u lu6.2 -p yes LU20
  
  Refer to the  mksnaobj and chsnaobj Object Classes for more in-
  formation on the different flags associated with each ObjectType.
  
  Implementation Specifics
  
  This command is part of AIX Systems Network Architecture Ser-
  vices/6000.
  
  This command is not available for Japanese Language Support.
  
  Files
  
  /usr/bin      Directory in which the chsnaobj command resides.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  mksnaobj command,  rmsnaobj command.
  
  The  mksnaobj and chsnaobj Object Classes.
  
  The  System Management Interface Tool (SMIT) Overview.
  
  
2
  learn Command
  
  
  Purpose
  
  Provides computer aided instruction courses and practice for us-
  ing files, editors, macros, and other features.
  
   Syntax
  
  learn [  -Directory] [Subject | LessonNumber]
  
  Description
  
  The learn command provides computer aided instruction courses and
  practice for using  files,  editors,  macros, and other features.
  To invoke this command, type learn.  If this is the first time
  you are invoking the learn command, you are guided through a
  series  of  questions  to determine what type of instruction  you
  want to receive.
  
  To enter the learn command in a specific lesson, use a numeric
  value, Number following the learn command.  If this is not the
  first time you are invoking the learn command, you are positioned
  at the place where you last terminated your learn command ses-
  sion.
  
  To bypass questions, you can enter a Subject or a Lesson.  In
  order to enter a Lesson, you must know the Lesson number that you
  received in a previous learn command session.  If you do not know
  the Lesson number, you can enter the Lesson number as a Subject.
  The learn command searches for the first lesson containing the
  Subject  you specified.  The following are the
  subjects you can specify:
  
  *     Files
  
  *     Editors
  
  *     More files
  
  *     Macros
  
  *     EQN
  
  *     C.
  
  Subcommands
  
  The bye command terminates a learn command session and the where
  command tells you of your progress, with where m telling you
  more.  The command again re-displays the text of the lesson and
  again Lesson lets you review Lesson.  The command hint
  prints  the last part of the lesson script  used  to  evaluate  a
  response, while hint m prints the whole lesson script.
  
  Flag
  
  -Directory    Allows you to exercise a script in a nonstandard place.
  
  Example
  
        To take the online lesson about Files, type:
  
  learn files
  
  You will then be prompted for further input.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /usr/bin      Subtree for all dependent directories and files.
  
  /usr/tmp/pl** Playpen directories.
  
  $HOME/.learnrc        Startup information.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entry:  computer aided instruction.
  
  Related Information
  
  The  ex command.
  
   Shells Overview.
  
  
3
  sendbug Command
  
  
  Purpose
  
  Mails a system bug report to a specified address.
  
   Syntax
  
  sendbug [ Address ]
  
  Description
  
  The sendbug command is a shell script to assist the user in com-
  posing and mailing bug reports in the correct format.
  
  The sendbug command invokes the editor specified by the EDITOR
  environment variable on a temporary copy  of  the bug re-
  port format outline.  The default editor is vi.
  
  Fill out the appropriate fields in the bug report format outline
  and exit the editor.  The sendbug command mails the completed re-
  port to the address specified by the Address parameter.  The de-
  fault address is POSTMASTER.
  
  File
  
  /usr/lib/bugformat    Contains the bug report outline.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  address,  editor,  shell script.
  
   Message Handler (MH) Overview for System Management.
  
  Related Information
  
  The  bugfiler command,  env command,  sendmail command.
  
   Editing a File with the vi Editor.
  
  
3
  ruptime Command
  
  
  Purpose
  
  Shows the status of each host on a network.
  
   Syntax
  
  ruptime [ -a] [ -r] [ -l |  -t |  -u]
  
  Description
  
  The ruptime command displays the status of each host that is on a
  local network and is running the  rwhod daemon.  The status lines
  are sorted by host name unless the  -l,  -t, or  -u flag is indi-
  cated.   The status information is provided in packets  broadcast
  once every 3 minutes by each network host running the rwhod dae-
  mon.  Any activity (such as power to a host being  turned  on  or
  off) that takes place between broadcasts  is  not reflected until
  the next broadcast.  Hosts for which no status information is re-
  ceived for 11 minutes are reported as down.
  
  Output is in the following fomat: hostname, status, time, number
  of  users,  and  load  average.  Load average represents the load
  averages over 5, 10, and 15 minute intervals  prior to a server's
  transmission.    The  load  averages  are  multiplied  by  10  to
  represent the value in decimal format.
  
  Flags
  
  -a    Includes all users.  Without this flag, users whose sessions
  are idle an hour or more are not included.
  
  -l    Sorts the list by the load average.
  
  -r    Reverses the sort order.  The -r flag should be used with the
  -l, -t or -u flag.
  
  -t    Sorts the list by the uptime.
  
  -u    Sorts the list by the number of users.
  
  Examples
  
  1.    To get a status report on the hosts on the local network,
  enter:
  
  ruptime
  
  Information similar to the following is displayed:
  
  host1      up      5:15,   4 users,   load 0.09, 0.04, 0.04
  host2      up      7:45,   3 users,   load 0.08, 0.07, 0.04
  host7      up      7:43,   1 user,    load 0.06, 0.12, 0.11
  
  2.    To get a status report sorted by load average, enter:
  
  ruptime -l
  
  Information similar to the following is displayed:
  
  host2      up      7:45,   3 users,   load 0.08, 0.07, 0.04
  host1      up      5:18,   4 users,   load 0.07, 0.07, 0.04
  host7      up      7:43,   1 user,    load 0.06, 0.12, 0.11
  
  Implementation Specifics
  
  This command is part of the TCP/IP Facility in Network Facilities
  of AIX for RISC System/6000.
  
  Files
  
  /usr/spool/rwho/whod.*        Indicates data files received from remote
  rwhod daemons.
  
  /usr/ucb/ruptime      Command executable file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  host,  network,  daemon.
  
   Network Overview.
  
  Related Information
  
  The  rwho command.
  
  The  rwhod daemon.
  
  
3
  lsitab Command
  
  
  Purpose
  
  Lists records in the  /etc/inittab file.
  
   Syntax
  
  lsitab { -a | Identifier}
  
  Description
  
  The lsitab command displays a record in the  /etc/inittab file.
  It  allows  you  to  list  either  a  specific  record  with  the
  Identifier field, or all records in the
  /etc/inittab file.  The Identifier field is a field of
  one to fourteen characters used to uniquely  identify  an object.
  If the Identifier field is not unique, the command is unsuccess-
  ful.
  
  Flag
  
  -a    Specifies that all stanzas in the  /etc/inittab file are list-
  ed.
  
  Example
  
  1.    To list the record in  /etc/inittab file for tty2, enter:
  
  lsitab "tty002"
  
  The output is: tty002:2:respawn:/etc/getty /dev/tty2
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /etc/inittab  Directory where the lsitab command resides.
  
  /etc/filesystems      File that contains the file system stanzas.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  record.
  
  The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  Related Information
  
  The  init command.
  
  The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  
3
  troff Command
  
  
  Purpose
  
  Formats text for printing on typesetting devices.
  
   Syntax
  
  troff [  -a   -i   -q   -z ] [  -F Directory ] [  -n Number ] [ 
  -o List ] [  -r ANumber ] [  -s Number ] [ 
  -T Name ] [  -mm |  -me |  -mptx |  -ms |  -man
  |  -mv ] [ File... |  - ]
  
  Description
  
  The troff command reads one or more files and formats the text
  for printing  on  a  phototypesetter or comparable device.  If no
  File... parameter or - (minus) flag is specified
  as the last parameter, standard input is read by default.
  
  Notes:
  
  1.    The troff command uses Eastern Standard Time (EST).  Depending
  on  the time of year and the local time zone, the date  that  the
  troff command  generates  can be incorrect by as
  much as one day.
  
  2.    The  .tl request cannot be used before the first break-
  producing request in the input to the troff command.
  
  Flags
  
  -a    Sends a printable ASCII approximation of the results to stan-
  dard output.
  
  -i    Reads standard input after there are no more files.
  
  -q    Calls the simultaneous input/output mode of the  .rd request.
  
  -z    Prints only messages generated by  .tm (workstation message)
  requests.
  
  -FDirectory   Accesses font information from the Directory/devName
  directory instead of the default /usr/lib/font/devName (where
  Name is given by the -T flag).
  
  -nNumber      Numbers the first printed page with the value specified
  by the Number variable.
  
  -oList        Prints only pages specified by the List variable, which
  consists of a comma-separated list of page numbers and ranges:
  
  *     A range of Start-Stop means print pages Start through Stop.  For
  example, 9-15 prints pages 9 through 15.
  
  *     An initial -Stop means print from the beginning to page Stop.
  
  *     A final Start- means print from page Start to the end.
  
  *     A combination of page numbers and ranges prints the specified
  pages.   For example, -3,6-8,10,12-  prints  from  the  beginning
  through page 3, pages 6 through 8, page 10, and page  12  to  the
  end.
  
  Note: When this flag is used in a pipeline (for example, with one
  or more of the pic, eqn, or tbl commands) you may receive a
  broken pipe message if the last page in the document is
  not specified in the List variable.  This broken pipe message is
  not an indication of any problem and can be ignored.
  
  -rANumber     Sets the register specified by the A variable to the
  specified number. The A variable value must have a one-character
  ASCII name.
  
  -sNumber      Generates output to make the typesetter stop every speci-
  fied number of pages.
  
  -TName        Prepares the output for the specified printing device.
  Alternatively, the TYPESETTER environment variable may be set.
  
  Note: You will get a bad point size message if your device does
  not support a point size that you specified.  The troff command
  will use the closest valid point size to continue formatting.
  
  -man  Selects the  man macro-processing package.
  
  -me   Selects the  me macro-processing package.
  
  -mm   Selects the  mm macro-processing package.
  
  -mptx Selects the  mptx macro-processing package.
  
  -ms   Selects the  ms macro-processing package.
  
  -mv   Selects the  mv macro-processing package.
  
  -     Forces input to be read from standard input.
  
  Implementation Specifics
  
  This command is part of Formatting Tools in the Text Formatting
  System of AIX for RISC System/6000.
  
  Files
  
  /usr/lib/tmac/tmac.* file     Contains the pointers to standard macro
  files.
  
  /usr/lib/macros/* file        Denotes standard macro files.
  
  /usr/lib/font/dev*/* file     Contains the font width tables.
  
  /usr/tmp/trtmp* file  Denotes a temporary file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  ASCII,  broken pipe message,  standard input, 
  standard output,  phototypesetter,  pipeline,  register.
  
  Related Information
  
  The  eqn command,  grap command,  mmt command,  nroff command, 
  pic command,  tbl command, and  tc command.
  
  The  nroff/troff requests.
  
  The  me marcro package,  ms macro package,  man macro package, 
  mm macro package,  mptx macro package,  mv macro package.
  
  
3
  lsquedev Command
  
  
  Purpose
  
  Displays the device stanza name.
  
   Syntax
  
  lsquedev  [ -c]  -qName  -d Name
  
  Description
  
  The lsquedev command displays the name of the queue stanza and
  associated attributes.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit lsquedev
  
  For a more precise entry into a certain part of the Devices path
  in SMIT, see Devices in SMIT .
  
  Flags
  
  -c    Specifies colon output format for use by SMIT.
  
  -d Name       Specifies the Name of the device stanza that is displayed.
  
  -q Name       Specifies the Name of the queue containing the device
  stanza that is displayed.
  
  Examples
  
  1.    To display device stanza dlp0 on the lp0 queue, enter:
  
  lsquedev -q lp0 -d dlp0
  
  A listing similar to the following is displayed:
  
  dlp0:
        FILE = /dev/lp0
        BACKEND = /usr/lpd/piobe
  
  2.    To display device stanza dlp0 on the lp0 queue in colon format,
  enter:
  
  lsquedev -c -qlp0 -d dlp0
  
  A listing similar to the following is displayed:
  
  file:access:feed:header:trailer:backend:align
  dlp0:/dev/lp0:read:never:never:never:/usr/lpd/piobe:TRUE
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/lsquedev Command file.
  
  /usr/lpd/qconfig      Configuration file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  queue,  queue device,  queue stanza,  stanza.
  
  The  System Management Interface Tool (SMIT) Overview describes
  the SMIT application.
  
  The  Devices Overview for System Management explains adding,
  changing, moving, and removing devices.
  
  The  Printer and Queue Overview descirbes how the system handles
  printed output.  Included are descriptions of how  to  do various
  print  functions  using  SMIT,  such  as starting a print job and
  showing the status of a print job.
  
  The  Printer Overview for System Management explains the concepts
  needed for  managing  the  print subsystem, such as Understanding
  the Print Spooler and Understanding the Printer Backend.
  
  The  Queuing System Overview for System Management explains the
  concepts  needed  to  configure print queues, queue devices,  and
  virtual printers, as well as information  about managing jobs al-
  ready in the print queue.
  
  Related Information
  
  The  lsque command,  chquedev command,  mkquedev command, 
  rmquedev command.
  
  The  printf subroutine.
  
  The  smit command explains how to run the smit command, what
  flags to use to vary the output, and how to use the smit.script
  and smit.log files.
  
  The  qconfig file.
  
   List of Changeable Attributes for Devices describes specific at-
  tributes and their possible values.
  
   How to Add a Printer Using the Virtual Printer Commands explains
  how to add a printer that closely emulates a supported printer.
  
   How to Add a Printer Using the Printer Colon File explains how
  to add a new printer that emulates several data streams or that
  does not closely emulate an existing printer.
  
   Printer Code Page Translation Tables describes the two-stage
  process  of  translating  code  points  in the print file to code
  points for the printer.
  
   Printer Colon File Conventions lists the conventions that have
  been established  for  printer  and attribute names and values in
  colon files.
  
   Printer Colon File Escape Sequences describes the embedded
  references and logic  for  attribute  values in the printer back-
  end's database colon files that are placed in the attribute
  string.
  
   Printer Specific Information provides configuration and use in-
  formation for specific printers.
  
   Printer Support Provided with AIX Version 3 lists the printer
  classes supported  by  AIX for RISC System/6000 and printers that
  are representative of those classes.
  
   Virtual Printer Attribute Values provides an overview of the at-
  tribute  values  that reside in the colon files in the Predefined
  and Customized database directories.
  
  
3
  install_mh Command
  
  
  Purpose
  
  Sets up mailbox directories.
  
   Syntax
  
  install_mh [ -auto ]
  
  Description
  
  The install_mh command sets up mailbox directories.  The
  install_mh  command is designed to be called by
  other programs, not run directly by the user.
  
  The install_mh command runs automatically the first time you run
  any Message Handler (MH) command.  The install_mh command prompts
  you for the name  of  your mail directory.  If the directory does
  not exist, the install_mh command asks you if it should be creat-
  ed.  The install_mh command creates the $HOME/.mh_profile file
  and places the Path: profile entry in it.  This entry
  identifies  the location of your mailbox by specifying the direc-
  tory path for your MH directory, UserMHDirectory.
  
  Flag
  
  -auto Creates the standard MH path without prompting.
  
  Implementation Specifics
  
  This command is part of Message Handler in the Base Operating
  System (BOS) Extensions 1 of AIX for RISC System/6000.
  
  File
  
  $HOME/.mh_profile     Contains the MH user profile.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  mailbox,  profile.
  
   Message Handler (MH) Overview for System Management.
  
  Related Information
  
  The  .mh_profile file.
  
  
3
  mark Command
  
  
  Purpose
  
  Creates, modifies, and displays message sequences.
  
   Syntax
  
  mark [  +Folder ] [  -list ] [ [  -sequence Name ]
  [ Message ... ] [  -add |  -delete ] [  -zero | 
  -nozero ] [  -public |  -nopublic ] ]
  
  Description
  
  The mark command creates, deletes, adds, and lists the messages
  in a sequence.  The mark command by default, lists all of the se-
  quences and their messages  for  the  current folder.  If you use
  the -add or -delete flag, you must also use the -sequence flag.
  When all messages are deleted from a sequence, the mark command
  removes the sequence name from the folder.
  
  To create a new sequence, enter the -sequence flag with the name
  of the sequence you want to create.  The mark command creates the
  sequence starting with the current message.  By default, the mark
  command places the sequence in the current folder.  If you speci-
  fy a folder, that folder becomes the current folder.
  
  Flags
  
  -add  Adds messages to a sequence.  The -add flag is the default.
  If you do not specify a message, the mark command uses the
  current message.
  
  Note: You can only use this flag with the -sequence flag.
  
  -delete       Deletes messages from a sequence.  If you do not specify a
  message, the current message is deleted by default.
  
  Note: You can only use this flag with the -sequence flag.
  
  +Folder       Specifies the folder.
  
  -help Displays help information for the command.
  
  -list Displays the messages in a sequence.  By default, the -list
  flag displays all the sequence names and messages defined for the
  current folder.  To see a specific sequence, use the -sequence
  flag with the -list flag.
  
  Message       Specifies a message in a sequence.  You can specify more
  than one message at a time.  Messages can be identified with fol-
  lowing references:
  
  Number        Number of the message
  
  all   All the messages in a folder
  
  cur or .      Current message.  This is the default.
  
  first First message in a folder
  
  last  Last message in a folder
  
  next  Message immediately after the current message
  
  prev  Message immediately before the current message
  
  If the -list flag is used, the default for the Messages parameter
  is all.  Otherwise, the default is the current message.
  
  -nopublic     Restricts a sequence to your usage.  The -nopublic flag
  does not restrict the messages in the sequence, only the sequence
  itself.   This option is the default  if  the  folder  is  write-
  protected from other users.
  
  -nozero       Modifies the sequence by adding or deleting only the
  specified messages.  This flag is the default.
  
  -public       Makes a sequence available to other users.  The -public
  flag  does not make protected messages available,  only  the  se-
  quence  itself.   This flag is the default if the folder  is  not
  write-protected from other users.
  
  -sequence Name        Specifies a sequence for the  -list,  -add, and 
  -delete flags.
  
  -zero Clears a sequence of all messages except the current mes-
  sage.  When the  -delete flag is also specified, the -zero flag
  places all of the messages from the folder  into the sequence be-
  fore deleting any messages.
  
  Profile Entries
  
  The following entry is found in the UserMHDirectory/context file:
  
  Current-Folder:       Specifies the default current folder.
  
  The following entry is found in the $HOME/.mh_profile file:
  
  Path: Specifies the MH directory.
  
  Examples
  
  1.    To see the list of all the sequences defined for the current
  folder, enter:
  
  mark
  
  The system displays a message similar to the following:
  
  cur: 94
  test: 1-3 7 9
  
  In this example, message 94 is the current message number in the
  current folder.  The message sequence called test includes mes-
  sage numbers 1, 2, 3, 7, and 9.
  
  2.    To see the list of all the sequences defined for the meetings
  folder, enter:
  
  mark +meetings
  
  The system displays a message similar to the following:
  
  cur: 5
  dates: 12 15 19
  
  3.    To create a new message sequence called schedule in the current
  folder, enter:
  
  mark -sequence schedule 
  
  The system displays the shell prompt to indicate that the
  schedule sequence was created.   By default the
  system adds the current message to the new sequence.
  
  4.    To delete message 10 from the schedule sequence, enter:
  
  mark -sequence schedule 10 -delete
  
  Implementation Specifics
  
  This command is part of Message Handler in the Base Operating
  System (BOS) Extensions 1 of AIX for RISC System/6000.
  
  Files
  
  $HOME/.mh_profile file        Specifies the MH user profile.
  
  /usr/bin/mark file    Contains the executable form of the mark com-
  mand.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  default,  file,  flag,  folder,  format,  mes-
  sage.
  
   Message Handler (MH) Overview.
  
   Mail Overview.
  
  Related Information
  
  The  pick command.
  
  The  mh_alias file format,  mh_profile file format.
  
  
3
  lsscreen Command
  
  
  Purpose
  
  Sends the contents on the display screen to a file.
  
   Syntax
  
  lscreen [  -n PathName ]
  
  Description
  
  The lsscreen command appends the contents of a display screen to
  a file.  If no file is specified, it writes to standard output.
  
  To put the screen contents into the /u/mary/myscreen file, enter:
  
  lsscreen -n /u/mary/myscreen
  
  Note: This command is usable only on a High Function Terminal
  (HFT).
  
  Flags
  
  -n PathName   Designates the full path name of the file in which to
  append the screen contents.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/lsscreen Contains the command file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary terms:  default.
  
   HFT Subsystem Conceptual Introduction.
  
  Related Information
  
  The  Query (HFQUERY) ioctl Operation.
  
  
3
  ypmatch Command
  
  
  Purpose
  
  Displays the values of given keys within an NIS map.
  
   Syntax
  
  
  
  Display Key Values for an NIS Map
  
  /usr/bin/ypmatch [  -d Domain ] [  -k ] [  -t ] Key ... MapName
  
  Display the NIS Map Nickname Table
  
  /usr/bin/ypmatch  -x
  
  Description
  
  The ypmatch command displays the values associated with one or
  more keys within an NIS map.  Use the MapName parameter to speci-
  fy either the name or nickname of the map you want to search.
  
  When you specify multiple keys in the Key parameter, the system
  searches the same map for all of the keys.  Since pattern  match-
  ing is not available, match the capitalization and length of each
  key exactly.  If the  system does not find a match for the key or
  keys you specify, a diagnostic message is displayed.
  
  Flags
  
  -d    Specifies a domain other than the default domain.
  
  -k    Prints a key followed by a colon before printing the value of
  the key.  This is useful  only  if the keys are not duplicated in
  the  values or if you have specified so many keys that the output
  could be confusing.
  
  -t    Inhibits translation of nickname to map name.
  
  -x    Displays the map nickname table.  This lists the nicknames (as
  specified by the MapName parameter) the command knows of and in-
  dicates the map name associated with each nickname.
  
  Example
  
  To display the value associated with a particular key, enter:
  
  ypmatch -d ibm -k host1 hosts
  
  In this example, the ypmatch command displays the value of the
  host1 key from the hosts map in the ibm domain.
  
  Implementation Specifics
  
  This command is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  domain,  key,  parameter.
  
  For information about managing NIS, see  Network Information Ser-
  vice (NIS) Overview for System Management.
  
  Related Information
  
  The  ypcat command.
  
   Network File System (NFS) Overview for System Management.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
  
3
  rmque Command
  
  
  Purpose
  
  Removes a printer queue from the system.
  
   Syntax
  
  rmque  -q Name
  
  Description
  
  The rmque command removes a queue from the system configuration
  by deleting the queue stanza named by the  -q flag from the 
  qconfig  file.   All queue devices must be deleted using
  the rmquedev command before entering this command.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit rmque
  
  For a more precise entry into a certain part of the Devices path
  in SMIT, see Devices in SMIT .
  
  Note: Do not edit the qconfig file while there are active jobs in
  any queue.  Editing includes both manual editing  and  use of the
  chque, mkque, rmque, mkquedev, rmquedev, or
  chquedev commands.  It is recommended  that all
  changes to the qconfig file be made using these commands.  Howev-
  er, if manual editing is desired, first issue the enq -G command
  to bring the queuing system and  the  qdaemon to a halt after all
  jobs are processed.  Then edit the qconfig file and restart the
  qdaemon with the new configuration.
  
  Flag
  
  -q Name       Specifies the name of the queue to be removed.
  
  Example
  
  To remove printer queue lp0, enter:
  
  rmque -q lp0
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/rmque    Contains the command file.
  
  /usr/lpd/qconfig      Contains the configuration file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  queue stanza,  queue device.
  
  The  System Management Interface Tool (SMIT) Overview explains
  the SMIT application.
  
  The  Devices Overview for System Management describes adding,
  changing, moving, and removing devices.
  
  The  Printer and Queue Overview presents an overview of how the
  system  handles printed output.  Included are descriptions of how
  to  do  various  print  functions using SMIT, such as starting  a
  print job and showing the status of a print job.
  
  The  Printer Overview for System Management explains the concepts
  needed for managing the print subsystem,  such  as  Understanding
  the Print Spooler and Understanding the Printer Backend.
  
  The  Queuing System Overview for System Management explains the
  concepts  needed  to  configure  print queues, queue devices, and
  virtual printers,  as well as information about managing jobs al-
  ready in the print queue.
  
  Related Information
  
  The  chque command,  lsque command,  mkque command,  rmquedev
  command.
  
  The  smit command tells how to run the smit command, what flags
  to use to vary the output, and how to use the smit.script and
  smit.log files.
  
  The  qconfig file.
  
  
4
  nroff Command
  
  
  Purpose
  
  Formats text for printing on typewriter-like devices and line
  printers.
  
   Syntax
  
  nroff [  -o List ] [  -n Number ] [  -s Number ] [  -r ANumber ]
  [  -i  -q  -z  -e  -h ] [  -T Name ]
  [  -u Number ] [  -man  -me  -mm 
  -mptx  -ms ] [ File... |  - ]
  
  Description
  
  The nroff command reads one or more files for printing on type-
  writer-like devices and line printers.  If no File... parameter
  is specified or the - (minus) flag is specified as the last
  parameter, standard input is read by default.
  
  The  col command may be required to postprocess nroff output in
  certain cases.
  
  Flags
  
  -e    Produces equally-spaced words in adjusted lines, using the full
  resolution of a particular terminal.
  
  -h    Uses output tabs during horizontal spacing to speed output and
  reduce  the output character count.  Tab settings are assumed  to
  be every eight nominal character widths.
  
  -i    Reads standard input after reading all specified files.
  
  -man  Selects the  man macro processing package.
  
  -me   Selects the  me macro processing package.
  
  -mm   Selects the  mm macro processing package.
  
  -mptx Selects the  mptx macro processing package.
  
  -ms   Selects the  ms macro processing package.
  
  -nNumber      Assigns the specified number to the first printed page.
  
  -oList        Prints only those pages specified by the List variable,
  which consists of a comma-separated  list  of  page  numbers  and
  ranges, as follows:
  
  *     A range of Start-Stop means print pages Start through Stop.  For
  example, 9-15 prints pages 9 through 15.
  
  *     An initial -Stop means print from the beginning to page Stop.
  
  *     A final Start- means print from page Start to the end.
  
  *     A combination of page numbers and ranges prints the specified
  pages.  For example, -3, 6-8,10,12- prints the beginning  through
  page 3, pages 6 through 8, page 10, and page 12 to the end.
  
  Note: When the -oList  flag is used in a pipeline (as with one or
  more of the eqn or tbl commands) you may receive a broken pipe
  message if the last page in the document is not
  specified in the List parameter.  This broken pipe message is not
  an indication of any problem and can be ignored.
  
  -q    Calls the simultaneous input/output mode of the  .rd request.
  
  -rANumber     Sets register A to the specified number. The value
  specified by the A variable must have a one-character ASCII name.
  
  -sNumber      Stops every specified number of pages (the default is 1).
  The nroff command halts every specified number of pages to allow
  paper  loading  or  changing,  then  resumes upon  receipt  of  a
  linefeed  or newline character.  This flag does not work in pipe-
  lines; for example, with the mm command.  When the nroff command
  halts between pages, an ASCII BEL character is sent to the works-
  tation.
  
  -TName        Prepares the output for the specified printing device.  
  Terminal Names for Phototypesetter  or  Comparable  Devices gives
  possible Name variable values.  The default is 37.
  
  Note: The IBM 4019 and the HP Laser Jet II printer both have non-
  printable areas at the top and  bottom  of  a page.  If a file is
  targeted for these printers, be sure to  define  top  and  bottom
  margins (for example, by formatting with -mm) so that all output
  will be positioned within the printable page.
  
  -     Forces input to be read from standard input.
  
  Terminal Names for Text Formatting
  
  Terminal Names for Typewriter-like Devices and Line Printers
  
  The following Name variable values of supported devices are used
  with the  -TName flag of the  nroff command for AIX international
  extended characters, as well as English-language  characters, di-
  gits, and symbols:
  
  hplj  Hewlett-Packard LaserJet II.
  
  ibm3812       IBM 3812 Pageprinter II.
  
  ibm3816       IBM 3816 Pageprinter.
  
  ibm4019       IBM 4019 LaserPrinter.
  
  37    Teletype Model 37 terminal (default) for terminal viewing only.
  This device does not support extended characters, which  are  in-
  putted by the NCesc form or the \[N] form.   Inputting Extended
  Characters gives more information.
  
  lp    Generic name for printers that can underline and tab.  All text
  sent to the lp value using reverse line feeds (for example, text
  that includes tables) must be processed with the  col command.
  This  device does not support extended characters which input  by
  the NCesc form or the \[N] form.   Inputting Extended Characters
  gives more specific information.
  
  ppds  Generic Name for printers which support the personal printer
  data  streams  such  as the IBM Quietwriter III, IBM Quickwriter,
  and IBM Proprinters.
  
  ibm5575       IBM 5575 Kanji Printer (provided for Japanese Language
  Support).
  
  ibm5577       IBM 5577 Kanji Printer (provided for Japanese Language
  Support).
  
  For completeness of the Text Formatting System, the following
  devices are shipped as is from the AT&T Distribution.  No support
  is provided for these tables.
  
  2631  Hewlett-Packard 2631 printer in regular mode
  
  2631-c        Hewlett-Packard 2631 printer in compressed mode
  
  2631-e        Hewlett-Packard 2631 printer in expanded mode
  
  300   DASI-300 printer
  
  300-12        DASI-300 terminal set to 12 characters per inch
  
  382   DTC-382
  
  4000a Trendata 4000a terminal (4000A)
  
  450   DASI-450 (Diablo Hyterm) printer
  
  450-12        DASI-450 terminal set to 12 characters per inch
  
  832   Anderson Jacobson 832 terminal
  
  8510  C.ITOH printer
  
  tn300 GE Terminet 300 terminal
  
  X     Printers equipped with a TX print train
  
  300s  DASI-300s printer (300S)
  
  300s-12       DASI-300s printer set to 12 characters per inch (300S-12).
  
  Terminal Names for Phototypesetter or Comparable Devices
  
  The following Name variable values of supported devices are used
  with the  -TName flag of the  troff command for AIX international
  extended characters:
  
  ibm3812       IBM 3812 Pageprinter II
  
  ibm3816       IBM 3816 Pageprinter
  
  hplj  Hewlett-Packard LaserJet II with K cartridge
  
  ibm5587G      IBM 5587-G01 Kanji Printer (for Japanese Language Sup-
  port).
  
  In addition, it is possible to set the TYPESETTER environment
  variable to one of the  preceding values instead of using the 
  -TName flag of the  troff command.
  
  -uNumber      Sets the bold factor (number of character overstrokes)
  for the third font position (bold) to the specified number, or to
  0 (zero) if the Number variable is missing.
  
  -z    Prints only messages generated by  .tm (workstation message)
  request.
  
  Implementation Specifics
  
  This command is part of Formatting Tools in the Text Formatting
  System of AIX for RISC System/6000.
  
  Files
  
  /usr/lib/tmac/tmac.* file     Contains pointers to standard macro
  files.
  
  /usr/lib/macros/*b file       Contains standard macro files.
  
  /usr/lib/nterm/* file Contains the terminal driving tables for the
  nroff command.
  
  /usr/pub/terminals file       Contains a list of supported terminals.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  ASCII,  BEL character,  broken pipe message, 
  linefeed,  newline,  request,  pipeline,  standard input.
  
  Related Information
  
  The  col command,  mm command,  neqn command,  tbl command.
  
  The  man macro package,  me macro package,  mm macro package, 
  mptx macro package,  ms macro package.
  
  The  nroff/troff requests.
  
  
4
  pwdck Command
  
  
  Purpose
  
  Verifies the correctness of local authentication information.
  
   Syntax
  
  pwdck {  -p |  -n |  -t |  -y } {ALL   | User ... }
  
  Description
  
  The pwdck command verifies the correctness of the password infor-
  mation in the user database  files,  by  checking the definitions
  for ALL the users or for the users specified by the User parame-
  ter.    If more than one user is specified, there must be a space
  between the names.  You must select  a  flag  to indicate whether
  the system should try to fix erroneous attributes.  The following
  attributes are checked for locally defined users:
  
  /etc/passwd file
  
  entry Checks to ensure that each entry is readable and that it
  contains at least two colons (:).   If you indicate that the sys-
  tem should fix errors, the entire entry is discarded.
  
  passwd        Checks to ensure that the password field is an ! (exclama-
  tion  mark).  If you indicate that the system should fix  errors,
  it  transfers  the  information in  the  password  field  to  the
  /etc/security/passwd   file,   updates   the
  lastupdate attribute in the /etc/security/passwd
  file, and then replaces the password field in the /etc/passwd
  file with an ! (exclamation mark).
  
  user  Checks to ensure that the username field starts with an al-
  phabetic character,  contains  only  alphanumeric characters, and
  does not  contain the ALL, default, or * key words.  If you indi-
  cate that the system should fix errors, it  removes  this  user's
  entry line from the /etc/passwd file.  If the username starts
  with  a  +  or  a - symbol, the user is not locally defined,  and
  checks are not performed.
  
  /etc/security/passwd file
  
  line  Checks to ensure that each line is readable and is part of a
  stanza.  Any invalid line is discarded.
  
  password      Checks to ensure that the password attribute exists and
  is not blank, if passwords are required  on  the  system.  If you
  indicate that the system should fix errors, the password  is  set
  to * (asterisk), and the lastupdate attribute is discarded.  In
  general, passwords are required if either of the minalpha or
  minother  password restrictions are set to non-
  zero values in the /etc/security/login.cfg file.  If a user's
  flags attribute specifies the NOCHECK keyword, a
  password is not required for this user, and the check is ignored.
  
  lastupdate    Checks to ensure that the lastupdate attribute exists
  for a valid non-blank password, and that its time is prior to the
  current time.  If you indicate that the system should fix errors,
  the lastupdate attribute is discarded or updated, depending on
  the password attribute.  The lastupdate attribute is discarded if
  the password attribute doesn't exist, or equals a blank or an *
  (asterisk).  Otherwise, the lastupdate time is set to the current
  time.
  
  flags Checks to ensure that the flags attribute contains only the
  keywords ADMIN, ADMCHG, and NOCHECK.  If you indicate that the
  system should fix errors, it deletes any undefined flags.
  
  /etc/security/user file
  
  auth1 Checks to ensure that each SYSTEM;authname entry defined for
  a local user has an authname entry in the /etc/security/passwd
  file.  If you indicate that the system should fix errors, a stan-
  za is added to the /etc/security/passwd file for each missing en-
  try, in the following format:
  
  authname:
            password = *
           
  
  If a user's entry and a default entry both are missing from the
  /etc/security/user file, the system assumes the
  following values and the check on auth1 is performed:
  
  auth1 = SYSTEM;user                
  
  auth2 Checks to ensure that each SYSTEM;authname entry defined for
  a local user has an authname entry in the /etc/security/passwd
  file.  If you indicate that the system should  fix errors, an en-
  try is added for each missing entry.
  
  If a user's entry and a default entry both are missing from the
  /etc/security/user file, the system assumes the following  values
  and the check on auth2 is performed:
  
  auth2 = NONE                  
  
  When ALL is specified, the pwdck command checks to ensure that
  each stanza in the /etc/security/passwd file corresponds to an
  authentication name of a local user as a SYSTEM;authname entry in
  the /etc/security/user file.  If you indicate that the system
  should fix errors, a stanza which does not correspond to an auth-
  name entry in the /etc/security/user file is discarded from the
  /etc/security/passwd file.
  
  The pwdck command locks the /etc/passwd file and the
  /etc/security/passwd file when it  updates them.
  If either of these files are locked by another process, the pwdck
  command  waits  a  few  minutes for the files to be unlocked, and
  terminates if this doesn't happen.
  
  The pwdck command checks to see if the /etc/passwd file and the
  /etc/security/passwd file are modified by anoth-
  er process while the current pwdck process is running.  If you
  indicate that the system should fix errors, the pwdck command up-
  dates the /etc/passwd file and the /etc/security/passwd file, and
  may overwrite any changes made by the other process.
  
  The pwdck command also checks to see if the database management
  password files (the etc/passwd.dir file and the /etc/passwd.pag
  file) are up-to-date or newer than the system password files (the
  /etc/passwd file and the /etc/security/passwd file).  If the da-
  tabase management password files are out-of-date,  a warning mes-
  sage  appears  indicating  that  the root  user  should  run  the
  mkpasswd command.
  
  Generally, the sysck command calls the pwdck command as part of
  the verification of a trusted-system  installation.  In addition,
  the root user or a member  of  the  security  group can enter the
  command.
  
  Flags
  
  -n    Reports errors but does not fix them.
  
  -p    Fixes errors but does not report them.
  
  -t    Reports errors and asks if they should be fixed.
  
  -y    Fixes errors and reports them.
  
  Security
  
  Access Control:
  
  This command should grant execute (x) access to the root user and
  members of the security  group.   The command should be setuid to
  the root user, to read and write the authentication  information,
  and have the trusted computing base attribute.
  
  Files Accessed:
  
  Mode  File
  
  rw    /etc/passwd
  
  r     /etc/security/user
  
  rw    /etc/security/passwd
  
  r     /etc/security/login.cfg
  
  Auditing Events
  
  Event Information
  
  PASSWORD_Check        User, Error/Fix, Status
  
  PASSWORD_Checkerr     File/User, Error, Status
  
  Examples
  
  1.    To verify that all local users have valid passwords, enter:
  
  pwdck -y ALL
  
  This reports errors, and fixes them.
  
  2.    To ensure that user ariel has a valid stanza in the
  /etc/security/passwd file, enter:
  
  pwdck -y ariel   
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/pwdck    Specifies the path to the pwdck command.
  
   /etc/passwd  Contains the basic user attributes.
  
   etc/security/passwd  Contains password information.
  
   etc/security/user    Contains the extended attributes of users.
  
   /etc/security/login.cfg      Contains configuration information and
  password restrictions.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  access,  attribute,  default, 
  enter,  group,  group name,  ID,  installation,  kernel,  member,
   parameter,  path,  setuid,  system,  trusted computing base, 
  user,  value,  verify.
  
         Security Introduction describes the identification and authenti-
  cation of users, discretionary access  control,  the trusted com-
  puting base, and auditing.
  
  Related Information
  
  The  grpck command,  mkpasswd command,  sysck command,  usrck
  command.
  
  
  
  
4
  inetexp Command
  
  
  Purpose
  
  Takes the InetServ object class as input and creates or updates
  the /etc/inetd.conf and /etc/services files.
  
   Syntax
  
  inetexp
  
  Description
  
  Any time the Object Data Manager (ODM) InetServ object class is
  updated, the inetexp command must be called to create or update
  the contents of the /etc/ inetd.conf and /etc/ services files to
  make sure that their contents remain the same.    It is important
  to  make  sure their contents always reflect the same information
  because System Resource Controller (SRC) and the inetd daemon use
  the information from the ODM object  class.   When the ODM object
  is updated by the inetserv command, the inetexp export routine is
  automatically called.
  
  Implementation Specifics
  
  This command is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /etc/ inetd.conf      Contains configuration information for inetd
  Internet service requests.
  
  /etc/ services        Contains socket and protocol definitions used for
  Internet services.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Term:  daemon.
  
   The ODM Overview.
  
  Related Information
  
  The  inetimp command,  inetd command,  inetserv command.
  
  The  /etc/inetd.conf file,  /etc/services file.
  
  
4
  tsort Command
  
  
  Purpose
  
  Sorts an unordered list of ordered pairs (a topological sort).
  
   Syntax
  
  tsort [File]
  
  Description
  
  The tsort command reads from File or standard input an unordered
  list  of  ordered  pairs,  builds  a completely ordered list, and
  writes it to standard output.
  
  The input File should contain pairs of nonempty strings separated
  by blanks.  Pairs of different items indicate  a  relative order.
  Pairs of identical items indicate presence,  but no relative ord-
  er.  You can use the tsort command to sort the output of the
  lorder command.
  
  If File contains an odd number of fields, an appropriate error
  message is displayed.
  
  Example
  
  The following example creates a properly ordered library:
  
  1.    To create a subroutine library, enter:
  
  lorder charin.o scanfld.o scan.o scanln.o \ | tsort
     | xargs ar  qv libsubs.a
  
  This creates a subroutine library named libsubs.a that contains
  charin.o, scanfld.o,  scan.o,  and scanln.o.  The ordering of the
  object modules in the library is important.  The lorder and tsort
  commands together add the subroutines to the library in the prop-
  er order.
  
  
  
  2.    Suppose that scan.o calls scanfld.o and scanln.o.  scanfld.o
  also calls charin.o.  First, the lorder command creates a list of
  pairs that shows these dependencies:
  
  charin.o charin.o
  scanfld.o scanfld.o
  scan.o scan.o
  scanln.o scanln.o
  scanfld.o charin.o
  scanln.o charin.o
  scan.o scanfld.o
  
  3.    Next, the | (vertical bar) sends this list to the tsort com-
  mand, which converts it into the ordering needed:
  
  scan.o
  scanfld.o
  scanln.o
  charin.o
  
  Note that each module precedes the module it calls.  charin.o,
  which does not call another module, is last.
  
  
  
  4.    The second | then sends this list to the xargs command, which
  constructs and runs the following ar command:
  
  ar qv libsubs.a scan.o scanfld.o scanln.o charin.o
  
  This ar command creates the properly ordered library.
  
  Implementation Specifics
  
  This command is part of Application Development Toolkit in AIX
  Base Application Development Toolkit.
  
  Files
  
  /bin/tsort    The tsort command.
  
  /usr/bin/tsort                Symbolic link to the tsort command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries: library.
  
         Commands Overview
  
  Related Information
  
  The  ar command,  lorder command, and  xargs command.
  
  
4
  units Command
  
  
  Purpose
  
  Converts units in one measure to equivalent units in another
  measure.
  
   Syntax
  
  units [-] [FileName]
  
  Description
  
  The units command converts quantities expressed in one measure-
  ment to their equivalents in another.  The units command is an
  interactive  command.    It prompts you for the unit you want  to
  convert from and the unit you want to convert  to  . This command
  only does multiplicative scale changes.   That is, it can convert
  from one value to another only when the conversion is done with a
  multiplication factor.  For example,  it  cannot  convert between
  degrees Fahrenheit and degrees  Celsius,  because the value of 32
  must be added or subtracted in the conversion.
  
  You can specify a quantity as a multiplicative combination of un-
  its, optionally preceded by a numeric multiplier.
  
  Indicate powers by entering suffixed positive integers and indi-
  cate division by / (slash).
  
  The units command recognizes lb as a unit of mass, but considers
  pound to be the British pound  sterling.    Com-
  pound names are run together (such as lightyear).  Prefix British
  units differing from their American counterparts with br
  (brgallon for instance).  The /usr/lib/unittab
  file contains a complete list of the units that the units command
  uses.
  
  Most familiar units, abbreviations, and metric prefixes are
  recognized by the units command, together with the following:
  
  pi    Ratio of circumference to diameter
  
  c     Speed of light
  
  e     Charge on an electron
  
  g     Acceleration of gravity
  
  force Same as  g
  
  mole  Avogadro's number
  
  water Pressure head per unit height of water
  
  au    Astronomical unit.
  
  To start the units command, enter:
  
  units
  
  Now you can try the following examples.  In these examples, the
  text that you enter is shown in bold type and the output from the
  units command is shown in non-bold type.
  
  Examples
  
  1.    To display conversion factors:
  
  you have: in
  you want: cm 
      * 2.540000e+00 
      / 3.937008e-01
  
  The output from the units command tells you to multiply the
  number of inches by 2.540000e+00 to get centimeters, and to mul-
  tiply the number of centimeters by 3.937008e-01 to get inches.
  
  These numbers are in standard exponential notation, so
  3.937008e-01 means 3.937008 x 10-1, which is
  the same as 0.3937008.  The second number is always the recipro-
  cal of the first; for example, 2.54 equals 1/0.3937008.
  
  2.    To convert a measurement to different units:
  
  you have: 5 years
  you want: microsec 
      * 1.577846e+14 
      / 6.337753e-15
  
  The output shows that 5 years equals 1.577846 x 1014 mi-
  croseconds, and that one microsecond equals 6.337753 x 10-15
  years.
  
  3.    To give fractions in measurements:
  
  you have: 1|3 mi
  you want: km 
      * 5.364480e-01 
      / 1.864114e+00
  
  The | (vertical bar) indicates division, so 1|3 means one-third.
  This shows that one-third mile is the same as 0.536448 kilome-
  ters.
  
  4.    To include exponents in measurements:
  
  you have: 1.2-5 gal
  you want: floz
       * 1.536000e-03
       / 6.510417e+02
  
  The expression 1.2-5 gal is the equivalent of 1.2 x 10-5.  Do not
  type an e before the exponent.  This example shows that 1.2 x 10-
  5 (0.000012) gallons equal 1.536 x 10-3 (0.001536) fluid ounces.
  
  5.    To specify complex units:
  
  you have: gram centimeter/second2
  you want: kg-m/sec2
       * 1.000000e-05
       / 1.000000e+05
  
  The units gram centimeter/second2 mean "grams x centime-
  ters/second2." Similarly, kg-m/sec2 means "kilo-
  grams x meters/sec2," which is often read as "kilogram-meters per
  seconds squared." .
  
  6.    If the units you specify after you have and you want are incom-
  patible:
  
  you have: ft
  you want: lb
  conformability
       3.048000e-01 m
       4.535924e-01 kg
  
  The message conformability means the units you specified cannot
  be converted.  Feet measure length, and pounds  measure  mass, so
  converting from one to the other does not make sense.  Therefore,
  the units command displays the equivalent of each value in stan-
  dard units.
  
  In other words, this example shows that one foot equals 0.3048
  meters and that one pound equals 0.4535924 kilograms. The units
  command shows the equivalents in meters and kilograms because the
  command considers these units to be standard measures of length
  and mass.
  
  Implementation Specifics
  
  Japanese Language Support: This command is not available for
  Japanese Language Support.
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /usr/bin/units        The units command.
  
  /usr/lib/unittab
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entry:  interactive.
  
  
4
  hostid Command
  
  
  Purpose
  
  Sets or displays the identifier of the current local host.
  
   Syntax
  
  hostid [  HexNumber |  InternetAddress |  HostName ]
  
  Description
  
  The hostid command displays the identifier (either a unique host
  name or a numeric argument) of the current  local host as a hexa-
  decimal  number.   This numeric value is expected  to  be  unique
  across all  hosts  and is commonly set to the address of the host
  specified by the InternetAddress or HostName parameter.  The root
  user can set the hostid command by specifying a hexadecimal
  number for the HexNumber, InternetAddress, or HostName parameter.
  The host id is set to the hostname by the /etc/rc.net file.
  
  Parameters
  
  HexNumber     A unique hexadecimal number representing the current lo-
  cal host.
  
  InternetAddress       An Internet address representing the current local
  host.
  
  HostName      A symbolic name that maps to a unique host.
  
  Examples
  
  1.    To set the identifier of the local host to the local Internet
  address with the hostid command, enter the command in the follow-
  ing format:
  
  hostid 192.9.200.3
  0xc009c803
  
  The hostid command converts the Internet address 192.9.200.3 into
  the hexadecimal representation 0xc009c803, and then sets the lo-
  cal host (your workstation  connected  to  a network) to this ad-
  dress.
  
  2.    To display the identifier of the local host, enter:
  
  hostid
  0xc009c803
  
  The hostid command displays the identifier of the host as a hexa-
  decimal number.
  
  Implementation Specifics
  
  This command is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/rc.net   Specifies automatic login information for the ftp and
  rexec commands.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  host,  network address.
  
   Understanding Addressing for TCP/IP.
  
  Related Information
  
  The  gethostid subroutine,  sethostid subroutine.
  
  The  rc.net file.
  
  The  hostname command.
  
  
4
  chps Command
  
  
  Purpose
  
  Changes attributes of a paging space.
  
   Syntax
  
  chps [ -s LogicalPartitions] [ -a{  y |  n}] PagingSpace
  
  Description
  
  The chps command changes attributes of a specific paging space.
  The PagingSpace parameter specifies the name of the paging space
  to be changed.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit chps
  
  Flags
  
  -a    Specifies to use a paging space at the next system restart.
  
  y     Specifies that the paging space is configured at subsequent sys-
  tem restarts.
  
  n     Specifies that the paging space is not configured at subsequent
  system restarts.
  
  -s LogicalPartitions  Specifies the number of logical partitions to
  add.
  
  Examples
  
  1.    To change the size of the myvg paging space , enter:
  
  chps -s4 myvg
  
  This adds four logical partitions to the myvg paging space.
  
  2.    To specify that the PS02 paging space is used and configured at
  subsequent system restarts, enter:
  
  chps -a y PS02
  
  This specifies the PS02 paging space to be used and configured at
  subsequent system restarts.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/swapspaces       Specifies the paging space devices activated by
  the  swapon -a command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  paging space,  logical volume.
  
        The  Paging Space Overview explains paging space and its alloca-
  tion policies.
  
        The  File Systems Overview provides information on working with
  files.
  
  Related Information
  
  The  lsps command,  mkps command,  rmps command,  swapon command.
  
  The  Paging Space Overview explains paging space and its alloca-
  tion policies.
  
  The  File Systems Overview provides information on working with
  files.
  
  The  System Management Interface Tool (SMIT) Overview explains
  the structure, main menus, and tasks that are done with SMIT.
  
   Using SMIT explains SMIT screens, how to navigate in the
  screens, and how to enter data.
  
  
4
  dump Command
  
  
  Purpose
  
  Dumps selected parts of an object file.
  
   Syntax
  
  dump [ -a   -c  -d  -g  -h  -l  -n  -o  -p 
  -H  -R  -T ] [[[ -zName [,Number]] [ +zNumber]] ...] [[
  +tIndex [ -tIndex]] ...] File [File...]
  
  Note: Do not put a space between the -z Name flag and the ,Number
  parameter.
  
  Description
  
  The dump command dumps selected parts of the specified File
  parameter.  The dump command accepts object files, archive object
  files, and executable files.  The dump command writes information
  in character, hexadecimal, octal, or decimal representation.
  
  Flags
  
  -a    Dumps the archive header of each member of each specified ar-
  chive.
  
  -c    Dumps the string table.
  
  -d    Dumps the raw data for each section.
  
  -g    Dumps the global symbols in the archive symbol table.
  
  -h    Dumps section headers.
  
  -l    Dumps line number information
  
  -n    Dumps all loader section information.
  
  -o    Dumps each optional header.
  
  -p    Suppresses header printing.
  
  -r    Dumps relocation information.
  
  -s    Dumps the raw data for each selection.
  
  -t    Dumps symbol table entries.
  
  -tIndex       Dumps only the index symbol table entry specified with the
  Index parameter.  Use the -t flag with the +t flag to specify a
  range of symbol table entries.
  
  +tIndex       Dumps the symbol entry in the range that ends with the
  Index parameter.  The range starts at the first symbol
  table entry or at the entry specified by the -t flag.
  
  -u    Underlines the name of the File parameter.
  
  -v    Dumps the information in symbolic representation rather than
  numeric.  Any flag except the -o flag and -s flag can be used
  with the -v flag.
  
  -zName[,Number]       Dumps line number entries for the Name parameter
  or a range of line number entries  that  starts  at the specified
  number.  You can use a blank to replace the comma that  separates
  the Name and Number parameters if the entire argument is quoted.
  
  +zNumber      Dumps all line numbers up to the Number parameter.
  
  -H    Dumps the header of the loader section.  The -H flag applies
  only to executable files.
  
  -R    Dumps the relocation entries for the leader section.  The -R
  flag applies only to executable files.
  
  -T    Dumps the symbol table entries for the loader section.  The -T
  flag applies only to executable files.
  
  Examples
  
  1.    To dump the string table of the a.out file, enter:
  
  dump -c a.out
  
  2.    To dump the contents of an XCOFF data section to standard out-
  put, enter:
  
  dump -d a.out
  
  3.    To dump the object file headers, enter:
  
  dump -o a.out
  
  4.    To dump line number information for the a.out file, enter:
  
  dump -l a.out
  
  5.    To dump relocation information for the a.out file, enter:
  
  dump -r a.out
  
  6.    To dump the contents of the a.out object file text section,
  enter:
  
  dump -s a.out
  
  7.    To dump symbol table information for the a.out object file,
  enter:
  
  dump -t a.out
  
  8.    To print symbol table entries 20 to 31 without header informa-
  tion, enter:
  
  dump -p -t20 +30 a.out
  
  Implementation Specifics
  
  This command is part of Application Development Toolkit in AIX
  Base Application Development Toolkit.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  Extended Common Object File For-
  mat (XCOFF), archive,  argument,  character,  entry,  executable
  files,  file,  flag,  format,  header,  hexadecimal,  index, 
  member,  numeric,  object file,  octal,  output,  parameter, 
  string,  table,  text.
  
  Related Information
  
  The  ar command,  nm command,  size command.
  
  The  a.out file,  ar file.
  
  
4
  lsvg Command
  
  
  Purpose
  
  Displays information about volume groups.
  
   Syntax
  
  lsvg [ -o ] | [  -n DescriptorPhysicalVolume ] | [  -i ] [  -l | 
  -M |  -p ]  VolumeGroup...
  
  Description
  
  The lsvg command displays information about volume groups.  If
  you use the VolumeGroup parameter, only the information for that
  volume group is displayed.  If you do not use the VolumeGroup
  parameter, a list of the names of all defined volume groups is
  displayed.
  
  Note: When information from the Device Configuration Database is
  unavailable,  some  of  the fields will have the undefined string
  ????.  The lsvg command attempts to obtain as
  much information as possible from the description area when it is
  given a logical volume identifier.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit lsvg
  
  Flags
  
  If no flags are specified, the following status is displayed:
  
  Volume group  Name of the volume group.  Volume group names must be
  a system-wide unique name, and can range from 1 to 15 characters.
  
  Volume group state    State of the volume group.  If the volume group
  is activated with the  varyonvg command, the state is either
  on/full  (indicating all physical volumes are active) or
  on/partial (indicating  all physical volumes are
  not active).  If the volume group is not activated with the 
  varyonvg command, the state is off.
  
  Permission    Access permission: read-only or read-write.
  
  Max LVs       Maximum number of logical volumes allowed in the volume
  group.
  
  LVs   Number of logical volumes currently in the volume group.
  
  Open LVs      Number of logical volumes within the volume group that
  are currently open.
  
  Total PVs     Total number of physical volumes within the volume
  group.
  
  Active PVs    Number of physical volumes that are currently active.
  
  VG Identifier The volume group identifier.
  
  PP Size       Size of each physical partition.
  
  Total PPs     Total number of physical partitions within the volume
  group.
  
  Free PPs      Number of physical partitions not allocated.
  
  Alloc PPs     Number of physical partitions currently allocated to
  logical volumes.
  
  Quorum        Number of physical volumes needed for a majority.
  
  VGDS  Number of volume group descriptor areas within the volume
  group.
  
  Auto-on       Automatic activation at IPL (yes or no).
  
  -p    Lists the following information for each physical volume within
  VolumeGroup:
  
  Physical volume       A physical volume within the group.
  
  PVstate       State of the physical volume.
  
  Total PPs     Total number of physical partitions on the physical
  volume.
  
  Free PPs      Number of free physical partitions on the physical
  volume.
  
  Distribution  The number of physical partitions allocated within
  each section of the  physical  volume:  inside edge, back middle,
  center, front middle and outside edge of the physical volume.
  
  -l    Lists the following information for each logical volume within
  VolumeGroup:
  
  LV    A logical volume within the volume group.
  
  Type  Logical volume type.
  
  LPs   Number of logical partitions in the logical volume.
  
  PPs   Number of physical partitions used by the logical volume.
  
  PVs   Number of physical volumes used by the logical volume.
  
  Logical volume state  State of the logical volume.  Open/stale in-
  dicates the logical volume is open but contains  partitions  that
  are not current.  Open/syncd indicates the logical volume is open
  and synchronized.  Closed indicates the logical volume has not
  been opened.
  
  Mount Point   File system mount point for the logical volume, if ap-
  plicable.
  
  -i    Reads volume group names from standard input.
  
  -M    Lists the following fields for each logical volume on the phy-
  sical volume:
  
  PVname:PPnum [LVname: LPnum [:Copynum] [PPstate]]
  
  PVname        Name of the physical volume as specified by the system.
  
  PPnum Physical partition number.  Physical partition numbers can
  range from 1 to 1016.
  
  LVname        Name of the logical volume to which the physical partitions
  are  allocated.  Logical volume names must be system-wide  unique
  names, and can range from 1 to 64 characters.
  
  LPnum Logical partition number.  Logical partition numbers can
  range from 1 to 64,000.
  
  Copynum       Mirror number.
  
  PPstate       Only the physical partitions on the physical volume that
  are not current are shown as stale.
  
  -n DescriptorPhysicalVolume   Accesses information from the specif-
  ic descriptor area of DescriptorPhysicalVolume.  The information
  may not be current, since the information accessed with the -n
  flag  has not been validated for the logical volumes.  If you  do
  not use the -n flag, the descriptor area from the physical volume
  that holds the most validated information is accessed, and there-
  fore the information that is displayed  is  current.   The volume
  group need not be active when you use this flag.
  
  -o    Lists only the active volume groups (those that are varied on).
  An active volume group is one that is available for use.
  
  Examples
  
  1.    To display the names of all active volume groups, enter:
  
  lsvg -o
  
  2.    To display the names of all volume groups within the system,
  enter:
  
  lsvg
  
  3.    To display information about volume group vg02, enter:
  
  lsvg vg02
  
  The characteristics and status of both the logical and physical
  partitions of volume group vg02 are displayed.
  
  4.    To display the names, characteristics and status of all the
  logical volumes in volume group vg02, enter:
  
  lsvg -l vg02
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc  Directory where the lsvg command resides.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  logical volume,  logical parti-
  tion,  physical volume,  physical partition,  volume group.
  
        The  Logical Volume Storage Overview explains the Logical Volume
  Manager, physical volumes, logical volumes, volume groups, organ-
  ization, ensuring data integrity,  and  understanding the alloca-
  tion characteristics.
  
  Related Information
  
  The  chvg command,  lspv command,  lslv  command,  varyonvg com-
  mand.
  
  The  Logical Volume Storage Overview explains the Logical Volume
  Manager, physical volumes, logical volumes, volume groups, organ-
  ization, ensuring data integrity, and understanding  the  alloca-
  tion characteristics.
  
  The  System Management Interface Tool (SMIT) Overview explains
  the structure, main menus, and tasks that are done with SMIT.
  
   Using SMIT explains SMIT screens, how to navigate in the
  screens, and how to enter data.
  
  
4
  emrcv Command (MVS/TSO)
  
  
  Purpose
  
  Receives files from an MVS/TSO host session.
  
   Syntax
  
  emrcv [ -a] [ -m] [ -r] [ -t] [ -v] [ -fFile] [ -wSeconds]  -T" 
  DataSetName  [(  MemberName ] [/  Password]  [ TEXT] [
  ASCII ] [ CRLF ]  "
  
  Description
  
  The emrcv command (MVS/TSO) receives MVS/TSO host files on your
  workstation.
  
  Flags
  
  -?    Displays the help screen for the emrcv command.  Do not use -?
  with any other flag.
  
  -a    Attaches a host file to the end of your workstation file.  You
  must specify append when  -fFile is the same as an existing
  workstation file name, or the file being transferred will replace
  the workstation file.
  
  -fFile        Specifies the workstation file (path and file name) to be
  received.  File may be any valid AIX Operating System file.  If
  you  do  not specify this parameter, the system uses stdout.  (By
  default, stdout corresponds to a display screen.)
  
  -m    Monitors the file transfer process and displays the current se-
  quence number, duration, and number of bytes transferred.
  
  -r    Allows the  TEXT host option to translate each host line-
  separator to an AIX Operating System newline, but suppresses 
  EBCDIC to  ASCII translation.
  
  -t    Times the file transfer process and displays the duration in
  seconds.
  
  -v    Displays the product name, provides information about other
  flags, and periodically displays information about the file being
  transferred.
  
  -wSeconds     Specifies the maximum amount of time to wait for a host
  response  if  the  transmission stops before it is complete.  The
  value of Seconds must be a number from 1 to 200.  The default is
  25 seconds.
  
  -T" " A required command line parameter that specifies the host
  information string for MVS/TSO.  Put the  information  string in-
  side the quotation marks.   Optional host parameters may be in-
  cluded in the string.
  
  Host Required Parameters
  
  Note: Host required parameters should be specified without spaces
  separating them.
  
  DataSetName   A required positional parameter (the MVS/TSO file
  name).  Single quotation marks may surround the combined data set
  name and MemberName to show that the user ID is not prefixed.
  
  (MemberName)  The member name from which to read the file if the
  data set is a partitioned data set.  The data set must exist.
  
  /Password     Required if password protection was specified for the
  MVS/TSO data set.
  
  Optional Host Parameters
  
  ASCII Specifies that a host file be converted from  EBCDIC to 
  ASCII form during  file  transfer.   The conversion occurs at the
  host, and the host uses the EBCDIC to ASCII translation table.
  
  CRLF  Specifies that carriage return/line feed characters are line
  separators and that they be inserted during file transfer.
  
  TEXT  Converts  EBCDIC characters to  ASCII, and host line-
  separator characters to AIX Operating System  newline characters.
  This  makes  an EBCDIC file readable at your  workstation.    The
  conversion  occurs  at  the workstation and the EBCDIC  to  ASCII
  translation table is used.   If  you  use the TEXT option, you do
  not need to use the  ASCII or  CRLF options.
  
  Examples
  
  1.    To display help information for the emrcv command (MVS/TSO),
  enter:
  
  emrcv -?
  
  2.    To receive host data set member tso.samples(example1) as AIX
  file example1 with EBCDIC to ASCII translation, enter:
  
  emrcv -fexample1 -T"tso.samples(example1) TEXT"
  
  In the above example, the host data set member
  tso.samples(example1) is received as AIX file (
  -f) example1.  EBCDIC to ASCII translation ( TEXT) makes the host
  file readable at the workstation.
  
  3.    To receive host data set member tso.samples(example1) as AIX
  file example1, monitor the process, set a 30-second host timeout,
  with EBCDIC to ASCII translation, enter:
  
  emrcv -m -w30 -fexample1 -T"tso.samples(example1) TEXT"
  
  In the above example, the host data set member
  tso.samples(example1) is received as AIX file (
  -f) example1.  The process is monitored ( -m) and a 30-second
  host timeout ( -w) is set.  EBCDIC to ASCII translation ( TEXT)
  makes the host file readable at the workstation.
  
  4.    To receive host data set member tso.samples(example1) with the
  password mypwd  on the dataset, as AIX file example1, with EBCDIC
  to ASCII translation, enter:
  
  emrcv -fexample1 -T"tso.samples(example1)/mypwd TEXT"
  
  In the above example, the host data set member
  tso.samples(example1)
  
  with the password mypwd is received a
  -f) example1. EBCDIC to ASCII transla-
  tion makes the host file readable at the workstation.
  
  5.    To receive host sequential data set tso.files.text1 as AIX file
  /u/jdoe/text1, with  EBCDIC  to ASCII translation, and host line-
  separator  characters  replaced with ASCII  carriage  return/line
  feed characters, enter:
  
  emrcv -f/u/jdoe/text1 -T"tso.files.text1 ASCII CRLF"
  
  In the above example, the host sequential data
  set tso.files.text1 is received as AIX file (
  
  -f) /u/jdoe/text1. EBCDIC to ASCII tr
  ASCII) is used and host  line-separator  characters  have
  been replaced with ASCII carriage return/line feed characters (
  CRLF).
  
  Implementation Specifics
  
  This command is part of AIX 3278/79 Emulation/6000.
  
  File
  
  /usr/lib/em78 directory       Contains the EM78 program.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  ASCII,  EBCDIC,  directory,  file,  host, 
  parameter.
  
  For information on using the EM78 program, see  3278/79 Emulation
  Overview.
  
  Related Information
  
  The  em78 command starts the EM78 program; the  emkey command
  customizes the keyboard  mapping, color, and field attributes for
  the EM78 emulator; the  emrcv (VM/CMS),  emsend (MVS/TSO), and 
  emsend (VM/CMS) commands also transfer files between a host and a
  workstation.
  
  
5
  termdef Command
  
  
  Purpose
  
  Queries terminal characteristics.
  
   Syntax
  
  termdef [  -c |  -l |  -t ]
  
  Description
  
  The termdef command identifies the current display type, the ac-
  tive lines setting, or the current columns setting.  This
  simplifies  the  task  of resetting the
  lines and columns when you switch fonts and the task of resetting
  the $TERM environment variable when you switch displays.  The 
  terminfo file defines the default  number  of  lines  and
  columns for  each  display,  but the lines and columns can change
  depending upon which font is currently active.   In addition, the
  $TERM environment variable does not automatical-
  ly reflect the display currently being used.
  
  Flags
  
  -c    Returns the current column value.
  
  -l    Returns the current line value.
  
  -t    Returns the name of the current display (the default action).
  
  Example
  
  To set the $TERM environment variable according to the value of
  the currently active display, the following lines  could be added
  to a login profile (the /etc/profile file):
  
  TERM_DEFAULT=hft
  TERM=`termdef`
  TERM=${TERM:-$TERM_DEFAULT}
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/termdef  Command file.
  
  /etc/profile  Login profile.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  terminfo file.
  
  The  hft special file.
  
  
5
  mhmail Command
  
  
  Purpose
  
  Sends or receives mail.
  
   Syntax
  
  mhmail User ...  [  -cc User ... ] [  -from User ... ] [  -sub-
  ject "String" ] [ 
  -body "String" ]
  
  Description
  
  The mhmail command composes, sends, and incorporates messages.
  To incorporate a message, enter the mhmail command without any
  flags.  The default folder is $HOME/inbox.
  
  If you specify user addresses, the mhmail command accepts text
  from  your terminal and composes a message.  You can end the mes-
  sage text by pressing the Ctrl-D key sequence.  The mhmail com-
  mand sends a copy of the message to each specified address.
  
  Flags
  
  -body "String"        Sends a message with the specified string as the
  body.  You must enclose the string in quotes.  When you specify
  the -body flag, the mhmail command does not accept text
  from the terminal.
  
  -cc User...   Sends a copy of the message to the specified users.
  The mhmail command puts the addresses in the cc: field.
  
  -from User... Places the specified user address in the From: field
  of the message.
  
  -help Displays help information for the command.
  
  -subject "String"     Places the specified text string in the Subject:
  field of the message.
  
  Examples
  
  1.    To incorporate new mail into the default mail folder,
  $USER/Mail/inbox, enter:
  
  mhmail
  
  The system displays a message similar to the following:
  
  Incorporating new mail into inbox...
  65+  04/08 jim@athena.a   Meeting        <<The meeting will
  66   04/08 jim@athena.a   Schedule        <<Schedule change
  
  In this example, two messages are incorporated into the inbox
  file.  The subject of the first message is Meeting, and the first
  line starts with the words The meeting will.  The subject of the
  second message is Schedule, and the first line starts with the
  words Schedule change.
  
  2.    To send a message regarding a schedule change to user jamie on
  system venus, enter:
  
  mhmail jamie@venus -subject "Schedule Change"
  
  The system waits for you to enter the text of the message.  After
  completing the last line of  the  text,  press  the Enter key and
  then the Ctrl-D key sequence to send the message.
  
  Implementation Specifics
  
  This command is part of Message Handler in the Base Operating
  System (BOS) Extensions 1 of AIX for RISC System/6000.
  
  Files
  
  /usr/spool/Mail/$USER file    Defines the location of the mail drop.
  
  /usr/bin/mhmail file  Contains the executable form of the mhmail
  command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  default,  file,  flag,  folder,  format,  mes-
  sage.
  
   Message Handler (MH) Overview.
  
   Mail Overview.
  
  Related Information
  
  The  inc command,  post command.
  
  The  mh_alias file format,  mh_profile file format.
  
  
5
  uucp Command
  
  
  Purpose
  
  Copies files from one AIX system to another AIX or UNIX system.
  
   Syntax
  
  uucp [ -c| -C] [ -d| -f] [ -gGrade] [ -j] [ -m] [ -nUser ] [ 
  [ -sFile] [ -xDebugLevel]  SourceFile...
   DestinationFile...
  
  Description
  
  The uucp command is a Basic Networking Utilities (BNU) command
  that  copies  one or more source files from one AIX system to one
  or more destination  files  on another UNIX system.  Files can be
  copied within a local system,  between  a local and a remote sys-
  tem, and between two remote systems.
  
  The uucp command accomplishes the file transfer in two steps:
  first, by creating a command ( C.*) file in the spooling directo-
  ry on the local computer and then by calling the  uucico daemon
  to send the request to the specified computer.  Command files in-
  clude information such  as  the  full path name of the source and
  destination  files  and  the  sender's login name.  The full path
  name of a command file is a form of the following:
  
  /usr/spool/uucp/SystemName/C.SystemNameNxxxx
  
  where N is the grade of the request and xxxx is the hexadecimal
  sequence number used by BNU.
  
  If the uucp command is used with the  -C flag to copy the files
  to the spool directory for transfer, the uucp command creates not
  only a command file, but also a data ( D.*) file that contains
  the actual source file.  The full  path  name of a data file is a
  form of the following:
  
  /usr/spool/uucp/SystemName/D.SystemNamexxxx###
  
  Once the command files (and data files, if necessary) are creat-
  ed, the uucp command then calls the  uucico daemon, which in turn
  attempts to contact the remote computer to deliver the files.
  
  It is useful to issue the  uuname command to determine the exact
  name of the remote system before issuing the uucp command.  The 
  uulog command provides information about uucp activities
  with another system.
  
  Source and Destination File Names
  
  *     File names and system names can contain only ASCII characters.
  Each can either be a path name on the local  system  or  have the
  following form:
  
  SystemName! PathName
  
  where SystemName is taken from a list of system names that BNU
  knows about.
  
  *     The destination SystemName can also be a list of names, such as
  the following:
  
  SystemName!SystemName! . . . ! SystemName!PathName
  
  In this case, an attempt is made to send the file using the
  specified  route to the destination.  Make sure that intermediate
  nodes in this route  are willing to forward information, and that
  they actually talk to the next system.
  
  *     The shell pattern-matching characters ? (question mark), * (as-
  terisk), and [ . . . ] (brackets and ellipsis) can be used in the
  path names of the source file;  the  appropriate  system  expands
  them.  The shell pattern-matching  characters  should not be used
  in the path name of the destination file.
  
  *     If the DestinationFile is a directory rather than a file, the
  uucp command uses the last part of the SourceFile name to
  name the transferred file on the remote system.
  
  Path Names
  
  Path names for the SourceFile and DestinationFile parameters can
  contain only ASCII characters.   Paths for the source file can be
  one of the following:
  
  *     A full path name
  
  *     A relative path name
  
  Paths for the DestinationFile parameter can be in the forms for
  the SourceFile parameter, or can be one of the following:
  
  *     A path name preceded by \~User (for example, \~jkimble) where
  User is a login name on the remote system.  The specified
  user's  login directory is then considered the destination of the
  transfer.  If the user specifies an invalid login name, the files
  are transferred to the public directory,  /usr/spool/uucppublic,
  which is the default.
  
  *     A path name preceded by \~/Destination, where Destination is ap-
  pended to /usr/spool/uucppublic.  The destination is treated as a
  file  name  unless more than one file is being transferred by the
  request, the destination already exists as a directory on the re-
  mote system, or the destination is specified as a directory.
  
  To specify the destination as a directory, follow the destination
  name with a / (slash).  For example, \~/amy/ as the destination
  creates the directory /user/spool/uucppublic/amy, if it does not
  already exist, and puts the requested files in that directory.
  
  Permissions
  
  *     The system administrator should restrict the access to local
  files by users on other systems.
  
  *     When transmitting files, the uucp command preserves execute per-
  missions  and grants read and write permissions to the owner, the
  group, and all others.  (The uucp command owns the file.)
  
  *     Sending files to arbitrary DestinationFile path names on other
  systems or getting files from arbitrary SourceFile path names on
  other systems often fails because of security restrictions.   The
  files  specified in the path name must give read or write permis-
  sion not only for the same group of users but also for any group.
  
  *     Protected files and files in protected directories owned by the
  requestor can be sent by the uucp command.
  
  Flags
  
  -c    Copies the source files to the spooling directory and immedi-
  ately invokes the uucico daemon, so that the files are
  transferred  right  away.  This flag is the default and cannot be
  used with the -C flag.
  
  -C    Copies local files to the spool directory for transfer.
  Depending on the configuration of the  Poll and  Systems files
  and on how often the  uusched daemon is run, the files may be
  transferred immediately on demand polling or in the future.
  
  Occasionally, problems occur while transferring a source file;
  for example, the remote computer may not be  working or the login
  attempt may fail.  In such a case, the file remains in  the spool
  directory  until it is either transferred successfully or removed
  by a cleanup command.
  
  This flag counteracts the -c flag.
  
  -d    Creates any intermediate directories needed to copy the source
  files to the destination files on  a  remote  system.  Instead of
  first creating a directory and then copying files to it, the uucp
  command can be  entered  with  the destination path name, and the
  BNU Program will create the required directory.  This flag is the
  default and cannot be used with the -f flag.
  
  -f    Does not create intermediate directories during the file
  transfer.  This flag is used if the destination directory already
  exists  and you do not want BNU to write over it.   This  command
  counteracts the -d flag.
  
  -gGrade       Specifies when the files are to be transmitted during a
  particular connection.  The Grade variable is a single number (0
  to 9) or letter (A to Z, a to z); lower ASCII-sequence characters
  cause the files to be transmitted earlier than do higher sequence
  characters.  The number 0  is  the highest (earliest) grade; z is
  the lowest (latest) grade.  The default is N.
  
  -j    Displays the job identification number of the transfer opera-
  tion on standard output.  This job ID can be used with the  uus-
  tat or  uuq command to obtain the status of a particular
  job or with the uustat -k command or uuq -d command to terminate
  the transfer before it is completed.
  
  -m    Sends a mail message to the requester when the source file is
  successfully copied to the destination file  on  a remote system.
  The    message    is    sent    to   the   requester's   mailbox,
  /usr/spool/mail/User.  The  mail com-
  mand does not send a message for a local transfer.
  
  The -m flag works only when sending files or receiving a single
  file.  It does not work when forwarding files.
  
  -nUser        Notifies the recipient on the remote system identified by
  the User entry that a file has been sent.  The mail system does
  not send a message for a local transfer.   User names can contain
  only ASCII characters.  Receiving multiple files specified by the
  shell pattern-matching characters ? (question mark), * (aster-
  isk), and [ . . . ] (brackets and ellipses) does not activate the
  -n option.
  
  -r    Prevents the starting of the  uucico file transfer daemon, even
  if the command was issued at a time when calls to the remote sys-
  tem are permitted.   (By  default, a call to the remote system is
  attempted if the command is issued during a time period specified
  in the Poll and Systems files.) The -r option is useful for de-
  bugging.
  
  -sFile        Reports the status of the transfer to the specified file.
  In this case, the File variable must designate a full path name.
  
  -xDebugLevel  Displays debugging information on the screen of the
  local system.  The DebugLevel variable is a number from 0 to 9.
  The higher the number, the more detailed the report.
  
  Examples
  
  1.    To copy a file from the local system to a remote system, enter:
  
  uucp /u/geo/f1 hera!/u/geo/f1
  
  In this example, the f1 file from the local system is copied to
  remote system hera.
  
  2.    To copy a file from the remote system and place it in the pub-
  lic directory, enter:
  
  uucp hera!geo/f2 /usr/spool/uucppublic/f2
  
  In this example, the f2 file from remote system hera is copied
  and placed in the public directory.
  
  3.    To copy a file from the remote system and place it in a direc-
  tory other than the public directory, enter:
  
  uucp hera!geo/f2 /u/geo/f2
  
  In this example, the f2 file from the remote system hera is
  copied to the /u/geo/f2 directory.  The geo login directory must
  allow  write  permission to members of the other group, for exam-
  ple, with mode 777.
  
  Implementation Specifics
  
  This command is part of the Basic Network Utilities Program (BNU)
  in BOS Extensions 1 of AIX Base Operating System.
  
  Files
  
  /usr/bin/uucp Command path name.
  
  /usr/lib/uucp/ Poll   File listing times when remote systems are au-
  tomatically called (polled)
  
   /usr/lib/uucp/Systems        File describing accessible remote systems
  
   /usr/spool/uucp      Spooling directory containing BNU status informa-
  tion
  
   /usr/spool/uucppublic        Public directory containing files awaiting
  transfer by the uucico daemon
  
  /usr/spool/uucppublic/SystemName/ C.* Command files
  
  /usr/spool/uucppublic/SystemName/ D.* Data files.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  system,  remote system
  
  Related Information
  
  The  ct command,  cu command,  mail command,  uuclean command, 
  uucleanup command,  uulog command,  uuname command, 
  uupick command,  uuq command,  uustat command,  uuto com-
  mand,  uux command.
  
  The  uucico daemon,  uusched daemon.
  
  
5
  showsnf Command
  
  
  Purpose
  
  Prints the contents of a Server Natural Format (snf) font file.
  
   Syntax
  
  showsnf [ -v] [ -g] [ -L |  -M] [ -l |  -m] [ -pNumber] [
  -uNumber] snfFontFile
  
  Description
  
  The showsnf utility command displays the contents of font files
  in the Server Natural Format (snf) produced by the bdftosnf util-
  ity command.  It  is used to verify that a font file has not been
  corrupted  or  to  convert the individual glyphs into  arrays  of
  characters for proofreading or for  conversion to some other for-
  mat.
  
  Flags
  
  -v    Indicates that character bearings and sizes should be printed.
  
  -g    Indicates that character glyph bitmaps should be printed.
  
  -l    Indicates that the bit order of the font is least significant
  bit first.
  
  -L    Indicates that the byte order of the font is least significant
  byte first.
  
  -m    Indicates that the bit order of the font is most significant
  bit first.
  
  -M    Indicates that the byte order of the font is most significant
  byte first.
  
  -pNumber      Specifies the glyph padding of the font.  (Number = 1, 2,
  4, or 8)
  
  -uNumber      Specifies the scanline unit padding of the font.  (Number
  = 1, 2, or 4)
  
  Implementation Specifics
  
  This command is part of AIXwindows Run Time Environment in
  AIXwindows Environment/6000.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
         Enhanced X-Windows Commands Overview
  
  
5
  uudemon.admin Command
  
  
  Purpose
  
  Provides periodic information on the status of BNU file
  transfers.
  
   Syntax
  
  uudemon.admin
  
  Description
  
  The /usr/lib/uucp/uudemon.admin command is a shell procedure that
  mails  status  information  about the Basic Networking  Utilities
  (BNU) activities to the uucp login ID at intervals specified in
  the /usr/adm/cron/crontabs/uucp file.  The command exe-
  cutes both the uustat -p and the uustat -q commands:
  
  *     The -p flag instructs the uustat command to run the ps -flp com-
  mand (process status, which generates a full, long list of speci-
  fied  process  IDs) for all process ID (PID) numbers in the  lock
  files.
  
  *     The -q flag lists the jobs currently queued to run on each sys-
  tem.  These jobs either are waiting to execute or are in the pro-
  cess of  executing.   If a status file exists for the system, its
  date, time, and status information are reported.
  
  Execute the uudemon.admin command at least once a day.  The
  uudemon.admin  command  is not enabled when you
  install the BNU program.  To run this command automatically, edit
  the /usr/adm/cron/crontabs/uucp file, removing the comment char-
  acter (#)  from  the  beginning of the line that governs running
  the uudemon.admin command.
  
  Example
  
  To run the uudemon.admin command automatically, edit the
  /usr/spool/cron/crontabs/uucp file and  remove
  the  comment  character   (#)   from   the   beginning   of  the
  uudemon.admin command line.  Change:
  
  #48 8,12,16 * * * /bin/sh -c "/usr/lib/uucp/uudemon.admin > /dev/null"
  
  to:
  
  48 8, 12, 16 * * * /bin/sh -c "/usr/lib/uucp/uudemon.admin > /dev/null"
  
  The 48 notation represents minutes, the 8,12,16 notation
  represents hours based on the 24-hour clock, and the three aster-
  isks (* * *) are placeholders representing the day of the month,
  the month of the year, and the day  of  the  week,  respectively.
  This line therefore instructs the cron daemon to run the
  uudemon.admin  command daily at 48 minutes past
  the hours 800, 1200, and 1600-that  is, at 8:48 a.m., 12:48 p.m.,
  and 4:48 p.m.  respectively.
  
  Note: These run intervals are defaults.  By altering them, you can
  change the times at which the cron daemon executes the
  uudemon.admin  command to fit the needs of your
  site.
  
  Implementation Specifics
  
  This command is part of the Basic Network Utilities Program (BNU)
  in BOS Extensions 1 of AIX for RISC System/6000.
  
  Files
  
  /usr/lib/uucp directory       Contains the uudemon.admin command and the
  configuration files for BNU.
  
   /etc/locks directory Contains lock files which prevent multiple
  uses of devices and multiple calls to systems.
  
  /usr/spool/cron/crontabs/uucp file    Schedules BNU jobs, including
  the uudemon.admin command, for the cron daemon.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  shell procedure (shell script).
  
   Using BNU Maintenance Commands
  
  Related Information
  
  The  cron daemon.
  
  The  uustat command.
  
  
5
  verifysna Command
  
  
  Purpose
  
  Verifies cross-dependencies within the SNA configuration data-
  base.
  
   Syntax
  
  verifysna
  
  Description
  
  The verifysna command verifies cross-dependencies within the SNA
  configuration database and reports all potential discrepancies to
  the user.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit verifysna
  
  Implementation Specifics
  
  This command is part of AIX Systems Network Architecture Ser-
  vices/6000.
  
  This command is not available for Japanese Language Support.
  
  Files
  
  /usr/bin      Directory in which the verifysna command resides.
  
  Suggested Reading
  
  
  
  Related Information
  
   "Verifying Profiles"
  
  The  System Management Interface Tool (SMIT) Overview.
  
  
5
  rptalert Command
  
  
  Purpose
  
  Generates an alert report that can be printed out on standard
  output or  any  compatible  printer.    Also activates concurrent
  alert reporting.
  
   Syntax
  
  rptalert [ [ [  -c [ -b ] ]  -d  -s  -p PrintDevice  -f File 
  -a AlertName  -D MM/DD/YY MM/DD/YY 
  -N Number1 Number2  -F Node ...   -X Node ...   -R ]
  
  Description
  
  Alert reports are generated from the alert records stored in the
  alert log specified in the AlertName parameter that follows the
  -a flag.  You can generate reports independent
  of the Alert Manager program operation  except  when  you request
  the concurrent reporting option by setting the -c flag.
  
  You can generate a history report of alerts from an alert log,
  print the report on a compatible printer, display  the  report on
  the screen, and save the report as a file.
  
  Flags
  
  -a AlertName  The AlertName variable identifies the name of the
  alert  log  whose alert records provide the information necessary
  to generate an alert report.  You can specify the alertlog_bak
  file  if  you  want  a report based upon the previously-backed-up
  alert log.  The concurrent reporting option invoked by the -c
  flag  uses  the  alert log utilized by the currently-active Alert
  Manager program.  If the specified log does not exist,  or if any
  other log is specified for concurrent reporting, an error message
  is returned.  The alertlog log file is the default value for the
  AlertName variable.
  
  -b    Rings the high function terminal (hft) bell five times whenever
  an  alert  report is sent to standard output.  The terminal  bell
  command is located in /usr/bin/tput/bel.  This option is only
  valid when the -c flag is also set.  It is ignored when the -s
  flag is set.
  
  -c    Activates the concurrent alert reporting option.  As each alert
  record is logged into the alert log,  a  corresponding  report is
  generated  and sent to the standard output (your display  screen)
  or a specified printer.
  
  Note: The Alert Manager program must be running before this com-
  mand is invoked with the -c flag.  If the Alert Manager program
  is not running, an error message is returned.
  
  -D MM/DD/YY MM/DD/YY  Specifies the starting and ending date for
  alert  records  to  be used in generating an alert report.    The
  first MM/DD/YY variable specifies the starting date (in two-digit
  month/day/year format).  The second MM/DD/YY variable specifies
  an ending date in the same  format.    The  default  option is to
  select all the alert records in the alert log for report process-
  ing.  The following variations are permitted:
  
  *     If only one date is provided, the resulting alert report in-
  cludes alert reports from the specified date to the current date.
  
  *     If the same date is repeated in both positions, a report is gen-
  erated for that date only.
  
  -d    Requests the detailed report option.  The default option is the
  summary report.
  
  -F Node ...   The Node ...  variable specifies the node ID's (node
  numbers) of each of the alert records  selected for generating an
  alert report.    You can specify a single node ID for a report of
  the alerts generated only by that node.  The default option is to
  select alert records from all nodes for report processing.
  
  Note: The value of the Node parameter is the name assigned to a
  Network Management/6000 node by the uname -S command.  The Alert
  Manager  program  uses  this  name when building the hierarchical
  subvector  in  generic alerts.  Thus, the Alerts-Dynamic  Display
  screen of the Network Problem Determination Aid (NPDA) program in
  the  S/370 host NetView  product  displays  the  name  under  the
  RESNAME field.  Due to the architectural  limitation  by the SNA,
  only the first eight characters are used for the  field.   There-
  fore, the node ID  may be truncated if the node ED value shown by
  the uname -n command is longer than eight characters.  If the
  node is on the TCP/IP network, the user should set the node ID to
  be the same as the TCP/IP hostname.
  
  -f File       The File variable identifies the name of the file in which
  to  save the generated alert report.  You must  supply  the  full
  pathname  for  the  file, including all preceding directories and
  subdirectories.  If the -c flag is also set, each alert report is
  concatenated into the file as it is generated.    The  default is
  not to save the alert report.
  
  -N Number1 Number2    The Number1 variable specifies the starting se-
  quence number  of  the  alert  records selected for generating an
  alert report.  The Number2 variable specifies the ending sequence
  number.  The default option is to select all the alert records in
  the alert log for report  processing.    The following variations
  are permitted:
  
  *     If only one sequence number is provided, the resulting alert re-
  port includes alert reports from the specified sequence number to
  the most recent alert record.
  
  *     If the same sequence number is repeated in both positions, a re-
  port is generated for that record only.
  
  -p PrintDevice        The PrintDevice variable identifies the device on
  which the alert report is printed.  No validity check is made for
  the entered print queue.  The default  option  is  to ignore this
  flag and not print the report.
  
  -R    When this flag is set, the Alert Manager program cleans up the
  Inter-Process Call (IPC) message queue, allowing a clean recovery
  from a previously-halted rptalert -c command.
  
  Note: The IPC message queue (created by a previous invocation of
  the rptalert -c command) requires cleaning whenever the rptalert
  process is halted (with CTRL-C or an AIX kill -9 command) before
  it can shut down the IPC cleanly.
  
  -s    Supresses displaying the alert report on the screen.  The de-
  fault option is to display the report on the screen.
  
  -X Node ...   The Node ...  variable specifies the node ID's (node
  numbers)  of each of the alert records to be  excluded  from  the
  alert report.  You can specify a single node ID to exclude an in-
  dividual node  from the report.  The default option is to include
  alert records from all nodes for report processing.
  
  Note: The -F flag and the -X flag are both useful for Alert
  Manager collection point nodes.  However,  you  can  generate  an
  alert report at an entry point node using an alert log taken from
  a collection point node or even using a history  alert log merged
  from several Alert Manager alert logs.
  
  Security
  
  Privilege Control: root user.
  
  Examples
  
  1.    To run a concurrent alert report with the hft bell on and a de-
  tailed report written to  standard output (the display screen) as
  well as printed on the lp0  line  printer,  invoke  the following
  variation of the rptalert command:
  
  rptalert -c -b -d -p lp0
  
  2.    The following command generates a detailed alert report for the
  prtserver and fileserver nodes for the month of April using the
  alertlog_hist file, and puts the results into the
  /u/netmgr/alert.aprilreport  file.  (The report
  is not going to be printed on the display screen because the -s
  flag is set):
  
  rptalert -d -s -f /u/netmgr/alert.aprilreport -a alertlog_hist -D 04/01/90 04/30/90 -F prtserver fileserver
  
  Implementation Specifics
  
  This command is part of AIX Network Management/6000.
  
  Files
  
  /etc/objrepos/alertlog        Alert Manager Alert Log File
  
  /etc/objrepos/alertlog_bak    Alert Manager Alert Log Backup File
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  The  Alert Manager Overview for Network Management contains addi-
  tional information about network alerts.
  
  Related Information
  
  The  startam command,  stopam command.
  
   List of Alert Manager Commands for Network Management.
  
  
5
  test Command
  
  
  Purpose
  
  Evaluates conditional expressions.
  
   Syntax
  
  test  Expression | [  Expression ]
  
  Description
  
  The test command evaluates Expression and, if its value is true,
  returns a zero (true) exit value.  Otherwise it returns a nonzero
  (false) exit value.  The test command also returns a nonzero exit
  value if there are no parameters.
  
  Note: In the second form of the command, the [ ] (square brackets)
  must be surrounded by blank spaces.
  
  The functions and operators are treated as separate parameters by
  the test command.  Expression refers to a statement that is
  checked for a true or false condition.    The following functions
  are used to construct Expression:
  
  -r Filename   True if the specified file exists and has read permis-
  sion.
  
  -w Filename   True if the specified file exists and has write per-
  mission.
  
  -x Filename   True if the specified file exists and has execute per-
  mission.
  
  -f Filename   True if the specified file exists and is a regular
  file.
  
  -d Filename   True if the specified file exists and is a directory.
  
  -c Filename   True if the specified file exists and is a character
  special file.
  
  -b Filename   True if the specified file exists and is a block spe-
  cial file.
  
  -p Filename   True if the specified file exists and is a named pipe
  (FIFO).
  
  -u Filename   True if the specified file exists and its set-user-ID
  bit is set.
  
  -g Filename   True if the specified file exists and its set-group-ID
  
  -k Filename   True if the specified file exists and its sticky bit
  is set.
  
  -s Filename   True if the specified file exists and has a size
  greater than zero.
  
  -t [FileDescriptor]    True if the open file with the specified file
  descriptor number (1 by default) is associated with a workstation
  device.
  
  -z String1    True if the length of string String1 is zero.
  
  -n String1    True if the length of the string String1 is nonzero.
  
  String1 = String2     True if strings String1 and String2 are identi-
  cal.
  
  String1 != String2    True if strings String1 and String2 are not
  identical.
  
  String1       True if String1 is not the null string.
  
  Integer1 -eq Integer2 True if the integers Integer1 and Integer2
  are algebraically equal.  Any of the comparisons -ne, -gt, -ge,
  -lt, and -le can be used in place of -eq.
  
  These functions can be combined with the following operators:
  
  !     Unary negation operator.
  
  -a    Binary AND operator.
  
  -o    Binary OR operator (-a has higher precedence than -o).
  
  \(Expression\)        Parentheses for grouping.
  
  Examples
  
  1.    To test whether a file exists and is not empty:
  
  if test ! -s "$1"
  then
        echo $1 does not exist or is empty.
  fi
  
  If the file specified by the first positional parameter to the
  shell  procedure  does  not exist, an error message is displayed.
  If $1 exists, it displays nothing.  Note that there must be a
  space between -s and the file name.
  
  The double quotation marks around $1 ensure that the test works
  properly even if the value of $1 is the empty string.  If the
  double quotation marks are omitted and $1 is the empty string,
  the test command displays the error message test: param-
  eter expected.
  
  2.    To do a complex comparison:
  
  if [ $# -lt 2  -o  ! -s "$1" ]
  then
        exit
  fi
  
  If the shell procedure was given fewer than two positional param-
  eters or the file specified by $1 does not exist, then the shell
  procedure is exited.  The special shell variable $# represents
  the number of positional parameters  entered  on the command line
  that started this shell procedure.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/test     The path to the test command.
  
  /bin/bsh      The path to the Bourne shell (bsh command).
  
  /bin/csh      The path to the C shell (csh command).
  
  /bin/ksh      The path to the Korn shell (ksh command).
  
  /bin/sh       The path to the default shell (sh command).
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The  Shells Overview, which describes shells in general, defines
  some terms that  are helpful in understanding the AIX shells, and
  describes some of the more useful shell functions.
  
  Related Information
  
  The  bsh command,  csh command,  find command,  ksh command,  sh
  command.
  
  
5
  X Command
  
  
  Purpose
  
  Starts the X Server.
  
   Syntax
  
  X [ -a Number] [ -bp Color] [ -bs |  -nobs] [ -c Number] [ -D
  File] [ -f Number] [ -fc Font] [ -fn Font] [ -fp
  Font] [ -help] [ -logo |  nologo] [ -n :Number] [ -P[RowColumn]
  Number] [ -p Number] [ -r |  r] [ -s Number] [
  -su] [ -T] [ -t Number] [ -to Number] ] [ -wm] [ -wp
  Color] [ wrap | [ -wrapx] [ -wrapy]]
  
  Description
  
  The X command starts the X Server, which is a display server that
  runs on computers with bitmapped terminals.  The X Server distri-
  butes user input to and accepts output requests from programs lo-
  cated either on the host  system  or  on  systems connected to it
  through a network.
  
  You may specify one or more of the display devices.  If no
  display devices are specified,  the  device  is assumed to be the
  device  of the current hft.  If the user specifies more than  one
  display device, you must  also specify the physical configuration
  of the displays.  This is accomplished through the -P (Physical
  Location) flag.  There must be one -P flag for each device.  The
  -P  flag  associates the row and column of the
  device with the device number.  The user can determine the device
  number with the lsdisp command.
  
  In the following example, the user has already performed the
  lsdisp command.  Its results are shown  for each
  display.
  
  This is an example of a two-tiered physical layout.  The -P flags
  to specify this layout are:
  
  -P11 4 -P12 2 -P21 1 -P22 3
  
  In this example, when the mouse is traveling top to bottom in
  Display 1 and reaches the border of  Display  1 and Display 4, it
  will continue into Display 4 at the same x position.  When it
  reaches the bottom edge of Display 4, if the -wrapy flag is set,
  it will appear at the top edge of Display 1 in the same x
  position.  If the -wrapy flag is not set, it will stop.
  
  
  
           Display               Display
  
        1               3
  
           Display               Display
  
        4               2
  
  
  
  The following information is an example of a single-tiered physi-
  cal layout.  The -P flags to specify this layout are:
  
  -P11 3 -P12 1 -P13 2
  
  In this example, when a mouse is traveling left to right in
  Display 3 and reaches the border of Display 3 and 1, it will con-
  tinue in Display 1 at the same y position.  When it reaches the
  border of Display 1 and Display 2, it will continue in Display  2
  at the same y position.  When it reaches the edge of Display 2,
  if the -wrapx flag is set, it will appear at the left-most edge
  of Display 3 in the same y position.  If the -wrapx flag is not
  set, it will stop.
  
  
  
           Display               Display                Display
  
        3               1               2
  
  
  
  The following information is an example of an undefined physical
  layout.
  
  
  
                Display
  
                1
  
          Display               Display
  
        3               2
  
  
  
  Flags
  
  The following flags have default values supplied with the pro-
  gram:
  
  -a Number     Specifies the acceleration, a multiplier for mouse move-
  ment.  For example, specifying 4 causes the cursor to move four
  times as fast as the mouse.  The default is 4 pixels.  The speci-
  fied value must be a positive value greater than zero.
  
  -bp Color     Specifies a Blackpixel color for the display.  The de-
  fault depends on the display.
  
  -bs   Enables backing store support on all screens.  This is the de-
  fault.
  
  -c Number     Specifies the key click volume.  The default is -1 or
  medium.  The following values are supported:
  
  0     off
  
  1 - 33        low
  
  -1 or 34 - 66 medium
  
  67 - 100      high
  
  -D File       Specifies the full path name of the color definition data-
  base file.  The default is /usr/lpp/X11/rgb/rgb.
  
  -f Number     Specifies the beep volume.  The default is -1 or medium.
  The supported values are the same as those supported for the -c
  Number flag.
  
  -fc Font      Specifies the cursor font for cursor glyphs and cursor
  masks.  The default  depends  on  the  operating  system  and the
  display.
  
  -fn Font      Specifies the text font used as the default text font.
  The default depends on the operating system and the display.
  
  -fp Font      Specifies the path for fonts.
  
  -help Prints a usage message.
  
  -logo Turns on the X Window System logo display in the screen
  saver.  There is currently no way to change this from a client.
  
  -n :Number    Specifies the connection number.  Valid values for the
  Number parameter are 0 to 255.  The default is
  the next available number.  The Number parameter is used by pro-
  grams to communicate with a specific X Server.  For example,  the
  command:
  
  X -n :18
  
  specifies that communication to the activated X Server takes
  place by unix:18 or by Hostname:18.
  
  -nobs Disables backing store support on all screens.  The -bs flag
  is the default.
  
  nologo        Turns off the X Window System logo display in the screen
  saver.  There is currently no way to change this from a client.
  
  -P[Row][Column] [Number]      Specifies the physical positioning of the
  displays.  The Row parameter indicates the row the display is lo-
  cated in.  The Column parameter indicates the column of the
  display.  The Number parameter indicates the ID number of the
  display as returned from the lsdisp command.
  
  -p Number     Specifies the time interval, in minutes, between changes
  of the X Window System logo position.  This flag is used with the
  -s (screen saver timeout) flag to control the blanking of the
  screen.
  
  -r    Disables auto repeat.  The default is auto repeat enabled.
  
  r     Turns on auto repeat.
  
  -s Number     Specifies the number of minutes to wait until making the
  display blank.  The default is 10 minutes.  A specified value
  must be a number greater than 0, which is a valid value which
  disables the screen saver.
  
  -su   Disables save under support on all screens.
  
  -T    Disables the Ctrl-Alt-Backspace key sequence that, by default,
  terminates the X Server and all windows opened from it.
  
  -t Number     Specifies the mouse threshold.  The default is 2 pixels.
  Acceleration  takes  effect only if the mouse is moved beyond the
  mouse  threshold  in one time interval and only  applies  to  the
  amount beyond the threshold.
  
  -to Number    Specifies the number of minutes to elapse between con-
  nection checks.  The default is 60 minutes.  A specified value
  must be a positive number greater than zero.
  
  -wm   Forces the default backing-store of all windows to have the
  WhenMapped value.  This is a convenient way of
  getting backing store to apply to all windows.
  
  -wp Color     Specifies a Whitepixel color for the display.  The de-
  fault depends on the display.
  
  -wrap Specifies the behavior of the mouse when its hot spot
  reaches the left or right border or the top or bottom of any root
  window.    If  this  flag  is  set  and the hot spot of the mouse
  reaches the left border of the left-most  root  window, the mouse
  is automatically positioned at the right border of the right-most
  root window at the same y position.  Conversely, if this flag is
  set and the hot spot of the mouse reaches the right border of the
  right-most root window, the mouse is automatically  positioned at
  the left border of the left-most root window at the same y
  position.  If this  flag  is  not set, the mouse stops at
  the left or right border  of any root window.  Or if this flag is
  set and the hot spot of the mouse reaches  the  top border of the
  top-most  root  window,  the mouse is automatically positioned at
  the bottom border of the bottom-most root window at the same x
  position.  Conversely, if this flag is set  and  the  hot spot of
  the mouse reaches the bottom  border of the bottom-most root win-
  dow, the mouse is automatically positioned at the  top  border of
  the top-most root window at the same x position.
  
  -wrapx        Specifies the behavior of the mouse when its hot spot
  reaches  the left or right border of any root window.    If  this
  flag is set and the hot spot of the mouse reaches the left border
  of  the  left-most root window, the mouse is automatically  posi-
  tioned at the right border of  the  right-most root window at the
  same y position.  Conversely, if this flag is set and the hot
  spot of the mouse reaches the right border of the right-most root
  window,  the mouse is automatically positioned at the left border
  of the left-most root window at the same y position.  If this
  flag  is not set, the mouse stops at the left or right border  of
  any root window.
  
  -wrapy        Specifies the behavior of the mouse when its hot spot
  reaches the top or bottom border of any root  window.    If  this
  flag  is set and the hot spot of the mouse reaches the top border
  of the top-most  root  window,  the  mouse is automatically posi-
  tioned at the bottom border of the bottom-most root window at the
  same x position.  Conversely, if this flag is set and the hot
  spot of the mouse  reaches  the  bottom border of the bottom-most
  root window, the mouse  is  automatically  positioned  at the top
  border of the top-most root window at the same x position.  If
  this flag is not set, the mouse stops at the top or bottom border
  of any root window.
  
  Implementation Specifics
  
  This command is part of AIXwindows Run Time Environment in
  AIXwindows Environment/6000.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
         Enhanced X-Windows Commands Overview
  
  Related Information
  
  The  aixterm command,  xclock command,  xhost command,  xinit
  command,  xopen command.
  
  The  lsdisp shell command.
  
  
5
  mesg Command
  
  
  Purpose
  
  Permits or refuses write messages.
  
   Syntax
  
  mesg [ n |  y ]
  
  Description
  
  The mesg command controls whether other users on the system can
  send messages to you with either the  write command or the  talk
  command.  Called without arguments, the mesg command displays the
  current workstation message-permission setting.  The shell start-
  up process permits messages by default.    You  can override this
  default action by including the line mesg n in your
  $HOME/.profile file.  A user with root user authority
  can  send write messages to any workstation,  regardless  of  its
  message permission setting.  Message permission has  no effect on
  messages delivered through the electronic mail system ( send-
  mail).
  
  If you add mesg y to your $HOME/.profile, you will be able to re-
  ceive messages from other users via the write command or the talk
  command.
  
  If you add mesg n to your $HOME/.profile, you will not be able to
  receive messages from other users via the write command or the
  talk command.
  
  Flags
  
  n     Allows only the root user the permission to send messages to
  your  workstation.   Use this form of the command to avoid having
  others clutter your display with incoming messages.
  
  y     Allows all workstations on the local network the permission to
  send messages to your workstation.
  
  Examples
  
  1.    To allow only the root user the permission to send messages to
  your workstation, enter:
  
  mesg n
  
  2.    To allow everyone the permission to send messages to your
  workstation, enter:
  
  mesg y
  
  3.    To display what your current message permission setting is,
  enter:
  
  mesg
  
  Information similar to the following is displayed:
  
  is y
  
  In the previous example, the current message permission setting
  is  y (allowing all users on the local network the permission to
  send messages to your  workstation).  If you had changed the mes-
  sage permission setting to  n (allowing only the root user the
  permission  to  send  messages to your workstation),  information
  similar to the following would have been displayed:
  
  is n
  
  Implementation Specifics
  
  This command is part of Base Operating System (BOS) Runtime of
  AIX for RISC System/6000.
  
  Files
  
  /dev/tty*     Supports the controlling terminal interface.
  
  $HOME/.profile        Controls start-up processes and daemons.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  default,  network,  shell,  workstation.
  
   Network Overview.
  
  Related Information
  
  The  sendmail command,  talk command,  write command.
  
  
6
  chsnalias Command
  
  
  Purpose
  
  Changes the description of an alias in the SNA configuration da-
  tabase.
  
   Syntax
  
  chsnalias  -t ObjectType [  -l NewAlias ] [  -n NewName ]
  ObjectAlias
  
  Description
  
  The chsnalias command changes either or both of the following:
  
  *     The profile to which an alias refers
  
  *     The alias name of an existing alias in the SNA configuration da-
  tabase.
  
  The ObjectAlias parameter specifies the alias to be changed.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit chsnalias
  
  Flags
  
  -t ObjectType Specifies the profile type of the current alias.
  
  -l NewAlias   Specifies the changed alias name.
  
  -n NewName    Specifies the profile to which an alias refers.
  
  Examples
  
  1.    To change the alias name of ATTACH to ETHATTCH, enter:
  
  chsnalias -t attachment -l ETHATTCH ATTACH
  
  2.    To change the ETHATTCH alias from an alias for the Ethernet
  profile ETHNET2 to an alias for the Ethernet profile ETHNET1,
  enter:
  
  chsnalias -t attachment -n ETHNET1 ETHATTCH
  
  In this case, assume that ETHATTCH is an alias for ETHNET2.
  
  Implementation Specifics
  
  This command is part of AIX Systems Network Architecture Ser-
  vices/6000.
  
  This command is not available for Japanese Language Support.
  
  Files
  
  /usr/bin      Directory in which the chsnalias command resides.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  mksnalias command,  rmsnalias command.
  
  The  System Management Interface Tool (SMIT) Overview.
  
  
6
  xinit Command
  
  
  Purpose
  
  Starts an X Server and clients with a single command.
  
   Syntax
  
  xinit [XOptions]
  
  Description
  
  The xinit command is a shell script which starts the X Server and
  any X client programs you need, specified by the  XOptions param-
  eter, as listed in the X command.  The xinit command uses a cus-
  tomizable shell script file which lists the  X client programs to
  invoke.  The xinit command runs the shell script $HOME/.xinitrc
  to start the client programs.  If the $HOME/.xinitrc shell script
  is not found, the xinit command invokes the shell script
  /usr/lpp/X11/defaults/xinitrc.   This default
  xinitrc shell script invokes commands  such  as
  the mwm (the window manager), the aixterm and the xclock com-
  mands.
  
  The xinit command performs the following operations:
  
  *     Starts an X Server on the current display
  
  *     Sets up the DISPLAY environment variable
  
  *     Executes the xinitrc file to start the X client programs.
  
  Implementation Specifics
  
  This command is part of AIXwindows Run Time Environment in
  AIXwindows Environment/6000.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
         Enhanced X-Windows Commands Overview
  
         AIXwindows Window Manager Overview
  
  Related Information
  
  The  aixterm command, the  X command.  and the  xclock command.
  
  
6
  sthcondmn Command
  
  
  Purpose
  
  Starts the hcondmn subsystem.
  
   Syntax
  
  sthcondmn
  
  Description
  
  The sthcondmn command starts the hcondmn subsystem.  If the Sys-
  tem Resource Controller (SRC) has not already been set up so that
  the hcondmn subsystem will be started at IPL time, the sthcondmn
  command also adds  the  necessary  SRC instructions to the Object
  Data Manager (ODM) database files.
  
  The sthcondmn command can be used to start the subsystem after
  installing the 3270 Host Connection Program  (HCON),  instead  of
  restarting the system.  In addition, the sthcondmn command can be
  used to start the hcondmn subsystem on a client of a codeserver,
  if HCON is to be run in a codeserver environment.
  
  Note: You must have root user authority to run the sthcondmn com-
  mand.
  
  Example
  
  1.    To start the hcondmn subsystem on a RISC System/6000, enter:
  
  /usr/lib/hcon/sthcondmn
  
  Implementation Specifics
  
  This command is part of the AIX 3270 Host Connection Program/6000
  (HCON).
  
  File
  
  /usr/lib/hcon/sthcondmn       Complete path name of the sthcondmn com-
  mand.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  client,  subsystem.
  
   Installing and Updating HCON outlines the procedures for instal-
  ling HCON.
  
   Understanding HCON Processes discusses the hcondmn subsystem.
  
  Related Information
  
   How to Install HCON discusses HCON installation procedures.  
  How to Set Up HCON  in a Codeserver Environment provides informa-
  tion on installing HCON on a codeserver.
  
   How to Stop the hcondmn Subsystem discusses stopping the hcondmn
  subsystem.
  
  
6
  slattach Command
  
  
  Purpose
  
  Attaches serial lines as network interfaces.
  
   Syntax
  
  /etc/slattach [  +i |  -i ]  TTYName [  BaudRate [  Dial-
  String ] ]
  
  Description
  
  The slattach command is used to assign a tty line to a network
  interface.
  
  Note: Only a person with net.config privileges may issue the
  slattach command.
  
  To detach the interface, use the ifconfig InterfaceName down
  command after terminating the slattach command.  The
  InterfaceName  parameter  is  the  name  that is
  shown by the netstat command.
  
  Note: You may also need to make an entry for the tty device in the
  BNU /usr/lib/uucp/ Devices file.
  
  Flags
  
  +i    Turns Internet Control Message Protocol ( ICMP) packet drop on.
  With ICMP drop on, the connection drops  any  ICMP  packets to be
  sent.
  
  -i    Turns ICMP packet drop off.  With ICMP drop off, the connection
  sends all ICMP packets.
  
  The default options is -i.
  
  Parameters
  
  TTYName       A string of the form ttyxx or /dev/ttyxx.
  
  BaudRate      Sets the speed of the connection.  The default speed is
  9600.
  
  DialString    A string of expect/respond sequences using the BNU/UUCP
  chat syntax.
  
  Example
  
  1.    To attach the SLIP network interface to the tty1 port with a
  direct connection, issue the following command:
  
  ./etc/slattach /dev/tty1
  
  This command attaches tty1 to a network interface to be used by
  the Serial Line Internet Protocol (SLIP).
  
  2.    To attach the SLIP network interface to tty1 using a modem con-
  nection, issue the following command:
  
  /etc/slattach /dev/tty1 9600 `""AT OK \pATF1 OK \pATDT34335 \
  CONNECT""'
  
  Implementation Specifics
  
  This command is part of the TCP/IP in Network Support Facilities
  in AIX Base Operating System (BOS) Runtime.
  
  File
  
  /usr/lib/uucp/ Devices        Lists definitions of devices used for re-
  mote connections.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  network address,  network interface,  protocol.
  
   Understanding Network Interfaces for TCP/IP.
  
  Related Information
  
  The  ifconfig command,  netstat command.
  
  
6
  pdelay Command
  
  
  Purpose
  
  Enables or reports the availability of delayed login ports.
  
   Syntax
  
  pdelay [  -a ] [ Device ]
  
  Description
  
  The pdelay command enables delayed ports.  Delayed ports are en-
  abled  like  shared ports, except that the login  herald  is  not
  displayed until you type one or more characters (usually carriage
  returns).  If a port  is directly connected to a remote system or
  connected to an  intelligent  modem,  it  is enabled as a delayed
  port to prevent the getty command from talking to a getty on the
  remote side or to the modem on a local connection.    This action
  conserves  system  resources.    This statement is equivalent  to
  pdelay enabled=delay.  If you do not specify a Device
  parameter, the pdelay command reports the names of the
  currently enabled ports.
  
  Use the Device parameter to specify the ports to be enabled.
  Permitted values for the Device parameter include:
  
  *     Full device name, such as the /dev/tty1 device.
  
  *     Simple device name, such as the tty1 device.
  
  *     Number such as 1 (one).  This is equivalent to the /dev/tty1
  device.
  
  Flag
  
  -a    Enables all ports as delayed.
  
  Example
  
  To display the names of the delayed ports that are currently en-
  abled, enter:
  
  pdelay
  
  Files
  
  /etc/locks    Contains lock files for the pshare and pdelay commands.
  
  /etc/pdelay   Specifies the command file.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  delayed port,  enable,  modem,  port.
  
  Related Information
  
  The  getty command,  init command,  pdisable command,  penable
  command,  phold command,  pshare command,  pstart command.
  
  
6
  whois Command
  
  
  Purpose
  
  Identifies a user by user ID or alias.
  
   Syntax
  
  whois [   .] [   !] [ name] [ name...]
  
  whois  help
  
  Description
  
  The whois command searches a user name directory and displays in-
  formation  about  the user ID or nickname which was passed to it.
  To obtain information, the whois command examines a user name
  directory.  The whois command tries to reach sri-nic.arpa and
  will  work  only  when this host is reached.  Thus, this  command
  should be used only by users on ARPANET.
  
  Note: If your network is on a national network, such as ARPANET,
  the host name is hard-coded as "sri-nic.arpa".   Your  system ad-
  ministrator can tell you if your particular  network is connected
  to a national network.
  
  Flags
  
  .     Displays information for only the name that you entered.
  
  !     Displays help information for a nickname or handle ID that you
  entered.
  
  help  Displays help information for the whois command.
  
  Parameters
  
  name  Represents the user ID or nickname to perform a directory
  search for.
  
  name...       Performs a wild card search for names that begin with the
  letters before the ...
  
  Examples
  
  1.    To display information about ARPANET registered users by the
  name of Smith, enter:
  
  whois Smith
  
  2.    To display information about ARPANET registered users that use
  the handle Hobo, enter:
  
  whois !Hobo
  
  3.    To display information about ARPANET registered users with the
  name of John Smith, enter:
  
  whois .Smith, John
  
  4.    To display information about ARPANET registered users whose
  names or handles begin with the letters HEN, enter:
  
  whois HEN...
  
  5.    To get help information for the whois command, enter:
  
  whois help
  
  Implementation Specifics
  
  This command is part of the TCP/IP Facility in Network Facilities
  of AIX for RISC System/6000.
  
  Files
  
  /etc/named.boot       Contains configuration information for nameserver.
  
  /usr/ucb/whois        Command executable file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  The following glossary terms:  nickname,  user ID,  node.
  
   Network Overview.
  
  Related Information
  
  The  who command.
  
  
6
  trace Daemon
  
  
  Purpose
  
  Records selected system events.
  
   Syntax
  
  trace [ -a |  -f |  -l] [ -d] [ -h] [ -j Event[,Event]] [ -k
  Event[,Event]] [ -m Message] [
  -oName] [ -o-] [ -s] [ -LSize] [ -TSize]
  
  Description
  
  The trace daemon configures a trace session and starts the col-
  lection of system events. The data collected by the trace func-
  tion  is  recorded in the trace log.  A report from the trace log
  can be generated with the trcrpt command.
  
  By default, the trace daemon is interactive with subcommands for
  controlling the  trace  session.    Once  a trace session is con-
  sidered, use the trcoff and trcon subcommands to stop and restart
  the collection of trace data.
  
  You can use the System Management Interface Tool (SMIT) to run
  the trace daemon.  To use SMIT, enter:
  
  smit trace
  
  Flags
  
  The trace daemon has three mode flags: -a, asynchronous mode,
  trace does not accept subcommands; the -f, sin-
  gle mode, the collection  of  trace  data stops as soon as a full
  buffer of trace data has been collected; -l flag, circular mode,
  saves only the last buffer of trace data collected.
  
  -a    Runs trace in an asynchronous mode.  The trace daemon does not
  accept subcommands when run asynchronously.  Use the trcstop com-
  mand to stop the trace session.
  
  -d    Disables the automatic start of trace data collection.  Delays
  starting of trace  data  collection.  Normally, the collection of
  trace data starts automatically when you issue the trace daemon.
  Use the trcon subcommand or the INTERRUPT signal to start the
  collection of trace data.
  
  -f    Runs trace in an single mode.  Causes the collection of trace
  data to stop as soon as a full buffer of trace data is collected.
  The trace data is then written to the trace log.  Use the trcon
  subcommand to restart trace data collection and  capture  another
  full buffer of data.  If you issue the trcoff subcommand before
  the  buffer  is  full, trace data collection is stopped  and  the
  current contents of the buffer are written to the trace log.
  
  -h    Omits the header record from the trace log. Normally, the trace
  daemon writes a header record with the date and time (from the
  date command) at the beginning of the trace log,
  the user's login identification (from the logname command), the
  system name, version and release,  the  node  identification, and
  the machine identification (from the uname -a command), and a
  user-defined message.  At the beginning of the trace log, the in-
  formation from the header record is included in the output of the
  trcrpt command.
  
  -j Event[,Event]      Specifies the user-defined events for which you
  want to collect trace data. The Event list items can be separated
  by commas  or enclosed in double quotation marks and separated by
  commas or blanks.
  
  -k Event[,Event]      Specifies the user-defined events for which you
  want to exclude trace data. The Event list items can be separated
  by  commas or enclosed in double quotation marks and separated by
  commas or blanks.
  
  -l    Runs trace in an circular mode.  Saves only the last buffer of
  trace data collected.  Causes the trace daemon to write trace
  data  to  the  trace  log  when the collection of trace  data  is
  stopped.  Use the trcoff subcommand to stop the collection of
  trace data.  In this mode, the trace data wraps within the in-
  memory trace buffer.  After the buffer fills up,  each  new trace
  event is written  over the oldest trace event in the buffer.  The
  buffer  always contains the most recent events.   When  you  stop
  trace data collection using the trcoff subcommand, restart it us-
  ing the trcon subcommand.
  
  -m Message    Specifies text to be included in the message field of
  the trace log header record.
  
  -o Name       Overrides the /usr/adm/ras/trcfile default trace log file
  and writes trace data to the Name file.
  
  -o -  Overrides the default trace log name and writes trace data to
  standard output.
  
  -s    Stops tracing when the trace log fills.  The trace daemon nor-
  mally wraps the trace log when it fills up and continues to col-
  lect trace data. This flag causes trace to stop trace data col-
  lection and exit.
  
  -L Size       Overrides the default trace log file size of 1MB with the
  value of the Size parameter.
  
  Note: In the interactive and circular modes the log file size must
  be  at  least  twice  the trace buffer size.  In single mode  the
  trace buffer size must be smaller than the log file size.
  
  -T Size       Overrides the default trace buffer size of 128KB with the
  value of the Size parameter.
  
  Note: In the interactive and circular modes the buffer size must
  be less than half the log file  size.    In single mode the trace
  buffer size must be smaller than the log file size.
  
  Subcommands
  
  The following subcommands are used with the trace daemon to start
  or stop trace data collection, run shell commands, or end a trace
  session.
  
  trcon Starts the collection of trace data.
  
  trcoff        Stops the collection of trace data.
  
  q or quit     Stops the collection of trace data and exits the trace
  daemon.
  
  ! Command     Runs the shell command specified by the Command
  parameter.
  
  ?     Displays the summary of trace daemon subcommands.
  
  Signals
  
  The INTERRUPT signal acts as a toggle to start and stop the col-
  lection of trace data.  Interruptions are set to SIG_IGN  for the
  traced process.
  
  Examples
  
  1.    To trace system events during the run of the mycmd command,
  enter:
  
  trace
  > !mycmd
  > q
  
  2.    To trace the initial system events that occur during the run of
  the mycmd command and include a message in the trace log header,
  enter:
  
  trace -f -m "Trace of initial system events during mycmd"
  > !mycmd
  > q
  
  trace
  > !mycmd1
  > trcoff
  > trcon
  > !mycmd2
  > trcoff
  > q
  
  File
  
  /usr/adm/ras/trcfile  Default trace log file.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The  Trace Facility Overview.
  
        The following glossary entries:  buffer,  call,  daemon,  de-
  fault,  event,  field,  file,  function,  header record,  header,
   interactive,  interrupt,  kernel,  list,  log,  message,  mode, 
  option,  output,  parameter,  process,  record,  run,  session, 
  shell,  signal,  size,  subcommand,  system,  text,  toggle, 
  trace log,  trace.
  
  Related Information
  
  The  trchk subroutine,  trcgen subroutine,  trcstart subroutine, 
  trcon subroutine,  trcoff subroutine,  trcstop subroutine.
  
  The  trcgenk kernel service.
  
  The  Trace Facility Overview.
  
  
6
  chvfs Command
  
  
  Purpose
  
  Changes entries in the  /etc/vfs file.
  
   Syntax
  
  chvfs VFSEntry
  
  Description
  
  The chvfs command changes  /etc/vfs file entries by specifying
  the following fields within the VFSEntry parameter.  The VFSEntry
  parameter     is    composed    of    the    following    fields:
  
  VFSName:VFSNumber:
  
  Any of the fields in the VFSEntry can be null, with the exception
  of the VFSName field.  If all of the arguments are satisfactory,
  the entry in the  /etc/vfs file is changed.
  
  Parameter
  
  VFSEntry      A string in the following format:
  
  VFSName:VFSNumber:
  
  VFSName       The name of a virtual file system type.
  
  VFSNumber     The virtual file system type's internal number as known
  by the kernel.
  
  MountHelper   The name of the back end used to mount a file system
  of this type.
  
  FileSystemHelper      The name of the back end used by certain file
  system specific  commands  to perform operations on a file system
  of this type.
  
  Example
  
  1.    To change the file system helper for the vfs entry named
  newvfs, enter:
  
  chvfs "newvfs:::/etc/helper/testhelper"
  
  The missing fields are left unchanged.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/vfs      Contains descriptions of virtual file system types.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  stanza.
  
        The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  Related Information
  
  The  lsvfs command,  crvfs command,  rmvfs command,  mount com-
  mand.
  
  The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  
6
  tapechk Command
  
  
  Purpose
  
  Performs consistency checking of the streaming tape device.
  
   Syntax
  
  tapechk [  -? ] Number1 Number2
  
  Description
  
  The tapechk command performs rudimentary consistency checking on
  an attached streaming tape  device.    Some hardware malfunctions
  with a streaming tape drive  can  be detected by simply reading a
  tape.  The tapechk command provides a way to perform tape reads
  on the file level.
  
  Since the streaming tape drive cannot backspace over physical
  data blocks or files, the tapechk command rewinds the tape to its
  starting position prior to each check.  This command either
  checks data for the next number of files specified by the Number1
  parameter  or  skips  the  next  number of files specified by the
  Number2 parameter.  If you do not specify any parame-
  ters, the tapechk command rewinds the tape and checks only the
  first physical block.
  
  The tapechk command uses the device in the TAPE environment vari-
  able if  it  is  defined.   Otherwise, the default tape device is
  /dev/rmt0.
  
  Note: The backup command allows you to archive files selectively
  or as an entire file system.    It  writes  data  as a continuous
  stream  terminated  by  a  file mark, regardless of the number of
  files specified.  The tapechk command perceives each stream of
  data as a single file.  This is important when you specify numer-
  ic parameters with the tapechk command.
  
  Although you can use the tapechk command on any streaming tape
  cartridge, it is primarily designed for checking tapes written by
  the backup command.
  
  Flag
  
  -?    Explains the format of the tapechk command.
  
  Note: If you specify the -? flag, it must be specified before the
  Number1 and Number2 parameters.
  
  Example
  
  To check the first three files on a streaming tape device, enter:
  
  tapechk 3
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /usr/bin/tapechk      Specifies the command file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary terms:  physical data block,  streaming tape device.
  
  Related Information
  
  The  backup command.
  
  The  rmt special file.
  
  
6
  rusersd Daemon
  
  
  Purpose
  
  Responds to queries from the rusers command.
  
   Syntax
  
  /usr/etc/rpc.rusersd
  
  Description
  
  The rusersd daemon is a server that responds to queries from the
  rusers  command  by  returning a list of users
  currently on the network.  This daemon is normally invoked by the
   inetd daemon.
  
  Implementation Specifics
  
  This daemon is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  Files
  
   /etc/inetd.conf      TCP/IP configuration file that starts RPC daemons
  and other TCP/IP daemons
  
   /etc/utmp    Contains information on users logged into the system.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  daemon,  server.
  
  For more information about NFS, see  Network File System (NFS)
  Overview for System Management.
  
  Related Information
  
  The  rusers command.
  
  The  inetd daemon.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
  
7
  inc Command
  
  
  Purpose
  
  Incorporates new mail into a folder.
  
   Syntax
  
  inc [ + Folder ] [  -noaudit |  -audit File ] [  -changecur | 
  -nochangecur ] [  -form FormFile |  -format String ] [ 
  -file File ] [  -truncate |  -notruncate ] [ 
  -nosilent |  -silent ] [ 
  -width Number ]
  
  Description
  
  The inc command incorporates incoming mail into a folder and then
  outputs a list of the messages incorporated. A folder is an AIX
  directory.  By default, the inc command removes all of the new
  messages  from  your  mail  drop and places them in the specified
  folder.  To incorporate new mail without deleting  the mail drop,
  use the -notruncate flag.
  
  If the specified folder does not exist, the inc command prompts
  you for permission to create it.  The system creates  the  folder
  as a subdirectory of the user's MH directory.  The default folder
  is inbox.
  
  Note: If you do not have a Path: entry specified in your
  .mh_profile file, the inc command creates the folder as
  a subdirectory of the current directory.
  
  The system assigns new messages consecutive message numbers
  starting with the next highest number in the folder.    Each  new
  message  receives  the protection code specified in the
  Msg-Protect: entry in your .mh_profile file.
  If the Msg-Protect: entry does not exist, a protection code of
  644 is assigned.  If the Unseen-Sequence: entry exists, new mes-
  sages are added to each sequence specified by the entry.
  
  Flags
  
  -audit File   Copies the current date to the specified file and ap-
  pends the output of the inc command to the file.
  
  -changecur    Sets the first new message as the current message for
  the specified folder.  This flag is the default.
  
  -file File    Incorporates messages from the specified file instead
  of the user's maildrop.
  
  +Folder       Specifies the folder to place new messages into.  By de-
  fault, the system creates a subdirectory called inbox in the
  user's MH directory.
  
  -form FormFile        Identifies a file that contains an alternate output
  format for the inc command.
  
  -format String        Specifies a string that defines an alternate output
  format for the inc command.
  
  -help Displays help information for the inc command.
  
  -noaudit      Suppresses recording of information about the incorpora-
  tion of new messages.  This is the default.
  
  -nochangecur  Prevents alteration of the current message for the
  specified folder.
  
  -nosilent     Prompts the user for any necessary information.  This
  flag is the default.
  
  -notruncate   Prevents clearing of the mailbox or file from which
  the inc command is taking new messages.  If the -file flag is
  specified, the -notruncate flag is the default.
  
  -silent       Prevents prompting by the inc command for information.
  This flag is useful for running the inc command in the back-
  ground.
  
  -truncate     Clears the mailbox or file from which the inc command is
  taking new messages.  If the -file flag is not specified, the
  -truncate flag is the default.
  
  -width Number Sets the number of columns in the command output.
  The default is the width of the display.
  
  Profile Entries
  
  The following entries are entered in the
  UserMhDirectory/.mh_profile file:
  
  Alternate-Mailboxes:  Specifies alternate mailboxes.
  
  Folder-Protect:       Sets the protection level for new folder direc-
  tories.
  
  Msg-Protect:  Sets the protection level for new message files.
  
  Path: Specifies the user's MH directory.
  
  Unseen-Sequence:      Specifies the sequences used to keep track of un-
  seen messages.
  
  Examples
  
  1.    To incorporate new mail into the default mail folder, inbox,
  enter:
  
  inc
  
  If the inbox folder exists, the system displays a message similar
  to the following:
  
  Incorporating new mail into inbox...
  65+  04/08 jim@athena.a   Meeting        <<The meeting will
  66   04/08 jim@athena.a   Schedule        <<Schedule change
  
  In this example, two messages are incorporated into the inbox
  folder.  The subject of the first message is Meeting, and the
  first line starts with the words The meeting will.  The subject
  of the second message is Schedule, and the first line starts with
  the words Schedule change.
  
  2.    To incorporate new mail into a new folder called testcases,
  enter:
  
  inc +testcases
  
  The system prompts you as follows:
  
  Create folder "/u/mary/testcases"?
  
  A message similar to the following is displayed:
  
  Incorporating new mail into testcases...
  67+  04/08 jim@athena.a   Meeting        <<We will begin
  68   04/08 jim@athena.a   Schedule        <<Schedule change
  
  Implementation Specifics
  
  This command is part of Message Handler in the Base Operating
  System (BOS) Extensions 1 of AIX for RISC System/6000.
  
  Files
  
  $HOME/.mh_profile file        Customizes the MH user profile.
  
  /usr/lib/mh/mtstailor file    Tailors the MH environment to the local
  environment.
  
  /usr/spool/mail/$USER file    Speciefies the location of the mail
  drop.
  
  /usr/bin/inc file     Contains the executable form of the inc command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  default,  file,  flag,  folder,  format,  mes-
  sage.
  
   Message Handler (MH) Overview.
  
   Mail Overview.
  
  Related Information
  
  The  mhmail command,  post command,  scan command.
  
  The  mh_alias file format,  mh_profile file format.
  
  
7
  sa1 Command
  
  
  Purpose
  
  Collects and stores binary data in the /usr/adm/sa/sadd file.
  
   Syntax
  
  sa1 [Interval Number]
  
  Description
  
  The sa1 command is a shell procedure variant of the sadc command.
  The sa1 command collects and stores binary data in the
  /usr/adm/sa/sadd file, where dd is the
  day of the month.  The Interval and Number parameters specify
  that the record should be written Number times at Interval
  seconds.  If you do not specify these  parameters,  one record is
  written.  You must have permission to write in the /usr/adm/sa
  directory to use this command.
  
  The sa1 command is designed to be started automatically by the
  cron command.  If sa1 is not run daily from the
  cron command, the sar command displays a message
  about the non-existence of the /usr/lib/sa/sa1 data file.
  
  Example
  
  1.    To create a daily record of sar activities and place in your
  root crontab file, enter:
  
  0 20 * * * /usr/lib/sa/sa1
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /usr/adm/sa   Directory containing the daily data files.
  
  /usr/adm/sa/sadd      Daily data file, where the dd parameter is a
  number representing the day of the month.
  
  /usr/lib/sa/sa1       Data file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  binary,  file,  procedure, 
  record,  shell.
  
  Related Information
  
  The  cron command,  sadc command,  sar command,  sa2 command.
  
  
7
  sysdumpdev Command
  
  
  Purpose
  
  Changes the primary or secondary dump device designation in a
  running system.
  
   Syntax
  
  sysdumpdev  -P { -p Device |  -s Device}
  
  sysdumpdev { -l |  -p Device |  -s Device |  -L}
  
  Description
  
  The sysdumpdev command changes the primary or secondary dump dev-
  ice designation temporarily  in  a  system  that is running.  The
  primary and secondary dump devices  are  designated  in  a system
  configuration object.  The new device designations  are in effect
  until the sysdumpdev command is run again, or the system is res-
  tarted.    To  change  the  dump device designations permanently,
  modify the system configuration object.
  
  You can use the System Management Interface Tool (SMIT) to run
  the sysdumpdev command.  To use SMIT, enter:
  
  smit sysdumpdev
  
  Flags
  
  -l    Lists the current dump device assignments.
  
  -p Device     Permanently changes the primary dump device to the
  specified device.
  
  -s Device     Permanently changes the secondary dump device to the
  specified device.
  
  -L    Displays statistical information concerning the previous invo-
  cation of dump, such as date and time  of  last  dump,  number of
  blocks written, and completion status.
  
  -P    Makes permanent the dump device specified by -p or -s flags.
  The -P flag can only be used with the -p or -s flags.
  
  If no flags are used with the sysdumpdev command, the currently
  designated dump devices are used.
  
  Security
  
  Access Control: Only the root user can run this command.
  
  Examples
  
  1.    To display current dump device settings, enter:
  
  sysdumpdev -l
  
  2.    To designate a logical volume (hd7) as the primary dump device,
  enter:
  
  sysdumpdev -p /dev/hd7
  
  3.    To designate a logical volume (hd7) as the secondary dump dev-
  ice, enter:
  
  sysdumpdev -s /dev/hd7
  
  4.    To display information from the previous dump invocation,
  enter:
  
  sysdumpdev -L
  
  5.    To permanently change the database object for the primary dump
  device to /dev/newdisk1, enter:
  
  sysdumpdev -P -p /dev/newdisk1
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  configuration,  crash,  device, 
  dump,  run,  system,  user,  volume.
  
  Related Information
  
  The  crash command,  sysdumpstart command.
  
  
7
  ebxa Command
  
  
  Purpose
  
  Translates EBCDIC character data to AIX character data.
  
   Syntax
  
  ebxa < EBCDICInputFile > AIXOutputFile
  
  Description
  
  The ebxa command reads EBCDIC character data from standard input
  and writes the  translated AIX character data to standard output.
  The EBCDICInputFile parameter is the name of a file which con-
  tains EBCDIC text data and the AIXOutputFile is the name of the
  file to which the  translated data is written.  The EBCDIC to AIX
  translation is performed using the translation table named by the
  value of the NLIN environment variable.  If the NLIN environment
  is  not  set  or is not valid, the translation is performed using
  the default universal translation.  The genxlt command can be
  used to create a translation table.
  
  Example
  
  1.    To convert EBCDIC characters to AIX using the table created by
  the  genxlt command, enter:
  
  ebxa < hostfile > hostfile.aixascii
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  EBCDIC character,  EBCDIC, 
  character,  environment variable,  environment,  file,  input, 
  name,  output,  table,  text,  translation table,  translation.
  
  Related Information
  
  The  environment file.
  
  The  axeb command,  genxlt command.
  
  
7
  lslicense Command
  
  
  Purpose
  
  Displays the maximum number of users which can be concurrently
  logged in.
  
   Syntax
  
  lslicense [  -c ]
  
  Description
  
  The lslicense command displays the number of users which can be
  concurrently logged  on according to the one time AIX license fee
  for the system.
  
  Flag
  
  -c    Puts the output in colon ( : ) form.
  
  Examples
  
  1.    To display the number of licensed users, enter:
  
  lslicense
  
  2.    To display the number of licensed users in a colon format,
  enter:
  
  lslicense -c
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  display,  format,  output,  sys-
  tem.
  
  Related Information
  
  The  chlicense command.
  
  
7
  x_chg_trm_120 Command
  
  
  Purpose
  
  Changes the characteristics of an Xstation 120.  
  
   Syntax
  
  x_chg_trm_120 120 Name TypeName Address Server Time Device Pan
  Mode Host Program
  
  Description
  
  The x_chg_trm_120 command changes, for the current host, the
  characteristics of the Xstation specified by the Name parameter,
  and    stores     the     changed     configuration     in    the
  /usr/lpp/x_st_mgr/bin/x_st_mgrd.cf  file,  the
  /usr/lpp/x_st_mgr/bin/x_st_mgrd.tmty  file, and
  the /etc/bootptab file.
  
  Parameters that can be changed are:
  
  120   Specifies the Xstation model.  This command can be used only
  for an Xstation 120.
  
  Name  Specifies the name of the Xstation.  The Name parameter can
  be up to 8 characters long and  include  the lower case letters a
  through  z,  the  numbers  0  through  9,  the - (dash) and the .
  (period).  Name can be a user name, such as taylor, or a group
  name with a number appended, such as graphs-2, and should identi-
  fy  an  Xstation by its location in the work place or by the pri-
  mary user's name.  Name is stored in the /etc/hosts file.
  
  Note:  Name should not start with a lowercase or an uppercase o or
  a lowercase or uppercase x, followed by an octal  or  hexadecimal
  numeric.  These characters are interpreted  as  octal  or hexade-
  cimal numbers, instead of as a terminal name.  In the examples x3
  and xE4, the 3 and the E4 are hexadecimal numerics.
  
  TypeName      Specifies the name you create to identify the type of
  network protocol.  The TypeName parameter must contain the prefix
  x_st_mgr. and can include an identifier for the type of network
  protocol, such as ether (for ethernet), tr (for token ring) or
  802  (for  IEEE  802.3).    An  example   is
  x_st_mgr.ether.  The name of the network type is
  stored in the /etc/bootptab file.
  
  Address       Specifies the  hardware address of the Xstation.  This ad-
  dress appears on the LAN Statistics screen of the Xstation. Each
  Xstation  has  a  unique 6-byte hexadecimal hardware address,  in
  XXXXXXXXXXXX format, and cannot be changed by the user.
  
  Server        Identifies the Xstation as a primary or secondary boot
  server.  Two options are valid: y for a primary server and n for
  a secondary server.
  
  Time  Specifies the number of seconds a boot server must wait be-
  fore  answering a boot-protocol broadcast  request.    The  valid
  number for a primary  server is 00, since there is no delay time.
  For a secondary server, refer to the number range in SMIT.
  
  Device        Specifies the input device.  Device must be mouse or
  tablet.
  
  Pan   Specifies whether the hardware pan feature is enabled or dis-
  abled.  The hardware pan feature  allows  the Xstation to use all
  the additional video memory for  a display area that appears when
  the user pans the cursor to the edge of the  screen.  Two options
  are valid: y enables and n disables the pan feature.
  
  Mode  Specifies the mode used by X Display Manager Control Protocol
  (XDMCP).  XDMCP uses the xdm program to facilitate the connection
  of an X terminal to a remote host.  XDMCP also allows the user to
  turn  an  Xterminal  off and on again and still maintain an esta-
  blished connection to the remote host.  Valid options are:
  
  broadcast     Sends a message to the network and waits for an xdmcp
  host to respond.
  
  direct        Directs a request to an xdmcp manager known to the Xsta-
  tion.
  
  indirect      Sends an indirect request to an xdmcp manager that main-
  tains a list of xdmcp hosts.  The  manager  assigns an xdmcp host
  to respond to the Xstation.
  
  off   No X Display Manager Control Protocol (XDMCP).
  
  Host  Specifies the internet (IP) address of the xdmcp host used
  for  direct  or indirect communication with the Xstation.   Valid
  options are none or the internet address of an xdmcp host.  If
  XDMCP is not used or if broadcast mode is used, the value of Host
  is none.  The internet address of an xdmcp host must be specified
  if Mode is direct or indirect.
  
  Program       Identifies the startup program.  This program should be
  the aixterm command with selected options.  The startup confi-
  guration is stored in the /usr/lpp/x_st_mgr/bin/x_st_mgrd.cf
  file.
  
  Security
  
  User management is responsible for evaluation, selection, and im-
  plementation of security features.
  
  Example
  
  To change, the characteristics of Xstation xor1 for the current
  host, so that the new hardware address is 10005ac9999 but the
  other characteristics remain unchanged from  those  defined  with
  the  x_add_trm_120 command, enter:
  
  x_chg_trm_120 120 xor1 x_st_mgr.ether 10005ac9999 y \
  00 mouse n off none \
  /usr/bin/X11/bin/aixterm -W \
  -e /usr/lpp/x_st_mgr/bin/login
  
  It is necessary to repeat the previously defined parameters that
  you do not want to change.
  
  Implementation Specifics
  
  This command is part of AIX Xstation Manager/6000.
  
  Files
  
  /usr/lpp/x_st_mgr/bin/x_st_mgrd.cf    The Xstation Manager configura-
  tion file.
  
  /usr/lpp/x_st_mgr/bin/x_st_mgrd.tmty  The terminal list file.
  
  /etc/bootptab The boot protocol table.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  boot,  current host,  gateway host,  host, 
  Internet Protocol (IP),  network,  port,  protocol,  server, 
  subnet address mask.
  
  Related Information
  
  The  aixterm command,  bootpd command,  login command, 
  x_add_trm_120 command,  x_add_trm_130 command,  x_chg_net
  command,  x_chg_trm_130 command,  x_def_net command,  x_ls_trm
  command,  x_ls_net command,  x_rm_net command,  x_rm_trm command,
   xset command.
  
  
7
  biff Command
  
  
  Purpose
  
  Enables or disables mail notification during the current session.
  
   Syntax
  
  biff  [ y |  n]
  
  Description
  
  The biff command informs the system whether or not you want to be
  notified  when  mail arrives during the current terminal session.
  When  mail notification is enabled, From and Subject header lines
  and the first seven lines or 560 characters  of  the  message are
  displayed on the screen whenever mail arrives.  The biff y com-
  mand is often included in the $HOME/.login or $HOME/.profile file
  to be executed each time the user logs in.  The biff n command
  disables notification.
  
  The biff command operates asynchronously.  For synchronous notif-
  ication, use the MAIL variable of either the  ksh command,  bsh
  command, or the  csh command.
  
  Flags
  
  y     Enables mail notification.
  
  n     Disables mail notification.
  
  Examples
  
  1.    To display the current setting, enter:
  
  biff
  
  2.    To be notified during the current terminal session whenever
  mail arrives, enter the following statement in your $HOME/.login
  or $HOME/.profile file:
  
  biff y
  
  The From and Subject header lines and the first seven lines or
  560 characters of the message are displayed on the screen whenev-
  er mail arrives.
  
  Implementation Specifics
  
  This command is part of the Base Operating System (BOS) Runtime
  of AIX for RISC System/6000.
  
  Files
  
  $HOME/.login
  
  $HOME/.profile
  
  /usr/ucb/biff biff Command executable file
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  directory,  mail,  message, profile,  session, 
  terminal
  
   Mail Overview.
  
  Related Information
  
  The  comsat daemon,  mail command.
  
  
7
  next Command
  
  
  Purpose
  
  Shows the next message.
  
   Syntax
  
  next [  +Folder ] [  -header |  -noheader ] [ 
  
  -showproc CommandString |  ]
  -noshowproc ]
  
  Description
  
  The next command displays the number the system will assign to
  the next message that is incorporated into a folder.    This com-
  mand is equivalent to the show command with next specified as the
  message.
  
  The next command links to the show program and also passes any
  switches on to the showproc program.  If you link to next and
  call that link something other than next, your link will function
  like the show command, rather than like the next command.
  
  The show command passes any flags that it does not recognize to
  the program performing the listing.  Thus,  you can specify flags
  for the listing program,  as  well as the flags described in this
  command section.
  
  Flags
  
  +Folder       Specifies the folder that contains the message you want to
  show.
  
  -header       Displays a one-line description of the message being
  shown.   The description includes the folder name and the message
  number.  This is the default.
  
  -help Displays help information for the command.
  
  -noheader     Prevents display a one-line description of each message
  being shown.
  
  -noshowproc   Uses the /bin/cat file to perform the listing.  This
  is the default.
  
  -showproc CommandString       Uses the specified command string to per-
  form the listing.
  
  Profile Entries
  
  The following profile entries are part of the .mh_profile file:
  
  Current-Folder:       Sets your default current folder.
  
  Path: Specifies your UserMhDirectory.
  
  showproc:     Specifies the program used to show messages.
  
  Examples
  
  1.    To see the next message in the current folder, enter:
  
  next
  
  The system responds with a message similar to the following:
  
  (Message schedule: 10)
  
  The text of the message is also displayed.  In this example, mes-
  sage 10 in the current folder schedule is the next message.
  
  2.    To see the next message in the project folder, enter:
  
  next +project
  
  The system responds with the text of the message 5 and a header
  similar to the following:
  
  (Message project: 5)
  
  Implementation Specifics
  
  This command is part of Message Handler in the Base Operating
  System (BOS) Extensions 1 of AIX for RISC System/6000.
  
  Files
  
  $HOME/.mh_profile file        Specifies a user's MH profile.
  
  /usr/bin/next file    Contains the executable form of the next com-
  mand.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  default,  file,  flag,  folder,  format,  mes-
  sage.
  
   Message Handler (MH) Overview.
  
   Mail Overview.
  
  Related Information
  
  The  prev command,  show command.
  
  The  mh_alias file format,  mh_profile file format.
  
  
7
  rmsnalias Command
  
  
  Purpose
  
  Removes the alias for a specified profile from the SNA configura-
  tion database.
  
   Syntax
  
  rmsnalias  -t ObjectType ObjectAlias
  
  Description
  
  The rmsnalias command removes the ObjectAlias for a profile of
  type ObjectType from the SNA configuration database.  The
  ObjectAlias parameter specifies the name of the alias to
  remove.
  
  Flags
  
  -t ObjectType Specifies the ObjectType of the profile for which
  the alias is to be deleted.
  
  Example
  
  To remove an alias, using the rmsnalias command, enter:
  
  rmsnalias -t attachment ETHATTCH
  
  This removes the ETHATTCH alias from its attachment profile.
  
  Implementation Specifics
  
  This command is part of AIX Systems Network Architecture Ser-
  vices/6000.
  
  This command is not available for Japanese Language Support.
  
  Files
  
  /usr/bin      Directory in which the rmsnalias command resides.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  mksnalias command,  chsnalias command.
  
  
7
  lsmaster Command
  
  
  Purpose
  
  Displays the characteristics for the configuration of an NIS mas-
  ter server.
  
   Syntax
  
  /usr/etc/lsmaster [  -c |  -l ]
  
  Description
  
  The lsmaster command displays the characteristics of an NIS mas-
  ter server.  The host names of the slave servers are listed along
  with the currently served domains.
  
  You can use the  System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit lsmaster
  
  Flags
  
  -c    Specifies that the output should be in colon format.  This flag
  is the default.
  
  -l    Specifies that the output should be in list format.
  
  Example
  
  To list the NIS master server characteristics in colon format,
  enter:
  
  lsmaster -c
  
  Implementation Specifics
  
  This command is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  File
  
  /etc/yp/domainname directory  Contains the NIS maps for the NIS
  domain.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  For information about managing NIS, see  Network Information Ser-
  vice (NIS) Overview for System Management.
  
  Related Information
  
  The  chmaster command,  mkmaster command,  rmyp command,  smit
  command.
  
   Network File System (NFS) Overview for System Management.
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
   System Management Interface Tool (SMIT) Overview.
  
  
8
  crvfs Command
  
  
  Purpose
  
  Creates entries in the  /etc/vfs file.
  
   Syntax
  
  crvfs VFSEntry
  
  Description
  
  The crvfs command adds  /etc/vfs file entries by specifying
  fields within the VFSEntry parameter.  The VFSEntry parameter is
  composed         of         the         following         fields:
  VfsName:VfsNumber:MountHelper:FileSystemHelper.
  
  Any of the fields in the VFSEntry parameter can be the NULL
  value, with the exception of the VFSName field.  If all the argu-
  ments are satisfactory, and the VfsName entry given on the com-
  mand line does not already exist, a new entry is created in the 
  /etc/vfs file.
  
  Parameters
  
  VFSEntry      A string in the following format:
  
  VfsName:VfsNumber:
  
  VfsName       The name of a virtual file system type.
  
  VfsNumber     The virtual file system type's internal number as known
  by the kernel.
  
  MountHelper   The name of the back end used to mount a file system
  of this type.
  
  FileSystemHelper      The name of the backend used by certain file
  system specific commands to perform operations  on  a file system
  of this type.
  
  Example
  
  1.    To create a new vfs entry called newvfs, enter:
  
  crvfs "newvfs:4:none:/etc/helpers/newvfshelper"
  
  This creates the newvfs entry.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/vfs      Contains descriptions of virtual file system types.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  stanza.
  
        The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
        The  Mounting Overview explains mounting files and directories,
  mount points, and automatic mounts.
  
  Related Information
  
  The  lsvfs command,  chvfs command,  rmvfs command,  mount com-
  mand.
  
  The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  The  Mounting Overview explains mounting files and directories,
  mount points, and automatic mounts.
  
  
8
  restore Command
  
  
  Purpose
  
  Copies previously backed-up file systems, created by the  backup
  command, from a remote machine's device.
  
   Syntax
  
  restore [ -b Number1] [ -fDevice] [ -q] [ -r] [ -s Number2] [ -t]
  [ -T] [ -v] [ -x] [ [ -B] [ -h] [ -i] [ -m] [ -R] [ -y] | [ -d] [] [ -X Number3]] [File]
  -M] [ -X Number3]] [File]
  
  Note: Do not specify the File parameter when using the  -r,  -R,
  or  -T flag.  The -M flag can only be specified if the -x or -X
  flags are also specified.
  
  Description
  
  The restore command reads files written by the  backup command
  from a backup medium  and restores them to a file system.  Use it
  to restore files backed up on a local system.
  
  Generally, you do not need to determine the format used when
  files were backed up because the restore command does that for
  you.   However,  if  you  choose  any  flags  that  require  your
  knowledge of the backup format, first use the  -t flag to deter-
  mine which of the following formats apply:
  
  *     Backup by i-node number, which is created when an AIX Version 3
  file system is backed up by i-node number.
  
  *     Backup by name, which is created when specific files are backed
  up by name or when AIX Version 2 file  systems  are  backed up by
  i-node number.
  
  When you do not specify a restore device with the  -f flag, the
  restore command reads files from the /dev/rfd0
  default device.  For more information  on using tape dev-
  ices see the  rmt special file.
  
  The File parameter is the path name (absolute or relative) of the
  file that is displayed when using the  -T flag.  If you do not
  specify the File parameter, everything on the backup medium is
  restored.
  
  Notes:
  
  1.    Files must be restored using the same method by which they were
  backed up.  For example, if a file system was backed  up by name,
  it must be restored by name.
  
  2.    When more than one diskette is required, the restore command
  reads the  one mounted, prompts the user for a new one, and waits
  for the user's response.  After inserting the new diskette, press
  the Enter key to continue restoring files.
  
  3.    When restoring a backup by i-node number, the restore command
  creates and uses a file named restoresymtable.  This file is
  created in the file system being restored.  The file is necessary
  for the restore command to do incremental i-node restores, and
  should not be removed if such incremental i-node restore is used.
  
  4.    Do not use a no-rewind tape device for restoring, unless the 
  -s flag is specified.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit restore
  
  Flags
  
  -B    Specifies that data being restored is from standard input.
  Normally, the restore command examines the actual backup medium
  to  determine the backup format.  When piping  the  data  to  the
  restore command, this examination cannot occur.
  The -B flag indicates that standard input is in the AIX Version 3
  backup by i-node number.
  
  -b Number1    Specifies the number of blocks to read in a single in-
  put operation.  If you do not specify this flag, the restore com-
  mand  selects a default value appropriate for the physical device
  you have selected.  Larger values of the Number1 parameter result
  in larger physical transfers from tape devices. The number of
  blocks must be a multiple of the physical block size  of the dev-
  ice being used.  The restore command always ignores the value of
  the -b flag when it reads a diskette; the input is al-
  ways read in clusters that occupy a complete track.
  
  -d    Indicates that if the File parameter is a directory, all files
  in that directory should be restored.   In this case, the name of
  each restored file is always its name as shown by the restore  -T
  command.  The -d flag is used when the data is in the AIX Version
  2 backup by i-node number or by name format.
  
  -fDevice      Specifies the input device.  Specify the Device parameter
  as a file name (such as the /dev/rmt0 file) to get input from the
  named device or specify - (minus) to get input from the standard
  input device. The - (minus) feature enables you to pipe the out-
  put of a  dd command to the restore command.
  
  -h    Specifies that only the actual directory is restored, not the
  files it contains.  The -h flag is used when the data is in the
  AIX Version 3 backup by i-node number.
  
  -i    Specifies the start of the interactive mode.  This flag allows
  you to restore selected files from the backup.  The -i flag is
  used when the data  is  in  the  AIX  Version  3 backup by i-node
  number.  The subcommands for the -i flag are:
  
  ls [Directory1]       Specifies that within the Directory1 parameter,
  directory names are displayed with  a  /  (slash) after the name,
  and files to be  restored  are displayed with an * (asterisk) be-
  fore the name.  If the  -v flag is used, the i-node number of
  each file and directory is also displayed.  If the Directory1
  parameter is not specified, the current directory is used.
  
  cd Directory2 Changes the current directory to the Directory2
  parameter.
  
  pwd   Displays the full path name of the current directory.
  
  add [File1]   Specifies the File1 parameter to restore.  If the
  File1 parameter is a directory, that  directory
  and all its files are restored (unless the  -h flag is used).
  Files that are restored are displayed with an * (asterisk) before
  the name by the  ls subcommand.  If the File1 parameter is not
  specified, the current directory is added to the list.
  
  delete [File2]        Specifies the File2 parameter to be ignored in re-
  store.  If the File2 parameter is a directory, that directory and
  all its files are not restored (unless the  -h flag is used).  If
  the File2 parameter is not specified, the current directory is
  deleted from the extraction list.
  
  extract       Specifies the restoration of all files displayed with an *
  (asterisk) before the name by the  ls subcommand.
  
  setmodes      Specifies that all files restored have their owner,
  modes, and times set rather than using this information as it re-
  sides on the backup medium.
  
  verbose       Specifies that the i-node numbers of all restored files
  are displayed with the  ls subcommand.  Information about each
  file is also displayed as it is restored.    The next call of the
  verbose subcommand turns verbose off.
  
  help  Specifies that a summary of the subcommands is displayed.
  
  quit  Specifies that the restore command stops running immediately,
  even if all requested files are not restored.
  
  -M    Specifies that the access and modification times of restored
  files  are to be set to the time of restoration.  The default ac-
  tion (when the -M flag is not specified) is to set the access and
  modification times to the file times on the backup  medium.  If a
  restored file is an archive, the modification  times  in  all the
  member  headers are also set to the time of restoration.  You can
  specify this flag  only when you are restoring individually named
  files.  The -M flag is used when the data is in the AIX Version 2
  backup by i-node or by name format.  The -M flag can only be
  specified if the -x or -X flags are also specified.
  
  -m    Specifies that files are restored by i-node number rather than
  by path name.  The -m flag is used when the data is in the AIX
  Version 3 backup by i-node format.
  
  -q    Specifies that the removable medium is ready to use.  In this
  case, the restore command proceeds without prompting you to
  prepare the removable medium.
  
  -r    Restores an entire file system.  Do not specify the File param-
  eter when using the -r and  -R flags.
  
  Warning: If this procedure is not carefully followed, the entire
  file  system may be damaged.  If you are restoring a full  (level
  0) backup, run the  mkfs command to create an empty file system
  before  doing the restore.  If you are restoring  an  incremental
  backup at, for example level 2, run the  mkfs command, restore
  the appropriate  level 0 backup, then the level 1 backup, and fi-
  nally the level 2 backup.  As an added safety precaution, run the
   fsck command after you restore each backup level.
  
  -R    Used when restoring a by i-node backup to specify that the
  restore command requests a  specific volume in a
  multi-volume set of backup medium when restoring  an  entire file
  system.  The -R flag provides the ability to resume a previously
  interrupted restore.  Do not specify the File parameter
  when using the  -r and -R flags.
  
  -s Number2    Specifies that multiple backups are on the backup tape
  and that the restore command skips to the backup represented by
  the Number2 parameter.  The Number2 parameter must be in the
  range of 1 to 100.  To restore  multiple backups from tape, a no-
  rewind tape device must be specified.  The Number2 parameter is
  relative to your  position  on the tape.  For example, to restore
  the  5th and 9th backups from a 100 count backup  tape,  commands
  would use the -s5 flag to get to the 5th backup then the -s4 flag
  to get to the 9th backup.
  
  Note: Do not use a no-rewind tape device for restoring, unless the
   -s flag is specified.
  
  -t    Displays the table of contents for files backed up by i-node
  and displays header information for files  backed  up  by name or
  backed  up by i-node under the AIX Version 2 system.  You can use
  this flag to determine the backup format of the files.
  
  -T    Displays the table of contents for the backed up files.  If the
  backup was made by name (the  backup -i command), the names
  displayed are the ones you provided to the  backup command.  If
  the backup was made by i-node, the restore command displays the
  file name.  The names are relative to the root ( / ) directory of
  the file system backed up.  The only exception is the root ( / )
  directory itself.
  
   Note: Do not use the -T flag and the -t flag together, they are
  mutually exclusive.
  
  -v    Reports the progress of the restoration as it proceeds.
  
  -X Number3    Used when restoring from backup by name media and
  specifies the starting volume number.  If you specify the File
  parameter when using the -X flag, the restore command processes
  only the files you  request  and  prompts you to prepare the next
  volume only if the requested files are continued on that  volume.
  If you do not specify the File parameter, the restore command
  processes all files on that volume and prompts you to prepare the
  next volumes.   This is used with the AIX Version 3 by-name back-
  ups.
  
  -x    Restores individually named files.  If no names are given, all
  files on that medium are restored.  The names must be in the same
  form as the names shown by the restore  -T command.  With a name
  backup, the restore command gives the restored file whatever name
  was  supplied when the file was backed up.  If the original  name
  was specified relative to the current directory, the restore com-
  mand creates a file  relative  to  the  current  directory.   The
  restore command automatically creates any needed
  directories.   When using this flag you are prompted for the  be-
  ginning volume number.
  
  -y    Specifies that the restore command does not ask whether it
  should  stop  the  restore if a tape error is encountered.    The
  restore  command  attempts  to  skip over  bad
  blocks.  The -y flag is used when the data is in the AIX Version
  3 backup by i-node format.
  
  -?    Specifies that the usage message is displayed.
  
  Examples
  
  1.    To list the names of files previously backed up, enter:
  
  restore -T
  
  Information is read from the /dev/rfd0efault backup device.  If
  individual  files  are  backed  up,  only   the  file  names  are
  displayed.  If an  entire  file  system  is backed up, the i-node
  number is also shown.
  
  2.    To restore files to the main file system, enter:
  
  restore -x -v
  
  The  -x flag extracts all the files from the backup medium and
  restores them to their proper places in the file system.  The  -v
  flag displays a progress report as each file is restored.    If a
  file  system backup is being restored, the files are  named  with
  their i-node numbers.  Otherwise, just the names are displayed.
  
  3.    To copy selected files, enter:
  
  restore -xv /u/mike/manual/chap1
  
  This command extracts the /u/mike/manual/chap1 file from the
  backup   medium   and  restores  it.    To  work  properly,   the
  /u/mike/manual/chap1  file must be a name that
  can be displayed by the  restore -T command.
  
  4.    To copy all the files in a directory, enter:
  
  restore -xdv manual
  
  This command restores the manual directory and the files in it.
  If it does not exist, a directory named manual is created in the
  current directory to hold the files being restored.
  
  5.    To restore an entire file system backup, enter:
  
  mkfs /dev/hd1
  mount /dev/hd1 /filesys
  cd /filesys
  restore -r
  
  This command restores an entire file system backup onto the
  /dev/hd1 file.  It destroys  and  replaces  any
  file system that was previously stored on the /dev/hd1 file.  If
  the backup was made using incremental  file  system  backups, re-
  store the backups in increasing  backup-level order (for example,
  0, 1, 2 ).
  
  6.    To improve performance on streaming tape, pipe the  dd command
  to the restore command by entering:
  
  dd if=/dev/rmt0 bs=30b | restore- -x -f -
  
  The  dd command copies the files from an input file that is a
  streaming tape device (if=/dev/rmt0) and specifies a file size of
  30 blocks (bs=30b).  The output is piped to the restore command
  which gets the input from the standard input device ( -f) and re-
  stores by name ( -x).
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /dev/rfd0     Default restore device.
  
  /etc  Directory where the restore command resides.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  i-node number,  mount.
  
        The  Backup Overview provides information on different methods of
  backing  up,  restoring process, different types of backup media,
  and guidelines for backup policies.
  
        The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
        The  Directories Overview explains working with directories and
  path names.
  
        The  Files Overview provides information on working with files.
  
  Related Information
  
  The  backup command,  mkfs command,  fsck command,  dd command.
  
  The  filesystems file,  backup file,  rmt special file.
  
  The  Backup Overview provides information on different methods of
  backing up, restoring process,  different  types of backup media,
  and guidelines for backup policies.
  
  The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  The  Directories Overview explains working with directories and
  path names.
  
  The  Files Overview provides information on working with files.
  
  The  System Management Interface Tool (SMIT) Overview explains
  the structure, main menus, and tasks that are done with SMIT.
  
   Using SMIT explains SMIT screens, how to navigate in the
  screens, and how to enter data.
  
  
8
  dc Command
  
  
  Purpose
  
  Provides an interactive desk calculator for doing arbitrary-
  precision integer arithmetic.
  
   Syntax
  
  dc [File]
  
  Description
  
  The dc command is an arbitrary-precision arithmetic calculator.
  The dc command takes its input from the File parameter or stan-
  dard input until it reads an end-of-file character.  It writes to
  standard output.    It  operates on decimal integers, but you can
  specify an input base, output  base,  and  a number of fractional
  digits to be maintained.  The dc command is structured as a
  stacking, reverse Polish calculator.
  
  The  bc command is a preprocessor for the dc command.  It pro-
  vides  infix  notation  and a syntax similar to the  C  language,
  which implements functions and control structures for programs.
  
  Subcommands
  
  Number        Pushes the specified value onto the stack.  A Number is an
  unbroken string of the digits 0-9.  To specify a negative number,
  precede it with _ (underscore).    A number can contain a decimal
  point.
  
  + - / * % \^  Adds (+), subtracts (-), multiplies (*), divides (/),
  remainders (%), or  exponentiates (\^ ) the top two values on the
  stack.  The dc command pops the top two entries off the stack and
  pushes the result on the stack in their place.  The dc command
  ignores fractional parts of an exponent.
  
  sx    Pops the top of the stack and stores it in a register named x,
  where the x variable can be any character.
  
  Sx    Treats the x variable as a stack.  It pops the top of the main
  stack and pushes that value onto the stack represented by the x
  variable.
  
  lx    Pushes the value in the register represented by the x variable
  on the stack.  The register represented by the x variable is not
  changed.  All registers start with a value of 0.
  
  Lx    Treats the x variable as a stack and pops its top value onto
  the main stack.
  
  d     Duplicates the top value on the stack.
  
  p     Displays the top value on the stack.  The top value remains un-
  changed.  The p interprets the top of the stack as an ASCII
  string, removes it, and displays it.
  
  P     Interprets the top of the stack as a string, removes it, and
  displays it.
  
  f     Displays all values on the stack.
  
  q     Exits the program.  If the dc command is running a string, it
  pops the recursion level by two.
  
  Q     Pops the top value on the stack and on the string execution lev-
  el by that value.
  
  x     Treats the top element of the stack as a character string and
  runs it as a string of dc commands.
  
  X     Replaces the number on the top of the stack with its scale fac-
  tor.
  
  [ String ]    Puts the bracketed String parameter onto the top of the
  stack.
  
  [ = | > | < ] x       Pops the top two elements of the stack and com-
  pares them.  Evaluates the register represented by the x variable
  as if it obeys the stated relation.
  
  v     Replaces the top element on the stack by its square root.  Any
  existing fractional part of the option is taken into account, but
  otherwise, the scale factor is ignored.
  
  !     Interprets the rest of the line as an AIX command.
  
  c     Cleans the stack: the dc command pops all values on the stack.
  
  i     Pops the top value on the stack and uses that value as the
  number radix for further input.
  
  I     Pushes the input base on the top of the stack.
  
  o     Pops the top value on the stack and uses that value as the
  number radix for further output.
  
  O     Pushes the output base on the top of the stack.
  
  k     Pops the top of the stack, and uses that value as a nonnegative
  scale factor.  The appropriate  number  of places is displayed on
  output and is maintained during multiplication, division, and ex-
  ponentiation.   The interaction of scale factor, input base,  and
  output base is reasonable if all are changed together.
  
  z     Pushes the number of elements in the stack onto the stack.
  
  Z     Replaces the top number in the stack with the number of digits
  in that number.
  
  ?     Gets and runs a line of input.
  
  ;:    The  bc command uses these characters for array operations.
  
  Examples
  
  1.    To use the dc command as a calculator:
  
  You:  1 4 / p
  System:       0
  You:  1 k   [ Keep 1 decimal place ]s.
        1 4 / p
  System:       0.2
  You:  3 k   [ Keep 3 decimal places ]s.
        1 4 / p
  System:       0.250
  You:  16 63 5 / + p
  System:       28.600
  You:  16 63 5 + / p
  System:       0.235
  
  You can enter the comments (enclosed in [ ]s.), but they are pro-
  vided only for your information.
  
  When you enter the dc command expressions directly from the key-
  board, press Ctrl-D to end the  bc command session and return to
  the shell command line.
  
  2.    To load and run a dc program file:
  
  You:  dc prog.dc
        5 lf x p [ 5 factorial ]s.
  System:       120
  You:  10 lf x p [ 10 factorial ]s.
  System:       3628800
  
  This entry interprets the dc program saved in prog.dc, then reads
  from the workstation keyboard.  The lf x evaluates the function
  stored in register f, which could be defined in the prog.c pro-
  gram file as:
  
  [ f: compute the factorial of n ]s.
  [ (n = the top of the stack) ]s.
  [ If 1>n do b; If 1<n do r ]s.
   [d 1 >b d 1 <r] sf
  [ Return f(n) = 1 ]s.
   [d - 1 +] sb
  [ Return f(n) = n * f(n-1) ]s.
   [d 1 - lf x *] sr
  
  You can create dc program files with a text editor or with the 
  -c (compile) flag of the bc command.  When you enter the
  dc command expressions directly from the keyboard, press
  Ctrl-D to end the bc command session and return to the shell com-
  mand line.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /usr/bin/dc   The dc command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  standard input,  standard output
  and  shell.
  
  Related Information
  
  The  bc command.
  
  
8
  chcursor Command
  
  
  Purpose
  
  Changes the shape of the cursor used by the current virtual ter-
  minal.
  
   Syntax
  
  chcursor  -s Number
  
  Description
  
  The chcursor command changes the shape of the cursor used in the
  currently  active virtual terminal.  Six cursor shapes are avail-
  able:
  
  Cursor Shape  Value
  
  No cursor     0
  
  Single underscore     1
  
  Double underscore     2
  
  Illuminated character cell (lower half)       3
  
  Mid-character line    4
  
  Illuminated full-character cell       5
  
  Note: This command is usable only on a High Function Terminal
  (HFT).
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT enter:
  
  smit chcursor
  
  For a more precise entry into a certain part of the Devices path
  in SMIT, see  Devices in SMIT.
  
  Flags
  
  -s Number     Specifies the shape of the cursor for the current virtu-
  al terminal.  Number is an integer from  0 through 5.
  
  Example
  
  To change the cursor shape to a mid-character line (or - (dash)),
  enter:
  
  chcursor -s4
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/chcursor Command file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary terms:  cursor,  virtual terminal.
  
   HFT Subsystem Conceptual Introduction.
  
  Related Information
  
  The  smit command tells how to run the smit command, what flags
  to use to vary the output, and how to use the smit.script and
  smit.log files.
  
   Changing HFT/Virtual Terminal Characteristics Using SMIT
  discusses  modifying the characteristics of certain devices using
  SMIT.
  
  
8
  help Command
  
  
  Purpose
  
  Provides information for new users.
  
   Syntax
  
  help
  
  Description
  
  The help command presents a one page display of information for
  new users.  Information is available for the following topics:
  
  *     Concatenating or displaying files
  
  *     Editing lines interactively
  
  *     Sending and receiving mail
  
  *     Reading system messages
  
  *     Changing password file information
  
  *     Identifying current users of the system
  
  *     Sending messages to the other users on the system
  
  *     Displaying the contents of directories
  
  *     Viewing information on the Source Code Control System
  
  *     Setting terminal modes.
  
  Example
  
  To obtain help, type help and the following appears:
  
  The commands:
        man -k keyword  lists commands relevant to a keyword
        man command     prints out the manual pages for a command;
  other basic commands are:
        cat     -concatenates files (and just prints them out)
        ex      -text editor
        finger  -user information lookup directory
        ls      -lists contents of a directory
        mail    -sends and receives mail
        msgs    -system messages and junk mail
        passwd  -changes login password
        sccshelp        -views information on the Source Code Control System
        tset    -sets terminal modes
        who     -who is on the system
        write   -writes to another user
  You could find programs about mail by the command:    man -k mail
  And print out the man command documentation via:      man mail
  You can log out by typing exit.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  concatenate and  Source Code
  Control System.
  
  Related Information
  
  The  cat command,  ex command,  finger command,  ls command, 
  mail command,  msgs command,  passwd command,  sccshelp
  command,  tset command,  who command,  write command.
  
  
8
  emkey Command
  
  
  Purpose
  
  Creates a new customization profile for the 3278/79 Emulation
  (EM78) program.
  
   Syntax
  
  emkey [ -iFile] [ -oFile]
  
  Description
  
  The emkey command allows you to change the keyboard layout,
  select different field attribute modes, and use  different colors
  on a color  display.   You can do this by modifying copies of the
  default (emdefs.p) or alternate (emaltdefs.p) customization
  files, and issuing the emkey command to produce a new customiza-
  tion profile.
  
  Flags
  
  -?    Displays the help screen for the emkey command.  Do not use the
  -? flag with any other flags.
  
  -iFile        Specifies the location of the customization file to be
  used.  The File variable can be any valid AIX file identifier and
  should contain EM78 profile information.  The file can be in any
  directory as long  as  you have read access to the file.  The de-
  fault value for the File variable is emdefs.p in your current
  directory.
  
  -oFile        Specifies where to write the customization profile.  The
  File variable can be any valid AIX file identif-
  ier, provided  you  have  write permission in the directory.  The
  default value for the File variable is emkeys.o in your current
  directory.
  
  Examples
  
  1.    To display help information for the emkey command, enter:
  
  emkey -?
  
  2.    To issue the emkey command using the customization file in the
  current directory, enter:
  
  emkey
  
  The above example reads the emdefs.p customization file from the
  current directory and creates the emkeys.o keyboard profile in
  the current directory.
  
  3.    To create the alternate customization profile, make sure that
  you have write permission in your current directory, and enter:
  
  emkey -i/usr/lib/em78/emaltdefs.p
  
  When the command is completed a message is displayed.  To use the
  new profile, issue the  em78 command with the  -k flag, and the
  name of the alternate profile (emkeys.o) as follows:
  
  em78 -kemkeys.o
  
  The alternate customization profile (emkeys.o) is now active.
  
  Note: The  em78 command  -k flag is required only if the profile
  to be used is named something other than $HOME/emkeys.o.
  
  4.    To issue the emkey command using the -i and -o flags to select
  the input customization file and the output profile, enter:
  
  emkey -i/usr/lib/em78/emaltdefs.p -o/usr/jdoe/emaltkeys.o
  
  The above example reads the user definition file
  /usr/lib/em78/emaltdefs.p  and  produces  the keyboard definition
  file /usr/jdoe/emaltkeys.o.
  
  Implementation Specifics
  
  This command is part of AIX 3278/79 Emulation/6000.
  
  Files
  
  /usr/lib/em78 3278/79 Emulation Program directory.
  
  /usr/lib/em78/emdefs.p        3278/79 Emulation Program default user de-
  finitions file.
  
  /usr/lib/em78/emaltdefs.p     3278/79 Emulation Program alternate user
  definitions file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  default,  default value,  directory,  file, 
  profile.
  
  For more information on emulators, see  Emulators Overview.
  
  For more information on using the EM78 program, see  3278/79 Emu-
  lation Overview.
  
  Related Information
  
  The  em78 command starts the EM78 program; the   emrcv(MVS/TSO), 
  emrcv (VM/CMS),  emsend (MVS/TSO), and  emsend (VM/CMS) commands
  transfer files between a host and a workstation.
  
  For more information on EM78 customization, read  Customizing
  3278/79 Emulation.
  
  
8
  talkd Daemon
  
  
  Purpose
  
  Provides the server function for the talk command.
  
   Syntax
  
  The talkd daemon is normally started by the  inetd daemon.  It
  can also be controlled from the command line using SRC commands.
  
  talkd [  -s ]
  
  Description
  
  The talkd daemon is the server that notifies a user (the callee)
  that  someone else (the caller) wants to initiate a conversation.
  The daemon sets up the conversation if the callee accepts the in-
  vitation.  The caller initiates the conversation by executing the
   talk command specifying the callee.  The callee accepts the in-
  vitation by executing the talk command specifying the caller.
  
  The talkd daemon listens at the socket defined in the InetServ
  object class.  When the talkd daemon receives a LOOK_UP request
  from a local or remote talk process, the talkd daemon scans its
  internal invitation table for an entry that pairs the client pro-
  cess (the local or remote talk process) with a caller.
  
  If no entry exists in the invitation table, the talkd daemon as-
  sumes that the client process is the caller.  The talkd daemon
  then receives the client process's ANNOUNCE request.  The talkd
  daemon broadcasts an invitation on  the remote computer where the
  callee first logged in (unless the caller specifies  a particular
  tty device).  This terminal usually is the console, but it may be
  another terminal.
  
  Otherwise, the invitation is sent to the terminal that the second
  user first logged into.  This usually is the console,  but it may
  be another terminal.
  
  Note: If the user being called is running AIXwindows and has no
  other terminals open, the talkd daemon cannot send an invitation.
  The user must have opened at  least one other HFT besides that in
  which AIXwindows is running.
  
  If an entry does exist in the talkd daemon's internal invitation
  table, the talkd daemon assumes that the client is the callee.
  The talkd daemon returns the appropriate rendezvous address to
  the talk process for the callee.  The callee process then estab-
  lishes a stream connection with the caller process.
  
  Note: The talkd daemon uses the Talk 4.3 protocol, which is not
  compatible with 4.2 versions of the talk process. The subserver
  name for the 4.3 protocol is ntalk.
  
  Changes to the talkd daemon should be made using the System
  Management Interface Tool (SMIT); the talkd daemon is started by
  default.  The inetd daemon no longer reads the /etc/inetd.conf
  file, although this file still exists.  Instead, the inetd daemon
  gets its information from the InetServ object class (stored in
  the  ODM).  This object class is a combination of the information
  in the /etc/inetd.conf file and the /etc/services file.  InetServ
  is created at install time from information in these two files.
  
  If you have already set up the talkd daemon using the
  /etc/inetd.conf file, or if you  are  accustomed
  to using this file and want to continue doing  so, you can.  How-
  ever, the InetServ object class and the /etc/services and
  /etc/inetd.conf  files must be kept in sync.  If
  you configure the fingerd daemon using SMIT, the inetexp command
  will be run automatically.  If you modify the /etc/inetd.conf or
  the /etc/services file, you will need to run the inetimp command
  to apply those changes to  the  InetServ  object class.  Then run
  the refresh -s inetd command to update immediately the inetd dae-
  mon.
  
  Debugging messages are sent to the  syslogd daemon.
  
  The talkd daemon should be controlled using the System Resource
  Controller (SRC) or the System Management Interface  Tool (SMIT).
  Entering talkd at the command line is not recommended.
  
  Manipulating the talkd Daemon with the System Resource Controller
  
  The talkd daemon is an inetd subserver controlled by the System
  Resource Controller ( SRC).  The talkd daemon is a member of the
  tcpip system group.  The talkd daemon is enabled by default and
  can be manipulated by SRC commands.
  
  Use the following SRC commands to manipulate the talkd daemon:
  
   startsrc     Starts a subsystem, group of subsystems, or a subserver.
  
   stopsrc      Stops a subsystem, group of subsystems, or a subserver.
  
   traceson     Enables tracing of a subsystem, group of subsystems, or
  a subserver.
  
   tracesoff    Disables tracing of a subsystem, group of subsystems,
  or a subserver.
  
   lssrc        Gets the status of a subsystem, group of subsystems, or a
  subserver.
  
  Flag
  
  -s    Turns on socket-level debugging.
  
  Examples
  
  1.    To start the talkd daemon, enter the following:
  
  startsrc -t ntalk
  
  This command starts the daemon.  The -t flag specifies that the
  subserver that follows is to be started.
  
  2.    To stop the talkd daemon normally, enter the following:
  
  stopsrc -t ntalk
  
  This command stops the daemon.  The -t flag specifies that the
  subserver that follows is to be stopped.
  
  3.    To get a short status report from the talkd daemon, enter the
  following:
  
  lssrc -t ntalk
  
  This command returns the name of the daemon, the process ID of
  the daemon, and the state of the daemon (active or inactive).
  
  4.    To enable tracing for the talkd daemon, enter the following:
  
  traceson -t ntalk
  
  This command enables socket level debugging.  Use the  trpt com-
  mand to look at the output of this example command.
  
  Implementation Specifics
  
  This daemon is part of TCP/IP in Network Support Facilities in
  AIX Base Operating System (BOS) Runtime.
  
  Files
  
   /etc/services        Defines Internet socket assignments.
  
   /etc/utmp    Contains data about users currently logged in.
  
   /etc/inetd.conf      Contains the configuration information for the
  inetd daemon.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  client,  daemon,  server,  subserver,  subsys-
  tem.
  
   Understanding the TCP/IP Daemons,  Understanding SRC Control of
  TCP/IP Daemons.
  
  Related Information
  
  The  inetd daemon,  syslogd daemon.
  
  The  inetserv command,  talk command.
  
  
8
  rmgroup Command
  
  
  Purpose
  
  Removes a group.
  
   Syntax
  
  rmgroup Name
  
  Description
  
  The rmgroup command removes a group specified by the Name parame-
  ter, as well as all the attributes defined for that group.    The
  users within a group are not removed  from  the  system.   If the
  group is the primary group for any user, it cannot be removed un-
  less you redefine the user's primary group with the chuser
  command, which alters the /etc/passwd file.
  
  The group name must already exist as an alphanumeric string of 8
  characters or less  that begins with an alphabetic character, and
  cannot be the ALL or default keywords.
  
  Only the root user can remove an administrative group or a group
  with administrative users as members.
  
  You can use the System Management Interface Tool (SMIT) to run
  this command.  To use SMIT, enter:
  
  smit rmgroup
  
  Security
  
  Access Control: This command should grant execute (x) access only
  to the root user and members  of the security group.  The command
  should have the trusted computing base attribute and run setuid
  to the root user to access the user database.
  
  Files Accessed:
  
  Mode  File
  
  r     /etc/passwd
  
  rw    /etc/group
  
  rw    /etc/security/group
  
  Auditing Events:
  
  Event Information
  
  GROUP_Remove  group
  
  Example
  
  1.    To remove the finance group, enter:
  
  rmgroup finance
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/rmgroup  Specifies the path to the rmgroup command.
  
   /etc/group   Contains the basic attributes of groups.
  
   /etc/security/group  Contains the extended attributes of groups.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  access,  attribute,  character, 
  group,  keyword,  parameter,  path,  primary group,  program, 
  root user,  setuid,  trusted computing base,  user.
  
         Security Introduction describes the identification and authenti-
  cation of users, discretionary  access  control, the trusted com-
  puting base, and auditing.
  
  Related Information
  
  The  chfn command,  chgrpmem command,  chsh command,  chgroup
  command,  chuser command,  lsgroup command,  lsuser command, 
  mkgroup command,   mkuser command,  passwd command, 
  pwdadm command,  rmuser command,  setgroups command, 
  setsenv command.
  
  
  
  
8
  pwdadm Command
  
  
  Purpose
  
  Administers users' passwords.
  
   Syntax
  
  pwdadm [  -f Flags |  -q ] User
  
  Description
  
  The pwdadm command administers users' passwords.  The root user
  or a member of the security  group can supply or change the pass-
  word of the user specified by the User parameter, provided the
  invoker of the command gives his own password when queried.  When
  the command executes, it sets the ADMCHG attribute.  This forces
  the user to change the password the next time a login command or
  an su command is given for the user.
  
  The root user or a member of the security group should not change
  their  personal  password  with this command.  Only the root user
  can  change password information for administrative users,  those
  users that have the admin attribute set to true in the
  /etc/security/user file.
  
  When this command is executed, the password field for the user in
  the /etc/passwd file is set to ! (exclamation point), indicating
  that   an   encrypted   version   of   the  password  is  in  the
  /etc/security/passwd file.  The ADMCHG attribute
  is set when the root user  or  a  member  of  the  security group
  changes a user's password with the pwdadm command or with the
  passwd command.
  
  A new password must be defined according to the rules in the
  pw_restrictions stanza of the /etc/security/login.cfg file, un-
  less the -f NOCHECK flag is included.  By including the -f flag
  with the pwdadm command, the root user or a member of the securi-
  ty group can set attributes  that  change the password rules.  If
  there is no password entry in the /etc/security/passwd file when
  the -f flag is used, the password field in the /etc/passwd file
  is set to ! (exclamation point) and an * (asterisk) appears in
  the password= field to indicate that no password has been set.
  
  The -q flag permits the root user or members of the security
  group to query password information.  Only the status of the las-
  tupdate attribute and the flags attribute appear.  The
  encrypted password remains hidden.
  
  Flags
  
  -f Flags      Specifies the flags attribute of a password.  The Flags
  parameter must be a list of comma-separated attributes  from  the
  following list:
  
  NOCHECK       Signifies that new passwords need not follow the guide-
  lines  established   in   the   pw_restrictions   stanza  of  the
  /etc/security/login.cfg file for password compo-
  sition.
  
  ADMIN Specifies that password information may be changed only by
  the root user.  Only the root user can enable or disable this at-
  tribute.
  
  ADMCHG        Resets the ADMCHG attribute without changing the user's
  password.  This forces the user to change passwords the next time
  a login command or an su command is given for the user.  The at-
  tribute is cleared when the user specified by the User parameter
  resets the password.
  
  -q    Queries the status of the password.  The values of the
  lastupdate attribute and the flags attribute ap-
  pear.
  
  Security
  
  Access Control: Only the root user and members of the security
  group should have execute (x)  access  to this command.  The com-
  mand should have the trusted computing base attribute and be
  setuid  to  the  root  user to  have  write  (w)  access  to  the
  /etc/passwd file, the /etc/security/passwd file,
  and other user database files.
  
  Files Accessed:
  
  Mode  File
  
  rw    /etc/passwd
  
  rw    /etc/security/passwd
  
  r     /etc/security/login.cfg
  
  Auditing Events:
  
  Event Information
  
  PASSWORD_Change       user
  
  PASSWORD_Flags        user, flags
  
  Examples
  
  1.    To set a password for user susan, member of the security group
  enters:
  
  pwdadm susan
  
  When prompted, the user who invoked the command must give his own
  password before Susan's password can be changed.
  
  2.    To query the password status for user susan, a member of the
  security group enters:
  
  pwdadm -q susan
  
  Values for the lastupdate attribute and the flags attribute ap-
  pear: The following example shows what appears when the NOCHECK
  and ADMCHG flags attributes are in effect: 
  
  susan
    lastupdate=
    flags= NOCHECK,ADMCHG
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /bin/pwdadm   Specifies the path to the pwdadm command.
  
   /etc/passwd  Contains the basic user attributes.
  
   /etc/security/passwd Contains password information.
  
   /etc/security/login.cfg      Contains configuration information.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  access,  attribute,  encrypt, 
  flag,  group,  parameter,  password,  root user,  security, 
  setuid,  stanza,  trusted computing base.
  
         Security Introduction describes the identification and authenti-
  cation of users, discretionary  access  control, the trusted com-
  puting base, and auditing.
  
  Related Information
  
  The  passwd command.
  
  
  
  
8
  last Command
  
  
  Purpose
  
  Displays information about previous log ins.
  
   Syntax
  
  last [ -Number ] [ Name ...  ] [ Terminal ...  ]
  
  Description
  
  The last command displays, in reverse chronological order, all
  previous log ins and log offs still recorded in the /usr/adm/wtmp
  file.  The /usr/adm/wtmp file collects login and log out records
  as these events  occur  and holds them until the records are pro-
  cessed by the acctcon1 and acctcon2 commands as part of the daily
  reporting procedures.
  
  The list can be restricted to:
  
  *     The number of lines specified by the -Number parameter.
  
  *     Log ins or log offs by the users specified by the Name parameter
  
  *     Log ins or log offs from the terminals specified by the Terminal
  parameter.
  
  A terminal can be named fully or abbreviated as a tty.  For exam-
  ple, you can specify either the tty0 terminal or the 0 terminal.
  
  For each process, the last command displays the:
  
  *     Time the session began
  
  *     Duration
  
  *     Terminal (Tty) used.
  
  If applicable, the following information is included:
  
  *     Terminations due to re-booting.
  
  *     Sessions that are still continuing.
  
  If the last command is interrupted, it indicates how far the
  search has progressed in the /usr/adm/wtmp file.  If interrupted
  with a quit signal, the command indicates how far the search has
  progressed and then continues the search.
  
  Examples
  
  1.    To display all the recorded log ins and log offs by user root
  from the console terminal, enter:
  
  last root console
  
  2.    To display the time between re-boots of the system, enter:
  
  last re-boot
  
  The re-boot pseudo-user logs in when the system re-boots.
  
  Implementation Specifics
  
  This command is part of Accounting Services in AIX BOS Extensions
  2 and is provided for compatibility with  Berkeley  Software Dis-
  tribution (BSD) systems.
  
  Files
  
  /usr/ucb/last The path to the last command.
  
  /usr/adm/wtmp Contains connect-time accounting data, including log
  in, log off, and shutdown records.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  accounting system,  flag,  log
  in,  log out,  parameter,  path,  procedure,  process,  record, 
  root user,  session,  user.
  
         How to Set Up an Accounting System describes the steps you must
  take to establish an Accounting System.
  
         Accounting Overview describes the Accounting System, the
  preparation  of  daily and monthly reports,  and  the  accounting
  files.
  
  Related Information
  
  The  acctcon command, lastlogin command in the  acct/* commands.
  
  
  
  
  
  
9
  bellmail Command
  
  
  Purpose
  
  Sends messages to system users and displays messages from system
  users.
  
   Syntax
  
  bellmail  -e [ -dDirectoryPath |  -fFile] [ -p] [ -q] [ -r] [ -t]
  User.  . .
  
  Description
  
  The bellmail command with no flags writes to standard output, one
  message  at a time, all stored mail addressed to your login name.
  Following each message, the bellmail command prompts you with a ?
  (question mark).  Press the Enter key  to  display  the next mail
  message, or enter one of the bellmail subcommands that control
  the disposition of the message.
  
  When sending mail, specify the User parameter, and then the
  bellmail command reads a message from standard
  input  until  you press END OF FILE (Ctrl-D) or enter a line con-
  taining only a . (period).  It prefixes this message with the
  sender's name, the date and time of the message  (its  postmark),
  and then adds this message to the user's mailbox.
  
  The action of the bellmail command can be modified in two ways by
  manipulating the /usr/spool/mail/UserID mailbox file:
  
  *     The default permission assignment for "others" is "all permis-
  sions   denied"  (660).    If  you  change  this  permission   to
  "read/write", the system preserves the file, even when it is emp-
  ty, to maintain the desired permissions.
  
  Note: The default mode for the mailbox file is 660.  If this mode
  is changed, you will not be able to remove the file.
  
  *     You can edit the file to contain as its first line:
  
  Forward to person
  
  This causes all messages sent to the User parameter to be sent to
  the Person parameter instead.  The Forward to feature is espe-
  cially useful for sending all  of a person's mail to a particular
  machine in a network environment.
  
  To specify a recipient on a remote system accessible through
  uucp, prefix  the system name and an exclamation
  mark (!) to the User parameter.  The  uucp command contains addi-
  tional information about addressing remote systems.
  
  Note: In order to use the remote mail function, uucp must be com-
  pletely configured.
  
  Flags
  
  -dDirectoryPath       Saves mail in the named directory instead of the
  default directory, /usr/spool/mail.  Cannot be specified with the
   -fFile flag.
  
  -e    Does not display any messages.  This flag causes the bellmail
  command to return an exit value of  0  if  the  user has mail, an
  exit value of 1 if there is no mail.
  
  -fFile        Saves mail in the named File parameter instead of in the
  default mail file, $HOME/mbox.  Cannot be specified with the 
  -dDirectoryPath flag.
  
  -p    Displays mail without prompting for a disposition code.  This
  flag does not delete, copy, or forward any messages.
  
  -q    Causes the bellmail command to exit when you press INTERRUPT
  (Ctrl - C).  Normally,  pressing  INTERRUPT  (Ctrl  -  C)
  stops only the message being displayed.   (In this case, the next
  message sometimes is not displayed until you enter the  p subcom-
  mand.)
  
  -r    Displays mail in first-in, first-out order.
  
  -t    Prefixes each message with the names of all recipients of the
  mail.  (Normally, only the individual recipient's  name  displays
  as addressee.)
  
  Usually, the User parameter is a name recognized by the  login
  command.  If the system does not recognize one  or  more  of  the
  specified User parameters or if the bellmail command is inter-
  rupted during input, the bellmail command saves the message in
  the $HOME/dead.letter file to allow for editing and resending.
  
  Subcommands
  
  The following subcommands control message disposition:
  
  +     Displays the next mail message (the same as pressing the Enter
  key).
  
  -     Displays the previous message.
  
  !Command      Runs the specified AIX command.
  
  *     Displays a subcommand summary.
  
  d     Deletes the current message and displays the next message.
  
  m User        Forwards the message to the named User parameter.
  
  p     Displays the current message again.
  
  q     Writes any mail not yet deleted to the /usr/spool/mail/UserID
  file and exits.  Pressing  END  OF FILE (Ctrl-D) has the same ef-
  fect.
  
  s [File]      Saves the message in the named File parameter instead of
  in the default mail file, $HOME/mbox.
  
  w [File]      Saves the message, without its postmark, in the specified
  File parameter instead of in the default mail file $HOME/mbox.
  
  x     Writes all mail unchanged to /usr/spool/mail/UserID and exits.
  
  Examples
  
  1.    To send mail to other users, enter:
  
  bellmail tom rachel
  Don't forget the meeting tomorrow at 9:30 a.m.
  
  Press Ctrl-D at the end of the message.  In this example, the
  system mails the message to users tom and rachel.
  
  2.    To send a file to another user, enter:
  
  bellmail lance <proposal
  
  In this example, the file proposal is sent to user lance.
  
  3.    To display your mail, enter:
  
  bellmail
  
  After the most recent message is displayed, a ? (question mark)
  indicates that the bellmail command is waiting for one of the
  bellmail subcommands.  Enter help or an *
  (asterisk) to list the subcommands available.
  
  4.    To save a message or a file to the default mail file, enter:
  
  bellmail
  
  This command displays each message mailed to you.  Press the
  Enter key after the ? prompt until the desired file is displayed.
  When the appropriate file is displayed, enter:
  
  s
  
  In this example, the file is saved in the default mail file,
  $HOME/mbox.
  
  5.    To save a message or a file to a specific file, enter:
  
  bellmail
  
  This command displays each message mailed to you.  Press the
  Enter key after the ? prompt until the desired file is displayed.
  When the appropriate file is displayed, enter:
  
  s mycopy
  
  In this example, the file is saved in a file named mycopy, in-
  stead of in the default mail file.
  
  Implementation Specifics
  
  This command is part of the Base Operating System (BOS) Runtime
  of AIX for RISC System/6000.
  
  Files
  
  $HOME/dead.letter     Unmailable text
  
  $HOME/mbox    Your personal mailbox
  
  /usr/mail/*.lock      Lock for mail directory
  
  /usr/spool/mail/UserID        Default system mailbox for UserID
  
  /usr/bin/bellmail     Bellmail program.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  edit,  mail,  message,  parameter,  remote sys-
  tem
  
   Mail Overview.
  
  Related Information
  
  The  mail command,  uucp command.
  
   Using Mailboxes and Mail Folders.
  
   Editors Overview.
  
  
9
  from command
  
  
  Purpose
  
  To determine whom mail is from.
  
   Syntax
  
  from  [ -s Sender] [User]
  
  Description
  
  The from command displays the message headings in your mailbox
  file to show you whom mail is from.  If you specify User, the
  User  mailbox  is examined instead of your own
  (provided that you have read permission to User's mailbox).
  
  Flags
  
  -s Sender     Prints message headers only for mail sent by Sender.
  
  Examples
  
  1.    To display the message headings in your mailbox, enter:
  
  from
  
  The names of the senders and message dates are displayed.
  
  2.    To display the message headings for mail sent by a specific
  user, enter:
  
  from -s dale
  
  In this example, only the message headings of the messages sent
  from user dale are displayed.
  
  3.    To display the message headings in a specific user's mailbox,
  enter:
  
  from dawn
  
  In this example, the message headings from user dawn's mailbox
  are displayed (provided that you have  read  permission  to  user
  Dawn's mailbox).
  
  Implementation Specifics
  
  This command is part of the Base Operating System (BOS) Runtime
  of AIX for RISC System/6000.
  
  Files
  
  /usr/spool/mail/*     System mailboxes for all users
  
  /usr/bin/from User mailbox files
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  file,  mail,  mailbox,  message.
  
   Mail Overview.
  
  Related Information
  
  The  mail command.
  
  
9
  trcupdate Command
  
  
  Purpose
  
  Adds, replaces, or deletes trace report format templates.
  
   Syntax
  
  trcupdate [ -o] [ -tFile] [ -v] [ -xIDList]
  
  Description
  
  The trcupdate command adds, replaces, or deletes trace report
  format templates in /etc/trcfmt.  The trcupdate command creates
  an undo file in the current directory named File.undo.trc.
  
  The trcupdate command adds the extension .trc to the file name
  and reads update commands from that file.  The undo file is input
  to the trcupdate command if the -o (override) flag is specified.
  When the -o flag is specified, the trcupdate command undoes the
  changes previously made to the file.
  
  The first field of each template contains an operator:
  
  +     To add or replace a template.  The field that follows this
  operator contains the template to be replaced.
  
  -     To delete a template.  The second field after this operator con-
  tains the hook  ID  of the template to delete.  Delete operations
  are performed before add, or replace operations.
  
  A sample trace file:
  
  * /etc/trcfmt
  + 15A 1.0 new_fmt
  - 1B3
  - A14
  
  When adding or replacing, the trcupdate command compares the ver-
  sion numbers of each input template  with  the  version number of
  the template with the same hook ID.  If the version number of the
  input  template is later than the version of  the  existing  tem-
  plate, the trcupdate command replaces the old template with the
  input template.  If a template  does  not  exist,  then the input
  template is added to the file.
  
  The trcupdate command will not modify the /etc/trcfmt file if it
  detects a syntax error in the update file.
  
  Flags
  
  -o    Overrides the old template with the input template without ver-
  ifying the version number of either template.
  
  -t File       Specifies a file, instead of /etc/trcfmt, to be used as
  the template file.
  
  -v    Prints the file names as each file is opened.
  
  -x IDList     Extracts the templates specified in the IDList from the
  template file and writes them to standard output.  The IDList
  parameter lists the hook IDs.
  
  Security
  
  Access Control: Only the root user can run this command.
  
  Examples
  
  1.    To add a template, enter:
  
  trcupdate
  * /etc/trcfmt
  + 15A 1.0 new_fmt
  
  2.    To delete a template, enter:
  
  trcupdate
  * /etc/trcfmt
  - 15A 1.0 new_fmt
  
  3.    To replace a template, enter:
  
  trcupdate
  * /etc/trcfmt
  + 15A 1.0 new_fmt
  
  File
  
  /etc/trcfmt   Trace format file.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The  Trace Facility Overview.
  
        The following glossary entries:  ID,  current directory,  delete,
   directory,  field,  file,  filename,  flag,  format,  hook ID, 
  operator,  output,  parameter,  syntax error,  syntax,  template,
   trace.
  
  Related Information
  
  The  trace daemon.
  
  The  trcdead command,  trcrpt command.
  
  The  Trace Facility Overview.
  
  
9
  tar Command
  
  
  Purpose
  
  Manipulates archives.
  
   Syntax
  
  tar { -c |  -r |  -t |  -u |  -x} [ -b Blocks] [ -B] [ -C Direc-
  tory ] [ -d] [ -F] [ -h] [ -i] [ -L InputList] [ -l] [
  -m] [ -N Blocks] [ -p] [ -s] [ -v] [ -w] [-Number] [ -f
  Archive] [ -S Blocksb |  -S Feet | 
  -S Feet @ Density] [File ...  | Directory ...]
  
  Description
  
  The tar command writes files to, or retrieves files from an ar-
  chive storage medium.  The files used by the tar command are
  represented by the File parameter.  The tar command looks for ar-
  chives on the default device (usually  tape),  unless you specify
  another device with the  -f flag.  If you use a relative path
  when specifying the File parameter, the path name must not be
  more the 256 characters, and file names within the path name must
  not be longer than 100 characters and must not contain blanks.
  
  When writing to an archive, the tar command uses a temporary file
  (the /tmp/tar* file) and maintains in memory a table of files
  with several links.  You receive an error message if the tar com-
  mand  cannot  create the temporary file or if there is not enough
  memory available to hold the link tables.
  
  Notes:
  
  1.    When the storage device is an ordinary file or a block special
  file, the  -u and  -r flags backspace.  However, raw magnetic
  tape  devices  do  not  support backspacing.  So when the storage
  device is a raw magnetic tape, the  -u and  -r flags rewind the
  tape, open it, and then read it again.
  
  2.    Records are one block long on block magnetic tape, but they are
  typically  less  than  half  as dense on raw magnetic tape.  As a
  result, although a blocked raw tape must be read twice, the total
  amount of tape motion is less than when reading one-block records
  from a block magnetic tape once.
  
  3.    The structure of a streaming tape device does not support the
  addition of information at the end  of a tape.  Consequently when
  the storage device is a streaming tape, the  -u and  -r flags are
  not valid options.   An attempt to use these flags results in the
  following error message: 
  
  tar: Update and Replace options not valid for a 
  streaming tape drive.
  
  4.    There is no way to ask for any occurrence of a file other than
  the last.
  
  5.    There is no recovery from tape errors.
  
  6.    The transfer of data from a RISC System/6000 to an RT via 150
  MB 1/4-inch cartridge  tape  requires  tape error detection to be
  set to CRC rather than  ECC  before  the  data  is written on the
  tape.  Tape error detection can be modified through smit using
  the following path: <devices> <tape drive> <change/show charac-
  teristics of a tape drive> <150 MB 1/4-inch tape drive> <enable
  ecc> <set to no>.
  
  For more information on using tape devices see the  rmt special
  file.
  
  Flags
  
  You must supply one of the following five function flags to con-
  trol the actions of the tar command:
  
  -c    Creates a new archive and writes the File parameter at the be-
  ginning of the archive.
  
  -r    Writes the File parameter at the end of the archive.  Since the
  structure  of  a streaming tape device does not support the addi-
  tion  of information at the end of a tape, this option is  not  a
  valid flag when the archived storage device is a streaming tape.
  
  -t    Lists the files in the order in which they appear in the ar-
  chive.  Files can be listed more than once.
  
  -u    Adds the File parameter to the end of the archive only if it is
  not in the archive already or if it has been modified since being
  written to the archive.  Since the structure  of a streaming tape
  device does not support the addition of information at the end of
  a tape, this is not a valid flag when the archived storage device
  is a streaming tape.
  
  -x    Extracts the File parameter from the archive.  If you specify
  the Directory parameter, the tar command extracts all files in
  that directory from the archive.  If you do not specify the File
  or Directory parameters, the tar command extracts all of the
  files from the archive.  When an archive contains multiple copies
  of the same file, the tar command extracts only the last one and
  overwrites all earlier  ones.    If you are a user with root user
  authority, the tar command creates all files and directories with
  the same user and group IDs as on the tape.  If you do  not  have
  root user authority, the files and directories have your user and
  group IDs.
  
  The other optional flags to the tar command are listed as fol-
  lows.  Except where otherwise described, a Directory parameter
  refers to all the files and subdirectories,  recursively,  within
  that directory.  Flags without corresponding  parameters  can ap-
  pear separately or be grouped together.   Flags that take parame-
  ters can  have  them adjacent to the flag letter or as the entire
  following argument.
  
  -B    Forces input and output blocking to 20 blocks per record.  With
  this option, the tar command can work across communications chan-
  nels where blocking may not be maintained.
  
  -b Blocks     Specifies the number of 512-byte blocks per record.
  Both  the default and the maximum is 20, which is appropriate for
  tape records.   Due to the size of inter-record gaps, tapes writ-
  ten  with  large  blocking factors can hold much more  data  than
  tapes with only one block per record.
  
  The block size is determined automatically when tapes are read
  (the  -x or  -t function flags).  When archives are updated with
  the  -u and  -r functions, the existing record size is used.  The
  tar command writes archives using the specified value of the
  Blocks parameter only when creating new archives
  with the  -c flag.
  
  For output to ordinary files with the  -f flag, you can save disk
  space by using a blocking factor that matches  the  size  of disk
  blocks (for example, the  -b4 flag for 2048-byte disk blocks).
  Ordinary  files  must be read using the same blocking factor used
  when they are created.
  
  -C Directory  If a file name is preceded by the -C Directory flag,
  the tar command performs a  chdir subroutine to that file name.
  This allows  multiple  directories  not related by a close common
  parent to be archived, using  short relative path names.  For ex-
  ample, to archive files from the /usr/include and /etc
  directories, you might use the following command: tar 
  c -C /usr/include File1 File2 -C /etc File3 File4 This command
  should refer only to absolute  path  names,  which  requires that
  users list each individual file after the -C flag.
  
  -d    Makes separate entries for directories, blocks and character
  special  files, and first-in-first-out  (FIFO)  piped  processes.
  Normally, the tar command writes only ordinary files to an ar-
  chive  and  extracts only ordinary files and the directories  re-
  quired to contain them as determined by the path names in the ar-
  chive.  When writing to an archive with the -d flag, the tar com-
  mand makes it possible to preserve the directory permission codes
  and to restore empty directories,  special  files,  and first-in-
  first-out (FIFO) piped processes with the  -x flag.
  
  Note: Although anyone can archive special files, only a user with
  root user authority can extract them from an archive.
  
  -F    Checks the file type before archiving.  Source Code Control
  Systems (SCCS), Revision Control Systems (RCS), files named core,
  errs, a.out, and files ending in .o (dot o) are not archived.
  
  -f Archive    Uses the Archive parameter as the archive to be read or
  written.  When this flag is not specified, the tar command uses a
  system-dependent default file name of the form /dev/rmt0.  If the
  Archive parameter specified is - (minus), the tar command writes
  to standard output or reads from standard input.  If you write to
  standard output, the  -c flag must be used.
  
  -h    Forces the tar command to follow symbolic links as if they were
  normal files or directories.  Normally, the tar command does not
  follow symbolic links.
  
  -i    Ignores header checksum errors.  The tar command writes a file
  header containing a checksum  for each file in the archive.  When
  this flag is not  specified,  the system verifies the contents of
  the header blocks by  recomputing  the  checksum and stops with a
  directory checksum error when a mismatch occurs.  When this  flag
  is specified, the tar command logs the error and then scans for-
  ward until it finds a valid header block.  This permits restoring
  files from later volumes of a multi-volume archive  without read-
  ing earlier volumes.
  
  -L InputList  Writes the files listed in the InputList parameter to
  the archive.  The InputList parameter should contain one file
  name per line.  Files and directories from the InputList parame-
  ter are treated recursively.  If you include the name of a direc-
  tory in the InputList parameter, the tar command writes the
  directory  to the archive as well as the files and subdirectories
  to the archive.  If you also list files  or  directories  on  the
  command line, the contents of the InputList parameter are includ-
  ed after the tar command has written all the files or the direc-
  tories and their subdirectories to the archive.
  
  -l    Writes error messages to standard output if the tar command
  cannot  resolve all of the links to the archived files.  When you
  do not specify this  flag, the system does not display these mes-
  sages.
  
  -m    Uses the time of extraction as the modification time.  The de-
  fault is to preserve the modification time of the files.
  
  -N Blocks     Allows the tar command to use very large clusters of
  blocks when it deals with streaming tape archives.  Note however,
  that on input, the tar command cannot automatically determine the
  block size of tapes with very long block sizes created with  this
  flag.  In the absence of a -N Blocks flag, the largest block size
  that the tar command can automatically determine is 20 blocks.
  
  -p    Says to restore fields to their original modes, ignoring the
  present umask.  The setuid permissions and sticky information are
  also restored to the user with root user authority.
  
  -s    Tries to create a symbolic link If the tar command is unsuc-
  cessful in its attempt to link (regular link) two files with  the
  -s flag.
  
  -S Blocksb, -S Feet, -S Feet @Density Specifies the number of 512-
  byte blocks  per  volume  (first format), independent of the tape
  blocking factor.  You  can  also  specify the size of the tape in
  feet by using the second form, in which case the tar command as-
  sumes a default Density parameter.  The third form allows you to
  specify  both tape length and density.  Feet are assumed to be 11
  inches  long to be conservative.  This flag lets  you  deal  more
  easily with multi-volume tape archives, where the tar command
  must be able to determine how many blocks fit on each volume.
  
  Note: Tape drives vary in density capabilities.  The Density
  parameter calculates the amount of data  a  system  can  fit on a
  tape.
  
  -v    Lists the name of each file as it is processed.  With the  -t
  flag, -v gives more information about the tape entries, including
  file sizes, times of last modification, User Number (UID),  Group
  Number (GID), and permissions.
  
  -w    Displays the action to be taken, followed by the file name, and
  then waits for user confirmation.   If the response begins with a
  y or Y, the action is performed.  If the
  response is not affirmative, the file is ignored.
  
  -Number       Uses the /dev/rmt number file instead of the default.  For
  example, the -2 flag is the same as -f/dev/rmt2 file.  In AIX
  systems with multi-density tape  drive this flag allows select-
  ing a particular density.
  
  Examples
  
  1.    To write the file1 and file2 files to a new archive on the de-
  fault tape drive, enter:
  
  tar -c file1 file2
  
  2.    To extract all files in the /tmp directory from the archive
  file on the /dev/rmt2 tape device and use the time of extraction
  as the modification time, enter:
  
  tar -xm -f/dev/rmt2 /tmp
  
  3.    To create a new archive file that contains the file1 file and
  pass the archive file to the dd command to be written to
  the /dev/rmt1 device, enter:
  
  tar -cvf - file1 | dd of=/dev/rmt1
  
  4.    To display the names of the files in the out.tar disk archive
  file on the current directory, enter:
  
  tar -vtf out.tar
  
  5.    To expand the fil.tar.z compressed archive file, to pass the
  file to the tar command, and extract all files from the expanded
  archive file, enter:
  
  cat fil.tar.z | tar -xvf -
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Japanese Language Support Information
  
  An affirmative response in Japanese Language Support matches one
  of the elements in the  YESSTR environment variable.
  
  Files
  
  /dev/rmt0     Default tape device.
  
  /bin/tar      The tar command.
  
  /usr/bin/tar  Symbolic link to the tar command.
  
  /tmp/tar*     Temporary file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  block special file,  streaming
  tape drive,  pipe,  . (dot),  symbolic link,  checksum,  umask, 
  setuid permissions,  user number (UID).
  
        The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
        The  Directories Overview explains working with directories and
  path names.
  
        The  Files Overview provides information on working with files.
  
  Related Information
  
  The  dd command,  cat command.
  
  The  rmt special file.
  
  The  File Systems Overview explains file system types, manage-
  ment, structure, and maintenance.
  
  The  Directories Overview explains working with directories and
  path names.
  
  The  Files Overview provides information on working with files.
  
  
9
  4014 Command
  
  
  Purpose
  
  Formats a full-page, 66-line screen display for a Tektronix 4014
  workstation.
  
   Syntax
  
  4014 [  -t |  -c Number |  -n ] [  -p Number [ I | i ] ] [ File ]
  
  Description
  
  The 4014 command reads File (standard input by default) and
  writes  a  66-line  page  display  to standard output.   It  also
  divides the screen  into a specified number of columns, adding an
  eight-space  page  offset  when it uses the default single-column
  format.   It interprets tabs, spaces,  backspaces,  and  TELETYPE
  Model 37 half-line and reverse-line sequences  correctly.  At the
  end of each page, the 4014 command waits for a line feed from the
  keyboard before continuing.  While the 4014 command is waiting,
  you can send commands to the shell by entering !AIX-Cmd, where
  AIX-Cmd is an AIX for RISC System/6000 command.
  
  Flags
  
  -cNumber      Divides the screen into Number columns and waits after
  the  last  column.    The  default is a single,  full  page-width
  column.
  
  -n    Starts displaying at the current cursor position and does not
  erase the screen.
  
  -pNumber      Sets page length to Number lines (l, the default) or to
  Number inches (i).
  
  -t    Does not wait between pages.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /etc/passwd   Password file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  standard input,  standard output,  workstation.
  
  Related Information
  
  The  pr command,  tc command,  troff command.
  
  
9
  hconutil Command
  
  
  Purpose
  
  Starts the HCON Utility Program.
  
   Syntax
  
  hconutil [  -c ColorInputFile ] [  -k KeyboardInputFile ] [ 
  -C ColorOutputFile ] [ 
  -K KeyboardOutputFile ]
  
  Description
  
  The hconutil command starts the HCON Utility Program, which al-
  lows users to perform various productivity functions.   Users can
  redefine  the  HCON color and keyboard definition tables, perform
  explicit file transfer requests, logon  to  and  logoff of active
  HCON sessions,  and add, modify, or display AUTOLOG scripts using
  the  genprof command.
  
  The hconutil command can be invoked from the command line or by
  using  the  HCONUTIL  key  from within the HCON emulator.  If the
  utility  is invoked from the emulator, it uses the color and key-
  board files defined  in the session profile as the input and out-
  put files.  When invoked from  the command line, the utility uses
  the definition files specified by the -c, -C, -k, and -K flags.
  The system prompts the user  for  all other information needed to
  perform file transfer requests, logon to or logoff of active HCON
  sessions, and add, modify, or display AUTOLOG scripts.
  
  Flags
  
  -c ColorInputFile     Names the valid color definition file to be used
  as input for the utility.    If  an  input file is not specified,
  then the default file  /usr/lib/hcon/e789_ctbl is used.
  
  -k KeyboardInputFile  Names the valid keyboard definition file to
  be used as input for the utility.  If an input file is not speci-
  fied, then the default file  /usr/lib/hcon/e789_ktbl is used.
  
  -C ColorOutputFile    Names the color definition output file.  If an
  output  file  is not specified, the new color table is stored  in
  the $HOME/e789_ctbl file.
  
  -K KeyboardOutputFile Names the keyboard definition output file.
  If  an  output file is not specified, the new keyboard  table  is
  stored in the $HOME/e789_ktbl file.
  
  Note: If the utility is invoked from within the HCON emulator, it
  uses the color and keyboard files defined  in the session profile
  as the input and output files.
  
  Examples
  
  1.    To start the HCON utility from the command line, enter:
  
  hconutil
  
  The HCON Utility Program is started with the default tables for
  color and keyboard definitions.
  
  2.    To use a different keyboard table with the HCON Utility Pro-
  gram, enter:
  
  hconutil -k /u/kaye/keyboard1 -K /u/kaye/keyboard2
  
  The utility reads the /u/kaye/keyboard1 file for the original
  keyboard   settings   and   writes   the   new  settings  to  the
  /u/kaye/keyboard2 file.
  
  Implementation Specifics
  
  This command is part of IBM AIX 3270 Host Connection Program/6000
  (HCON).
  
  Files
  
  /usr/bin directory    Contains the hconutil command.
  
   /usr/lib/hcon directory      Contains HCON files.
  
  /usr/lib/hcon/ e789_ctbl file Contains the default binary color
  definition table.
  
  /usr/lib/hcon/ e789_ktbl file Contains the default binary keyboard
  definition table.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  emulator,  HCON.
  
   Using the HCON Utility Program describes the HCON utility
  screens and  function  keys and discusses the uses of the utility
  program.
  
  Related Information
  
  The  e789 command initiates display and printer emulation ses-
  sions.  Use the  fxfer command to perform file transfers.  Use
  the  genprof command to add, modify, or display AUTOLOG scripts.
  The  tlog command tests AUTOLOG scripts.
  
   Understanding HCON File Transfers discusses the fxfer command
  and file transfer procedures.
  
   Customizing HCON Color and Keyboard Tables provides information
  about using the hconutil command for color and keyboard customi-
  zation.
  
   Understanding HCON Host Logon Procedures outlines automatic and
  manual logon procedures.
  
  
9
  tic Command
  
  
  Purpose
  
  Translates the terminfo files from source to compiled format.
  
   Syntax
  
  tic
  
  Description
  
  The tic command translates the terminfo files from the source
  format into the compiled format.  The tic command places the
  results in the /usr/lib/terminfo directory.  If the TERMINFO en-
  vironment variable is set, the  results  are placed there instead
  of in /usr/lib/terminfo directory.
  
  The tic command compiles all terminfo descriptions in Files.
  When the tic command finds a use= field, it searches first the
  current file, then the.  /terminfo.src master file.
  
  The total compiled entries cannot exceed 4096 bytes and the name
  field cannot exceed 128 bytes.
  
  Flag
  
  -vNumber      Writes trace information on the progress of the tic com-
  mand. Number is an integer that increases the level of
  the verbosity.
  
  File
  
  /usr/lib/terminfo/?/* Compiled terminal capability database.
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Suggested Reading
  
  
  
  Related Information
  
  The  curses subroutine library.
  
  The  terminfo file.
  
  
9
  cut Command
  
  
  Purpose
  
  Writes out selected fields from each line of a file.
  
   Syntax
  
  cut {  -cList |  -fList [  -s  -dCharacter ]} [File ...]
  
  Description
  
  The cut command cuts columns from a table or fields from each
  line of a file, and writes  these  columns  or fields to standard
  output.  If you do not specify a file name, the cut command reads
  standard input.
  
  You must specify either the  -c or  -f flag.  The List parameter
  is a comma-separated and/or minus-separated list of integer field
  numbers (in increasing order).    The  minus  separator indicates
  ranges.  Some sample List parameters are 1,4,7; 1-3,8; -5,10
  (short for 1-5,10); and 3- (short for third through last
  field).  The fields specified by the List parameter can be a
  fixed number of character positions, or the length  can vary from
  line to line and be marked with a field delimiter character, such
  as a tab character.
  
  You can also use the  grep command to make horizontal cuts
  through a file and the  paste command to put the files back to-
  gether.  To change the order of columns in a file use the cut and
  the paste commands.
  
  Flags
  
  -cList        Specifies character positions.  For example, if you specify
  -c1-72, the cut command writes out the first 72 characters in
  each line of the file.  Note that there is no space between -c
  and the List parameter.
  
  -dCharacter   Uses the character specified by the Character parame-
  ter as the field delimiter when you specify the  -f flag.  You
  must  put  quotation marks around characters with special meaning
  to the shell, such as the space character.
  
  -fList        Specifies a list of fields assumed to be separated in the
  file  by a delimiter character, which is by default the tab char-
  acter.  For example, if you specify -f1,7, the cut command writes
  out  only  the  first and seventh fields of each line.  If a line
  contains no field delimiters, the cut command passes them through
  intact (useful for table subheadings), unless you specify the  -s
  flag.
  
  -s    Suppresses lines that do not contain delimiter characters (use
  only with the  -f flag).
  
  Example
  
  To display several fields of each line of a file:
  
  cut -f1,5 -d: /etc/passwd
  
  This displays the login name and full user name fields of the
  system  password  file.   These are the first  and  fifth  fields
  (-f1,5) separated by colons (-d:).
  
  For example, if the /etc/passwd file looks like this:
  
  su:*:0:0:User with special privileges:/:/bin/sh
  daemon:*:1:1::/etc:
  bin:*:2:2::/bin:
  sys:*:3:3::/usr/src:
  adm:*:4:4:System Administrator:/usr/adm:/bin/sh
  pierre:*:200:200:Pierre Harper:/u/pierre:/bin/sh
  joan:*:202:200:Joan Brown:/u/joan:/bin/sh
  
  the cut command produces:
  
  su:User with special privileges
  daemon:
  bin:
  sys:
  adm:System Administrator
  pierre:Pierre Harper
  joan:Joan Brown
  
  Implementation Specifics
  
  Japanese Language Support Information: Character can either be
  any ASCII character, or any SJIS character.
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  File
  
  /bin/cut      cut command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entries:  standard input,  standard out-
  put, and  shell.
  
         Files Overview describes what files are and how they are stored
  by the operating system.
  
        The  Input and Output Overview describes how to redirect input
  and output.
  
  Related Information
  
  The grep command,  paste command, and  sh command.
  
  
9
  logname Command
  
  
  Purpose
  
  Displays login name.
  
   Syntax
  
  logname
  
  Description
  
  The logname command will dsplay the login name of the current
  process.  This is the same name that the user used login with and
  corresponds to the LOGNAME in the system state environment.  This
  variable is only set when the user logs into the system.
  
  The logname command will fail if the specified user does not ex-
  ist or if it cannot read the user or group information.
  
  Security
  
  
  
  Installation:
  
  Access Control: This program is installed as a normal user pro-
  gram in the Trusted Computing Base..
  
  Example
  
  To display your login name to standard output, type:
  
  logname
  
  Implementation Specifics
  
  This command is part of AIX Base Operating System (BOS) Runtime.
  
  Files
  
  /etc/profile  System profile.
  
  /bin/logname  logname command.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
        The following glossary entry:  standard output.
  
  Related Information
  
  The  getty command, the  login command, the  setgroups command,
  the  setsenv command, the  su command, and the  tsm command.
  
  
  
  
9
  mksnmppw Command
  
  
  Purpose
  
  Produces a binary encrypted object file for use by the SNMP agent
  daemon.
  
   Syntax
  
  mksnmppw  File
  
  Description
  
  The mksnmppw command processes the records in the file specified
  by the File parameter to produce a binary encrypted object file
  for use by the SNMP agent daemon.    The  output  file  is always
  named /etc/snmpd.pw.
  
  The  smpl.pwinput file provides a sample input file to the
  mksnmppw command.  The purpose of encryption is
  to  permit  a  single host to administer the creation and network
  distribution of the /etc/snmpd.pw file to one or more agent
  hosts.
  
  Note: For further information, see RFC 1098, which defines the
  SNMP protocol for creating requests for MIB information  and for-
  matting responses.
  
  Parameter
  
  File  Specifies the source file that contains the information to be
  encrypted.
  
  Implementation Specifics
  
  This command is part of Simple Network Management Protocol Agent
  Applications in Network  Support Facilities in AIX Base Operating
  System (BOS) Runtime.
  
  Files
  
  /usr/lpp/snmpd/smpl.pwinput   Sample input file shipped with the
  SNMP agent daemon
  
  /etc/snmpd.pw Encrypted binary resource file.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
         Understanding the Simple Network Management Protocol (SNMP), 
  Understanding the SNMP Daemon.
  
        xgmon  Overview for Programmers.
  
  Related Information
  
  The  snmpd command.
  
  The  smpl.pwinput file.
  
  
10
  bootparamd Daemon
  
  
  Purpose
  
  Provides information necessary for booting to diskless clients.
  
   Syntax
  
  /usr/etc/rpc.bootparamd [  -d ]
  
  Description
  
  The bootparamd daemon is a server process that provides informa-
  tion  necessary for booting to diskless clients.  It consults ei-
  ther the bootparams database or the /etc/bootparams file if the
  NIS service is not running.
  
  Flags
  
  -d    Displays the debugging information.
  
  Implementation Specifics
  
  This daemon is part of NFS in Network Support Facilities in Base
  Operating System Runtime.
  
  File
  
   /etc/bootparams      Contains the list of client entries that diskless
  clients use for booting.
  
  Suggested Reading
  
  
  
  Prerequisite Information
  
  Glossary Terms:  client,  server.
  
  For more information about NFS, see  Network File System (NFS)
  Overview for System Management.
  
  Related Information
  
   Alphabetical List of NFS and NIS Daemons and Commands,  Func-
  tional List of NFS and NIS Daemons and Commands.
  
  

