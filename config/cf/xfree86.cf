XCOMM $XFree86: xc/config/cf/xfree86.cf,v 3.117 1996/10/19 15:12:31 dawes Exp $
/*
 * This configuration file contains all of the configuration
 * information for the XFree86 based X Servers.
 *
 * Most of these settings can be overridden in a vendor.cf or the
 * BeforeVendor part of the site.def file.
 */
XCOMM $TOG: xfree86.cf /main/38 1997/10/22 13:01:59 kaleb $

/*
 * The LinkKit needs to inherit some settings (from the xc build that
 * generated it) before we go too much further...
 */
#ifndef XF86LinkKit
#define XF86LinkKit	NO
#endif
#if XF86LinkKit
#include <LinkKit.tmpl>
#endif

/*
 * Default settings for which X Servers to build.
 */
#ifndef XF86SVGAServer
# define XF86SVGAServer		YES
#endif

#ifndef XF86VGA16Server
# define XF86VGA16Server	NO
# ifndef XF86VGA16DualServer
#  define XF86VGA16DualServer	NO
# endif
#endif

#ifndef XF86MonoServer
# define XF86MonoServer		NO
# ifndef XF86MonoDualServer
#  define XF86MonoDualServer	NO
# endif
#endif

#ifndef XF86S3Server
# define XF86S3Server		NO
#endif

#ifndef XF86S3VServer
# define XF86S3VServer		NO
#endif

#ifndef XF86I8514Server
# define XF86I8514Server	NO
#endif

#ifndef XF86Mach8Server
# define XF86Mach8Server	NO
#endif

#ifndef XF86Mach32Server
# define XF86Mach32Server	NO
#endif

#ifndef XF86Mach64Server
# define XF86Mach64Server	NO
#endif

#ifndef XF86AGXServer
# define XF86AGXServer		NO
#endif

#ifndef XF86P9000Server
# define XF86P9000Server	NO
#endif

#ifndef XF86W32Server
# define XF86W32Server		NO
#endif

#ifndef XF86I128Server
# define XF86I128Server		NO
#endif

#ifndef XF86TGAServer
# define XF86TGAServer		NO
#endif

#if XF86S3Server
# define XF86S3Dir		s3
#else
# define XF86S3Dir		/**/
#endif

#if XF86S3VServer
# define XF86S3VDir		s3_virge
#else
# define XF86S3VDir		/**/
#endif

#if XF86I8514Server
# define XF86I8514Dir		ibm8514
#else
# define XF86I8514Dir		/**/
#endif

#if XF86Mach8Server
# define XF86Mach8Dir		mach8
#else
# define XF86Mach8Dir		/**/
#endif

#if XF86Mach32Server
# define XF86Mach32Dir		mach32
#else
# define XF86Mach32Dir		/**/
#endif

#if XF86Mach64Server
# define XF86Mach64Dir		mach64
#else
# define XF86Mach64Dir		/**/
#endif

#if XF86P9000Server
# define XF86P9000Dir		p9000
#else
# define XF86P9000Dir		/**/
#endif

#if XF86AGXServer
# define XF86AGXDir		agx
#else
# define XF86AGXDir		/**/
#endif

#if XF86W32Server
# define XF86W32Dir		et4000w32
#else
# define XF86W32Dir		/**/
#endif

#if XF86I128Server
# define XF86I128Dir		i128
#else
# define XF86I128Dir		/**/
#endif

#if XF86TGAServer
# define XF86TGADir		tga
#else
# define XF86TGADir		/**/
#endif

#ifndef XF98GANBWAPServer
# define XF98GANBWAPServer	NO	
#endif

#ifndef XF98NEC480Server
# define XF98NEC480Server	NO
#endif

#ifndef XF98NKVNECServer
# define XF98NKVNECServer	NO
#endif

#ifndef XF98WABSServer
# define XF98WABSServer		NO	
#endif

#ifndef XF98SVGAServer
# define XF98SVGAServer		NO	
#endif

#ifndef XF98TGUIServer
# define XF98TGUIServer		NO
#endif

#ifndef XF98EGCServer
# define XF98EGCServer		NO
#endif

#ifndef XF98NECS3Server
# define XF98NECS3Server	NO	
#endif

#ifndef XF98PWSKBServer
# define XF98PWSKBServer	NO
#endif

#ifndef XF98PWLBServer
#define XF98PWLBServer		NO
#endif

#if XF98NECS3Server
# define XF98NECS3Dir		s3nec
#else
# define XF98NECS3Dir		/**/
#endif

#if XF98PWSKBServer
# define XF98PWSKBDir		s3pwskb
#else
# define XF98PWSKBDir		/**/
#endif

#if XF98PWLBServer
# define XF98PWLBDir		s3pwlb
#else
# define XF98PWLBDir		/**/
#endif

#undef XF86AccelServerDirs
#define XF86AccelServerDirs	XF86S3Dir XF86S3VDir XF86I8514Dir \
				XF86Mach8Dir XF86Mach32Dir XF86Mach64Dir \
				XF86P9000Dir XF86AGXDir XF86W32Dir \
				XF86I128Dir XF86TGADir

#undef XF86AccelServer
#if XF86S3Server || XF86S3VServer || XF86I8514Server || XF86Mach8Server || \
    XF86Mach32Server || XF86Mach64Server || XF86P9000Server || \
    XF86AGXServer || XF86W32Server || XF86I128Server || XF86TGAServer
# define XF86AccelServer	YES
#else
# define XF86AccelServer	NO
#endif

#undef XF98AccelServerDirs
#define XF98AccelServerDirs   XF98NECS3Dir XF98PWSKBDir XF98PWLBDir

#undef XF98AccelServer
#if XF98NECS3Server || XF98PWSKBServer || XF98PWLBServer
# define XF98AccelServer	YES
#else
# define XF98AccelServer	NO
#endif

/*
 * Driver list for several of the X Servers.
 */
#ifndef XF86SvgaDrivers
# define XF86SvgaDrivers	nv et4000 et3000 pvga1 gvga ati sis tvga8900 \
				cirrus ncr77c22 /*compaq*/ mga oak mx al2101 \
				ali cl64xx video7 chips ark realtek apm \
				s3_svga generic
#endif

#ifndef XF98SvgaDrivers
# define XF98SvgaDrivers	generic
#endif

#ifndef XF86Vga16Drivers
# define XF86Vga16Drivers	et4000 ncr77c22 ati sis tvga8900 oak cl64xx \
				generic
#endif

#ifndef XF98Vga16Drivers
# define XF98Vga16Drivers	generic
#endif

#ifndef XF86Vga2Drivers
# define XF86Vga2Drivers	et4000 et3000 pvga1 gvga ati sis tvga8900 \
				cirrus ncr77c22 /*compaq*/ oak cl64xx generic
#endif

#ifndef XF86Vga2Banked
# define XF86Vga2Banked		YES
#endif

#ifndef XF86MonoDrivers
# define XF86MonoDrivers	hgc1280 sigma apollo /*hercules*/
#endif

/* This doesn't do anything (yet) */
#ifndef XF86S3Drivers
# if !defined(AlphaArchitecture)
#  define XF86S3Drivers		newmmio mmio_928 s3_generic
# else
#  define XF86S3Drivers		mmio_928 s3_generic newmmio
# endif
#endif

#ifndef XF86S3VDrivers
# define XF86S3VDrivers		s3_virge
#endif

#ifndef XF86W32Drivers
# define XF86W32Drivers		et4000w32
#endif

#ifndef XF98S3Drivers
# define XF98S3Drivers		mmio_928 s3_generic
#endif

/*
 * By default, build all of the fonts.
 */
#ifndef Build75Dpi
#define Build75Dpi		YES
#endif
#ifndef Build100Dpi
#define Build100Dpi		YES
#endif
#ifndef BuildSpeedo
#define BuildSpeedo		YES
#endif
#ifndef BuildType1
#define BuildType1		YES
#endif

#ifndef BuildScanpci
#if SystemV || SystemV4 || (defined(LinuxArchitecture) && !defined(Mc68020Architecture)) || defined(i386BsdArchitecture) || defined(LynxOSArchitecture) || defined(OS2Architecture)
#define BuildScanpci		YES
#else
#define BuildScanpci		NO
#endif
#endif

#ifndef BuildXF86DGA
#define BuildXF86DGA		NO
#endif

#ifndef CompressAllFonts
#define CompressAllFonts	YES
#endif

#ifndef HasLinuxDoc
#define HasLinuxDoc		NO
#endif

#ifndef InstallJapaneseDocs
#define InstallJapaneseDocs	NO
#endif

#if BuildXF86DGA
#define XFree86DGADefines	-DXFreeXDGA
#else
#define XFree86DGADefines	/**/
#endif

/* Server defines required for all OSs */
#ifndef XFree86ServerDefines
#define XFree86ServerDefines	-DSTATIC_COLOR -DAVOID_GLYPHBLT -DPIXPRIV LinkKitDefines XFree86DGADefines
#endif

#ifndef XFree86ServerOSDefines
#define XFree86ServerOSDefines	-DDDXOSINIT -DSERVER_LOCK
#endif

#ifndef XFree86ConsoleDefines
#ifdef i386BsdArchitecture
#define XFree86ConsoleDefines	-DPCCONS_SUPPORT -DSYSCONS_SUPPORT -DPCVT_SUPPORT
#else
#define XFree86ConsoleDefines	/**/
#endif
#endif

#ifndef UseServerLock
#define UseServerLock	YES
#endif

#ifndef XF86LinkKit
#define XF86LinkKit	NO
#endif

#if XF86LinkKit
/*
 * Definitions for LinkKit self-containment.  This should work whether or not
 * UseInstalled is defined.
 */
# ifndef HasLdRunPath
#  define HasLdRunPath        NO
# endif

# ifndef TopIncludes
#  ifdef IncRoot
#   define TopIncludes        -I$(INCROOT)
#  else
#   define TopIncludes        /**/
#  endif
# endif
# ifndef ClientLibDir
#  if defined(UsrLibDir) || HasLdRunPath
#   define ClientLibDir       /**/
#  else
#   define ClientLibDir       -L$(USRLIBDIR)
#  endif
# endif
# ifndef LdPreLib
#  if defined(LdPostLib) && defined(UsrLibDir) && !HasLdRunPath
#   define LdPreLib   -L$(USRLIBDIR)
#  else
#   define LdPreLib   /**/
#  endif
# endif
# ifndef LdPostLib
#  if defined(UsrLibDir) && !HasLdRunPath
#   define LdPostLib  -L$(USRLIBDIR)
#  else
#   define LdPostLib  /**/
#  endif
# endif

#endif

#ifndef LinkKitDefines
#if XF86LinkKit
#define LinkKitDefines	-DLINKKIT
#else
#define LinkKitDefines	/**/
#endif
#endif

#ifndef ServerExtraDefines
#define ServerExtraDefines	XFree86ServerDefines
#endif

#ifndef ServerOSDefines
#define ServerOSDefines		XFree86ServerOSDefines
#endif

#ifndef LinkKitDir
#define LinkKitDir	$(USRLIBDIR)/Server
#endif

LINKKITDIR = LinkKitDir
XF98LINKKITDIR = LinkKitDir

#ifndef HasDlsymBug
#define HasDlsymBug		NO
#endif

/*
 * Some commonly refered to directories are defined here.
 */

#if XF86LinkKit
       XF86SRC = $(TOP)
  XF86ACCELSRC = $(XF86SRC)/lib86
    XF86COMSRC = $(XF86SRC)/lib86
 XF86CONFIGSRC = $(XF86SRC)
     XF86HWSRC = $(XF86SRC)/lib86
     XF86OSSRC = $(XF86SRC)/lib86
     DRIVERSRC = $(XF86SRC)/drivers
  VGADRIVERSRC = $(XF86SRC)/drivers/vga256
VGA16DRIVERSRC = $(XF86SRC)/drivers/vga16
 VGA2DRIVERSRC = $(XF86SRC)/drivers/vga2
 MONODRIVERSRC = $(XF86SRC)/drivers/mono
   S3DRIVERSRC = $(XF86SRC)/drivers/s3
  S3VDRIVERSRC = $(XF86SRC)/drivers/s3_virge

           XF98SRC = $(TOP)
      XF98ACCELSRC = $(XF98SRC)/lib98
        XF98COMSRC = $(XF98SRC)/lib98
     XF98CONFIGSRC = $(XF98SRC)
         XF98HWSRC = $(XF98SRC)/lib98
      XF98HWNECSRC = $(XF98SRC)/lib98
    XF98HWPWSKBSRC = $(XF98SRC)/lib98
     XF98HWPWLBSRC = $(XF98SRC)/lib98
    XF98HWGA968SRC = $(XF98SRC)/lib98
         XF98OSSRC = $(XF98SRC)/lib98
     XF98DRIVERSRC = $(XF98SRC)/drivers98
  XF98VGADRIVERSRC = $(XF98SRC)/drivers98/vga256
XF98VGA16DRIVERSRC = $(XF98SRC)/drivers98/vga16
 XF98VGA2DRIVERSRC = $(XF98SRC)/drivers98/vga2
 XF98MONODRIVERSRC = $(XF98SRC)/drivers98/mono
XF98NECS3DRIVERSRC = $(XF98SRC)/drivers98/s3nec
XF98PWSKBDRIVERSRC = $(XF98SRC)/drivers98/s3pwskb
 XF98PWLBDRIVERSRC = $(XF98SRC)/drivers98/s3pwlb
XF98GA968DRIVERSRC = $(XF98SRC)/drivers98/s3ga968

#ifdef SiteIConfigFiles
#undef SiteIConfigFiles
#endif
#define SiteIConfigFiles $(TOP)/xf86site.def $(TOP)/Imakefile $(IRULESSRC)/host.def
#else
       XF86SRC = $(SERVERSRC)/hw/xfree86
  XF86ACCELSRC = $(XF86SRC)/accel
    XF86COMSRC = $(XF86SRC)/common
 XF86CONFIGSRC = $(XF86COMSRC)
     XF86HWSRC = $(XF86SRC)/common_hw
     XF86OSSRC = $(XF86SRC)/os-support
  VGADRIVERSRC = $(XF86SRC)/vga256/drivers
VGA16DRIVERSRC = $(XF86SRC)/vga16/drivers
 VGA2DRIVERSRC = $(XF86SRC)/vga2/drivers
 MONODRIVERSRC = $(XF86SRC)/mono/drivers
   S3DRIVERSRC = $(XF86SRC)/accel/s3/drivers
  S3VDRIVERSRC = $(XF86SRC)/accel/s3_virge/drivers

           XF98SRC = $(SERVERSRC)/hw/xfree98
      XF98ACCELSRC = $(XF98SRC)/accel
        XF98COMSRC = $(XF98SRC)/common
     XF98CONFIGSRC = $(XF98COMSRC)
         XF98HWSRC = $(XF98SRC)/common_hw/generic
      XF98HWNECSRC = $(XF98SRC)/common_hw/nec
    XF98HWPWSKBSRC = $(XF98SRC)/common_hw/pwskb
     XF98HWPWLBSRC = $(XF98SRC)/common_hw/pwlb
         XF98OSSRC = $(XF98SRC)/os-support
  XF98VGADRIVERSRC = $(XF98SRC)/vga256/drivers
XF98VGA16DRIVERSRC = $(XF98SRC)/vga16/drivers
 XF98VGA2DRIVERSRC = $(XF98SRC)/vga2/drivers
 XF98MONODRIVERSRC = $(XF98SRC)/mono/drivers
XF98NECS3DRIVERSRC = $(XF98SRC)/accel/s3nec/drivers
XF98PWSKBDRIVERSRC = $(XF98SRC)/accel/s3pwskb/drivers
 XF98PWLBDRIVERSRC = $(XF98SRC)/accel/s3pwlb/drivers
#endif

/*
 * Installed location of the XFree86 documentation
 */

        XFREE86DOCDIR = $(LIBDIR)/doc
      XFREE86PSDOCDIR = $(XFREE86DOCDIR)/PostScript
    XFREE86HTMLDOCDIR = $(XFREE86DOCDIR)/html
XFREE86JAPANESEDOCDIR = $(XFREE86DOCDIR)/Japanese

/*
 * Other stuff used in the X Server source.
 */

#ifndef AsmDefines
#define AsmDefines /**/
#endif

#ifndef XFree86Version
#define XFree86Version	3310
#endif

#ifndef XVendorString
#define XVendorString	"The Open Group / The XFree86 Project, Inc"
#endif

#if 0
#ifndef XVendorRelease
#define XVendorRelease	XFree86Version
#endif
#endif

#ifndef UseRgbTxt
#define UseRgbTxt	YES
#endif


/*
 * GNU Compiler stuff
 */
#ifndef HasGcc2
#define HasGcc2 NO
#endif
#ifndef HasGcc
#define HasGcc HasGcc2
#endif
#ifndef HasGcc2ForCplusplus
#define HasGcc2ForCplusplus HasGcc2
#endif

#if HasGcc
#ifndef DefaultCCOptions
#ifdef UseInstalled
#define DefaultCCOptions -ansi
#else
#define DefaultCCOptions -ansi -pedantic
#endif
#endif
#endif

#if HasGcc2 && (defined(i386Architecture) || defined(AMD64Architecture))
#ifndef DefaultGcc2i386Opt
#define DefaultGcc2i386Opt -O2 -fno-strength-reduce
#endif
#endif

#ifndef BuildLBXCompatible
#define BuildLBXCompatible NO
#endif

#if BuildLBXCompatible
#define LbxDefines -DLBX_COMPAT
#endif

#define VidTuneExtensionDefines -DXF86VIDMODE

#include <xf86.rules>
