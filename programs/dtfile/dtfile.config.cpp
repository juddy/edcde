XCOMM $XConsortium: dtfile.config.cpp /main/4 1996/10/08 11:57:49 mustafa $
XCOMM #########################################################################
XCOMM  -----------------------------------------------------------------------
XCOMM  dtfile.config
XCOMM  -------------
XCOMM
XCOMM (c) Copyright 1996 Digital Equipment Corporation.
XCOMM (c) Copyright 1993,1994,1996 Hewlett-Packard Company.
XCOMM (c) Copyright 1993,1994,1996 International Business Machines Corp.
XCOMM (c) Copyright 1993,1994,1996 Sun Microsystems, Inc.
XCOMM (c) Copyright 1996 Novell, Inc. 
XCOMM (c) Copyright 1996 FUJITSU LIMITED.
XCOMM (c) Copyright 1996 Hitachi.
XCOMM (c) Copyright 1993, 1994 Unix System Labs, Inc., a subsidiary of
XCOMM     Novell, Inc.
XCOMM
XCOMM  Configuration file for the dt File Manager.
XCOMM
XCOMM  This file enables dialogs which can be used to edit
XCOMM  file-system specific parameters, for example Access
XCOMM  Control Lists for Andrew File System directories.
XCOMM  Additional information is in the man page dtfile_config.
XCOMM
XCOMM  The file consists of two sections.  The first section
XCOMM  maps platform-specific information to a platform-independent
XCOMM  identifier. There are two fields in the platform-specific
XCOMM  portion separated by a colon.  The first field identifies
XCOMM  the platform: aix, hpux, sunos.  The second field depends
XCOMM  on platform; for aix it is an integer corresponding to the
XCOMM  st_vfstype field returned by stat, for hpux it is an integer
XCOMM  corresponding to the f_fsid[1] field returned by statfs, for
XCOMM  sunos it is a string corresponding to the f_basetype field
XCOMM  returned by statvfs.  The platform-independent identifier
XCOMM  is given following an equals sign.  The keyword "end" delimits
XCOMM  the list of mappings.  For example, to define the "native"
XCOMM  file systems on several platforms:
XCOMM
XCOMM  aix:3       = native
XCOMM  hpux:0      = native
XCOMM  sunos:ufs   = native
XCOMM  decunix:ufs = native
XCOMM  end
XCOMM
XCOMM  The second section of the configuration file provides
XCOMM  information needed by File Manager to execute the
XCOMM  filesystem-specific dialog. It consists of a list of
XCOMM  platform-independent identifiers followed by a colon and
XCOMM  two or three fields. Each field consists of a name followed
XCOMM  by an equals sign and a string. The three field names are:
XCOMM  buttonLabel, which defines a label for a button in the permissions
XCOMM  dialog; fsDialog, which defines the path to the program
XCOMM  which displays the dialog for editing file-specific properties;
XCOMM  and warning, which is optional and defines a warning message to
XCOMM  be displayed in permissions dialog. "\n" can be included in the
XCOMM  warning text to generate a new line. Continuing the native file
XCOMM  system example used above, the following would enable a file-system
XCOMM  specific dialog generated by the program /local/bin/modExtAttr:
XCOMM
XCOMM  native:     buttonLabel  =  Modify extended attributes ...
XCOMM              warning      =  Warning:\nExtended attributes may limit your access
XCOMM              fsDialog     =  /local/bin/modExtAttr
XCOMM
XCOMM   Since the button label and warning are visible to users, they must be
XCOMM   localized. This is done using the tagged message file
XCOMM   format.
XCOMM
XCOMM  -----------------------------------------------------------------------
XCOMM

XCOMM aix:3       = test
XCOMM hpux:0      = test
XCOMM sunos:ufs   = test
XCOMM decunix:ufs = test
end

afs:    buttonLabel = %|nls-1-#Change AFS ACL ...#|
        warning     = %|nls-3-#Warning: This is an Andrew File System (AFS) object.\nAccess permissions may be further restricted by the AFS Access Control List (ACL).#|
        fsDialog    = CDE_INSTALLATION_TOP/bin/dtaclafs

test:   buttonLabel = %|nls-2-#Display test dialog ...#|
        fsDialog    = CDE_INSTALLATION_TOP/bin/dtfile_error
