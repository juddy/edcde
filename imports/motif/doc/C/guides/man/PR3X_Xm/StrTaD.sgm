<!-- $XConsortium: StrTaD.sgm /main/9 1996/09/08 21:07:35 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN448.rsml.1">
<RefMeta>
<RefEntryTitle>XmStringTableToXmString</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>XmStringTableToXmString</Function></RefName>
<RefPurpose>A convenience function that converts a compound string table to a single compound string
<IndexTerm>
<Primary>XmStringTableToXmString</Primary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- HISTORY-->
<RefSynopsisDiv>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;Xm/Xm.h>
</FuncSynopsisInfo>
<FuncDef>XmString <Function>XmStringTableToXmString</Function></FuncDef>
<!--<ParamDef><Replaceable>table, count, break_component</Replaceable></ParamDef>-->
<ParamDef>XmStringTable <Parameter>table</Parameter></ParamDef>
<ParamDef>Cardinal <Parameter>count</Parameter></ParamDef>
<ParamDef>XmString <Parameter>break_component</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para><Function>XmStringTableToXmString</Function> takes as input <Symbol Role="Variable">table</Symbol> of compound
strings and a specified
string component (such as a tab) and returns a single compound
string consisting of
each of the elements of <Symbol Role="Variable">table</Symbol> concatenated together with a
single copy of <Symbol Role="Variable">break_component</Symbol> inserted between each element.
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">table</Symbol></Term>
<ListItem>
<Para>Specifies an <StructName Role="typedef">XmStringTable</StructName> containing the compound strings to be
converted.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">count</Symbol></Term>
<ListItem>
<Para>Specifies the number of compound strings in <Symbol Role="Variable">table</Symbol>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">break_component</Symbol></Term>
<ListItem>
<Para>Specifies the <Symbol>XmStringComponent</Symbol> that will be inserted in the
result to separate the individual elements of <Symbol Role="Variable">table</Symbol>. The most
useful types will be <SystemItem Class="Constant">XmSTRING_COMPONENT_SEPARATOR</SystemItem> and
<SystemItem Class="Constant">XmSTRING_COMPONENT_TAB</SystemItem>.
Refer to the
&cdeman.XmStringComponentType; reference page for a complete list of
possible component types. Note, however, that the
<SystemItem Class="Constant">XmSTRING_COMPONENT_UNKNOWN</SystemItem> component is not a possible type.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RETURN</Title>
<Para>Returns a new <StructName Role="typedef">XmString</StructName>.
The function will allocate space to hold the returned compound string.
When the application no longer needs the returned compound string,
the application should call <Function>XmStringFree</Function>.
</Para>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.XmString;,
&cdeman.XmStringComponentType;, and
&cdeman.XmStringFree;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
