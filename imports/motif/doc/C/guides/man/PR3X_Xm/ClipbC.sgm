<!-- $XConsortium: ClipbC.sgm /main/10 1996/09/25 10:23:50 cdedoc $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN88.rsml.1">
<RefMeta>
<RefEntryTitle>XmClipboardCopyByName</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>XmClipboardCopyByName</Function></RefName>
<RefPurpose>A clipboard function that copies a data item passed by name
<IndexTerm>
<Primary>XmClipboardCopyByName</Primary>
</IndexTerm><IndexTerm>
<Primary>clipboard functions</Primary>
<Secondary>XmClipboardCopyByName</Secondary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- **-->
<!-- **-->
<!-- **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.-->
<!-- **      All Rights Reserved.-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company-->
<!-- **-->
<!-- **  (c) Copyright 1988 by Massachusetts Institute of Technology-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,-->
<!-- **      Maynard, MA.  All Rights Reserved.-->
<!-- **-->
<!-- **-->
<RefSynopsisDiv>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;Xm/CutPaste.h>
int XmClipboardCopyByName (<Replaceable>display, window, data_id,
        buffer, length, private_id</Replaceable>)
        Display <Replaceable>* display</Replaceable>;
        Window  <Replaceable>window</Replaceable>;
        long    <Replaceable>data_id</Replaceable>;
        XtPointer       <Replaceable>buffer</Replaceable>;
        unsigned long   <Replaceable>length</Replaceable>;
        long    <Replaceable>private_id</Replaceable>;
</FuncSynopsisInfo>
<FuncDef></FuncDef>
<void>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para><Function>XmClipboardCopyByName</Function> copies the actual data for a data item
that was previously passed by name to the clipboard. Data is
considered to be passed by name when a call to <Function>XmClipboardCopy</Function>
is made with a NULL buffer parameter. Additional calls to this
function append new data to the existing data.
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">display</Symbol></Term>
<ListItem>
<Para>Specifies a pointer to the <StructName Role="typedef">Display</StructName> structure that was returned in a
previous call to <Function>XOpenDisplay</Function> or <Function>XtDisplay</Function>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">window</Symbol></Term>
<ListItem>
<Para>Specifies the window ID of a widget that relates the application window to the
clipboard. The widget's window ID can be obtained through
<Function>XtWindow</Function>.
The same application instance should pass the same window ID to each
clipboard function it calls.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">data_id</Symbol></Term>
<ListItem>
<Para>Specifies an identifying number assigned to the data item that uniquely
identifies the data item and the format. This number was assigned by
<Function>XmClipboardCopy</Function> to the data item.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">buffer</Symbol></Term>
<ListItem>
<Para>Specifies the buffer from which the clipboard copies the data.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">length</Symbol></Term>
<ListItem>
<Para>Specifies the number of bytes in the data item.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">private_id</Symbol></Term>
<ListItem>
<Para>Specifies the private data that the application wants to store with the
data item.
</Para>
</ListItem>
</VarListEntry>
</VariableList>

</RefSect1>
<RefSect1>
<Title>RETURN</Title>
<VariableList>
<VarListEntry>
<Term><Symbol>XmClipboardSuccess</Symbol></Term>
<ListItem>
<Para>The function was successful.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol>XmClipboardLocked</Symbol></Term>
<ListItem>
<Para>The function failed because the clipboard was locked by another
application. The application can continue to call the function again with
the same parameters until the lock goes away. This gives the application
the opportunity to ask if the user wants to keep trying or to give up
on the operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.XmClipboardCopy;, &cdeman.XmClipboardLock;,
&cdeman.XmClipboardStartCopy;, and &cdeman.XmClipboardUnlock;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
