<!-- $XConsortium: PushButA.sgm /main/12 1996/09/08 20:56:00 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN345.rsml.1">
<RefMeta>
<RefEntryTitle>XmPushButton</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Classname>XmPushButton</Classname></RefName>
<RefPurpose>The PushButton widget class
<IndexTerm>
<Primary>XmPushButton</Primary>
</IndexTerm><IndexTerm>
<Primary>widget class</Primary>
<Secondary>PushButton</Secondary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- **-->
<!-- **-->
<!-- **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.-->
<!-- **      All Rights Reserved.-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,-->
<!-- **      Maynard, MA.  All Rights Reserved.-->
<!-- **-->
<!-- **-->
<RefSynopsisDiv>
<Synopsis>&npzwc;#include &lt;Xm/PushB.h>
</Synopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>PushButton issues commands within an application.
It consists of a text label or pixmap surrounded
by a border shadow.
When a PushButton is selected, the shadow changes to give the appearance
that it has been pressed in. When a PushButton is
unselected, the shadow changes to give the appearance that it is out.
</Para>
<Para>The default behavior associated with a PushButton in a menu depends on
the type of menu system in which it resides.
By default, <KeySym>Btn1</KeySym> controls the behavior of the PushButton.
In addition, <KeySym>Btn3</KeySym> controls the behavior of the PushButton if
it resides in a PopupMenu system.
The actual mouse button used is determined by its RowColumn parent.
</Para>
<Para>Thickness for a second shadow, used when the PushButton is the default
button, may be specified with the
<SystemItem Class="Resource">XmNshowAsDefault</SystemItem> resource. If it has a nonzero value, the Label's
resources <SystemItem Class="Resource">XmNmarginLeft</SystemItem>, <SystemItem Class="Resource">XmNmarginRight</SystemItem>, <SystemItem Class="Resource">XmNmarginTop</SystemItem>, and
<SystemItem Class="Resource">XmNmarginBottom</SystemItem> may be modified to accommodate the second shadow.
</Para>
<Para>If an initial value is specified for <SystemItem Class="Resource">XmNarmPixmap</SystemItem> but not for
<SystemItem Class="Resource">XmNlabelPixmap</SystemItem>, the <SystemItem Class="Resource">XmNarmPixmap</SystemItem> value is used for
<SystemItem Class="Resource">XmNlabelPixmap</SystemItem>.
</Para>
<Para>PushButton uses the <Symbol Role="Globalvar">XmQTmenuSystem</Symbol> and
<Symbol Role="Globalvar">XmQTspecifyRenderTable</Symbol> traits, and
holds the <Symbol>XmQactivatable</Symbol>, <Symbol Role="Globalvar">XmQTmenuSavvy</Symbol>, and
<Symbol Role="Globalvar">XmQTtakesDefault</Symbol> traits.
</Para>
<RefSect2>
<Title>Classes</Title>
<Para>PushButton inherits behavior, resources, and traits from <Classname>Core</Classname>,
<Classname>XmPrimitive</Classname>,
and <Classname>XmLabel</Classname>.
</Para>
<Para>The class pointer is <Symbol Role="Globalvar">xmPushButtonWidgetClass</Symbol>.
</Para>
<Para>The class name is <Classname>XmPushButton</Classname>.
</Para>
</RefSect2>
<RefSect2>
<Title>New Resources</Title>
<Para>The following table defines a set of widget resources used by the programmer
to specify data. The programmer can also set the resource values for the
inherited classes to set attributes for this widget. To reference a
resource by name or by class in a <Filename>.Xdefaults</Filename> file, remove the <SystemItem Class="Constant">XmN</SystemItem> or
<SystemItem Class="Constant">XmC</SystemItem> prefix and use the remaining letters. To specify one of the defined
values for a resource in a <Filename>.Xdefaults</Filename> file, remove the <SystemItem Class="Constant">Xm</SystemItem> prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using <Function>XtSetValues</Function> (S),
retrieved by using <Function>XtGetValues</Function> (G), or is not applicable (N/A).
</Para>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>XmPushButton Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNactivateCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNarmCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNarmColor</Entry>
<Entry>XmCArmColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNarmPixmap</Entry>
<Entry>XmCArmPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNdefaultButtonShadowThickness</Entry>
<Entry>XmCDefaultButtonShadowThickness</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNdisarmCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNfillOnArm</Entry>
<Entry>XmCFillOnArm</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmultiClick</Entry>
<Entry>XmCMultiClick</Entry>
<Entry>unsigned char</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNshowAsDefault</Entry>
<Entry>XmCShowAsDefault</Entry>
<Entry>Dimension</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<!--no-op:  .in-->
<VariableList>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNactivateCallback</SystemItem></Term>
<ListItem>
<Para>Specifies the list of callbacks that is called when PushButton is activated.
PushButton is activated when the user presses
and releases the active mouse button
while the pointer is inside that widget. Activating the PushButton
also disarms it.
For this callback, the reason is <SystemItem Class="Constant">XmCR_ACTIVATE</SystemItem>.
This callback uses the <Symbol Role="Globalvar">XmQTactivatable</Symbol> trait.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNarmCallback</SystemItem></Term>
<ListItem>
<Para>Specifies the list of callbacks that is called when PushButton is armed.
PushButton is armed when the user presses
the active mouse button while the pointer is inside that
widget.
For this callback, the reason is <SystemItem Class="Constant">XmCR_ARM</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNarmColor</SystemItem></Term>
<ListItem>
<Para>Specifies the color with which to fill the armed button.
<SystemItem Class="Resource">XmNfillOnArm</SystemItem> must be set to True for this resource to have an effect.
The default for a color display is a color between the background and the
bottom shadow color. For a monochrome display, the default is set to the
foreground color, and any text in the label appears in the background
color when the button is armed.
</para>
<para>This resource is also used when the button is armed in a menu
and the <systemitem class="resource">XmNenableEtchedInMenu</systemitem> resource is <literal>True</literal>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNarmPixmap</SystemItem></Term>
<ListItem>
<Para>Specifies the pixmap to be used as the button face if <SystemItem Class="Resource">XmNlabelType</SystemItem> is
<SystemItem Class="Constant">XmPIXMAP</SystemItem> and PushButton is armed. This resource is disabled when the
PushButton is in a menu.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNdefaultButtonShadowThickness</SystemItem></Term>
<ListItem>
<Para>This resource specifies the width of the default button indicator shadow.
If this resource is 0 (zero), the width of the shadow comes from the value of
the <SystemItem Class="Resource">XmNshowAsDefault</SystemItem> resource. If this resource is greater than
0, the <SystemItem Class="Resource">XmNshowAsDefault</SystemItem> resource is only used to specify whether
this button is the default.
The default value is the initial value of <SystemItem Class="Resource">XmNshowAsDefault</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNdisarmCallback</SystemItem></Term>
<ListItem>
<Para>Specifies the list of callbacks
that is called when PushButton is disarmed. PushButton is disarmed when
the user presses and releases the active mouse button
while the pointer is inside that widget. For this callback, the reason is
<SystemItem Class="Constant">XmCR_DISARM</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNfillOnArm</SystemItem></Term>
<ListItem>
<Para>Forces the PushButton to fill the background of the button with the
color specified by <SystemItem Class="Resource">XmNarmColor</SystemItem> when the button is armed and when this
resource is set to True. If False, only the top and bottom
shadow colors are switched.
When the PushButton is in a menu, this resource is ignored and assumed to be
False.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNmultiClick</SystemItem></Term>
<ListItem>
<Para>If a button click is followed by another button click within the time
span specified by the display's multiclick time, and this resource is
set to <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>, do not process the second click.
If this resource is set to <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>, process the event
and increment <Symbol Role="Variable">click_count</Symbol> in the callback structure.
When the button is in a menu, the default is <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>;
otherwise, for a button not in a menu, <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem> is
the default value.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNshowAsDefault</SystemItem></Term>
<ListItem>
<Para>If <SystemItem Class="Resource">XmNdefaultButtonShadowThickness</SystemItem> is greater than 0 (zero), a value
greater than 0 in this resource
specifies to mark this button as the default button.
If <SystemItem Class="Resource">XmNdefaultButtonShadowThickness</SystemItem> is 0, a value greater than
0 in this resource specifies to mark this button as the default
button with the shadow thickness specified by this resource.
When the Display resource <SystemItem Class="Resource">XmNdefaultButtonEmphasis</SystemItem> has a value of
<SystemItem Class="Constant">XmEXTERNAL_HIGHLIGHT</SystemItem> (the default), PushButton draws the
location cursor outside of the outer shadow. When this resource has a
value of <SystemItem Class="Constant">XmINTERNAL_HIGHLIGHT</SystemItem>, the highlight is drawn between
the inner and outer shadows.
The space between
the shadow and the default shadow is equal to the sum of both shadows.
The default value is 0. When this value is not 0, the Label
resources <SystemItem Class="Resource">XmNmarginLeft</SystemItem>, <SystemItem Class="Resource">XmNmarginRight</SystemItem>, <SystemItem Class="Resource">XmNmarginTop</SystemItem>, and
<SystemItem Class="Resource">XmNmarginBottom</SystemItem> may be modified to accommodate the second shadow.
This resource is disabled when the PushButton is in a menu.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Inherited Resources</Title>
<Para>PushButton inherits behavior and resources from the
superclasses described the following tables.
For a complete description of each resource, refer to the
reference page for that superclass.
</Para>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --><!--no-op:  .in 0--></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>XmLabel Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNaccelerator</Entry>
<Entry>XmCAccelerator</Entry>
<Entry>String</Entry>
<Entry>NULL</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNacceleratorText</Entry>
<Entry>XmCAcceleratorText</Entry>
<Entry>XmString</Entry>
<Entry>NULL</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNalignment</Entry>
<Entry>XmCAlignment</Entry>
<Entry>unsigned char</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNfontList</Entry>
<Entry>XmCFontList</Entry>
<Entry>XmFontList</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNlabelInsensitivePixmap</Entry>
<Entry>XmCLabelInsensitivePixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNlabelPixmap</Entry>
<Entry>XmCLabelPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNlabelString</Entry>
<Entry>XmCXmString</Entry>
<Entry>XmString</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNlabelType</Entry>
<Entry>XmCLabelType</Entry>
<Entry>unsigned char</Entry>
<Entry>XmSTRING</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmarginBottom</Entry>
<Entry>XmCMarginBottom</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmarginHeight</Entry>
<Entry>XmCMarginHeight</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmarginLeft</Entry>
<Entry>XmCMarginLeft</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmarginRight</Entry>
<Entry>XmCMarginRight</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmarginTop</Entry>
<Entry>XmCMarginTop</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmarginWidth</Entry>
<Entry>XmCMarginWidth</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmnemonic</Entry>
<Entry>XmCMnemonic</Entry>
<Entry>KeySym</Entry>
<Entry>NULL</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNmnemonicCharSet</Entry>
<Entry>XmCMnemonicCharSet</Entry>
<Entry>String</Entry>
<Entry>XmFONTLIST_DEFAULT_TAG</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNrecomputeSize</Entry>
<Entry>XmCRecomputeSize</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNrenderTable</Entry>
<Entry>XmCRenderTable</Entry>
<Entry>XmRenderTable</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNstringDirection</Entry>
<Entry>XmCStringDirection</Entry>
<Entry>XmStringDirection</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>XmPrimitive Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNbottomShadowColor</Entry>
<Entry>XmCBottomShadowColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNbottomShadowPixmap</Entry>
<Entry>XmCBottomShadowPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNconvertCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNforeground</Entry>
<Entry>XmCForeground</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhelpCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNhighlightColor</Entry>
<Entry>XmCHighlightColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhighlightOnEnter</Entry>
<Entry>XmCHighlightOnEnter</Entry>
<Entry>Boolean</Entry>
<Entry>False</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhighlightPixmap</Entry>
<Entry>XmCHighlightPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhighlightThickness</Entry>
<Entry>XmCHighlightThickness</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<!--no-op:  .tH-->
<Row>
<Entry>XmNlayoutDirection</Entry>
<Entry>XmCLayoutDirection</Entry>
<Entry>XmDirection</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNnavigationType</Entry>
<Entry>XmCNavigationType</Entry>
<Entry>XmNavigationType</Entry>
<Entry>XmNONE</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNpopupHandlerCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNshadowThickness</Entry>
<Entry>XmCShadowThickness</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtopShadowColor</Entry>
<Entry>XmCTopShadowColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtopShadowPixmap</Entry>
<Entry>XmCTopShadowPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtraversalOn</Entry>
<Entry>XmCTraversalOn</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNunitType</Entry>
<Entry>XmCUnitType</Entry>
<Entry>unsigned char</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNuserData</Entry>
<Entry>XmCUserData</Entry>
<Entry>XtPointer</Entry>
<Entry>NULL</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --><!--no-op:  .in--></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>Core Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNaccelerators</Entry>
<Entry>XmCAccelerators</Entry>
<Entry>XtAccelerators</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNancestorSensitive</Entry>
<Entry>XmCSensitive</Entry>
<Entry>Boolean</Entry>
<Entry>dynamic</Entry>
<Entry>G</Entry>
</Row>
<Row>
<Entry>XmNbackground</Entry>
<Entry>XmCBackground</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNbackgroundPixmap</Entry>
<Entry>XmCPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNborderColor</Entry>
<Entry>XmCBorderColor</Entry>
<Entry>Pixel</Entry>
<Entry>XtDefaultForeground</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNborderPixmap</Entry>
<Entry>XmCPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNborderWidth</Entry>
<Entry>XmCBorderWidth</Entry>
<Entry>Dimension</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNcolormap</Entry>
<Entry>XmCColormap</Entry>
<Entry>Colormap</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNdepth</Entry>
<Entry>XmCDepth</Entry>
<Entry>int</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNdestroyCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNheight</Entry>
<Entry>XmCHeight</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNinitialResourcesPersistent</Entry>
<Entry>XmCInitialResourcesPersistent</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNmappedWhenManaged</Entry>
<Entry>XmCMappedWhenManaged</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNscreen</Entry>
<Entry>XmCScreen</Entry>
<Entry>Screen *</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNsensitive</Entry>
<Entry>XmCSensitive</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtranslations</Entry>
<Entry>XmCTranslations</Entry>
<Entry>XtTranslations</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNwidth</Entry>
<Entry>XmCWidth</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNx</Entry>
<Entry>XmCPosition</Entry>
<Entry>Position</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNy</Entry>
<Entry>XmCPosition</Entry>
<Entry>Position</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
</RefSect2>
<RefSect2>
<Title>Callback Information</Title>
<Para>A pointer to the following structure is passed to each callback:
</Para>
<Synopsis>typedef struct
{
        int <Symbol Role="Variable">reason</Symbol>;
        XEvent <Symbol Role="Variable">* event</Symbol>;
        int <Symbol Role="Variable">click_count</Symbol>;
} XmPushButtonCallbackStruct;</Synopsis>
<!--no-op:  .fi-->
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">reason</Symbol></Term>
<ListItem>
<Para>Indicates why the callback was invoked.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">event</Symbol></Term>
<ListItem>
<Para>Points to the <Symbol>XEvent</Symbol> that triggered the callback.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">click_count</Symbol></Term>
<ListItem>
<Para>This value is valid only when the reason is <SystemItem Class="Constant">XmCR_ACTIVATE</SystemItem>.
It contains the number of clicks in the last multiclick sequence
if the <SystemItem Class="Resource">XmNmultiClick</SystemItem> resource is set to <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>,
otherwise it contains 1.
The activate callback is invoked for each click if <SystemItem Class="Resource">XmNmultiClick</SystemItem>
is set to <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- Action Table for XmPushButton -->
</RefSect2>
<RefSect2>
<Title>Translations</Title>
<Para><Classname>XmPushButton</Classname> includes translations from <Emphasis>Primitive</Emphasis>.
</Para>
<Para>Note that altering translations in <Literal>#override</Literal>
or <Literal>#augment</Literal> mode is undefined.
</Para>
<Para>Additional <Classname>XmPushButton</Classname> translations for <Symbol>XmPushButtons</Symbol> not in a
menu system are described in the following list.
</Para>
<Para>The following key names are listed in the
X standard key event translation table syntax.
This format is the one used by Motif to
specify the widget actions corresponding to a given key.
A brief overview of the format is provided under
&cdeman.VirtualBindings;.
For a complete description of the format, please refer to the
X Toolkit Instrinsics Documentation.
</Para>
<VariableList>
<VarListEntry>
<Term><Literal>c&lt;Btn1Down></Literal>:</Term>
<ListItem>
<Para><Action>ButtonTakeFocus()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Down</KeySym>:</Term>
<ListItem>
<Para><Action>Arm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Down</KeySym><Literal>,&ap;c</Literal><KeySym>Btn1Up</KeySym>:</Term>
<ListItem>
<Para><Action>Activate() Disarm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Down</KeySym><Literal>(2+)</Literal>:</Term>
<ListItem>
<Para><Action>MultiArm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Up</KeySym><Literal>(2+)</Literal>:</Term>
<ListItem>
<Para><Action>MultiActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Up</KeySym>:</Term>
<ListItem>
<Para><Action>Activate() Disarm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn2Down</KeySym>:</Term>
<ListItem>
<Para><Action>ProcessDrag()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfActivate</KeySym>:</Term>
<ListItem>
<Para><Action>PrimitiveParentActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfCancel</KeySym>:</Term>
<ListItem>
<Para><Action>PrimitiveParentCancel()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfSelect</KeySym>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfHelp</KeySym>:</Term>
<ListItem>
<Para><Action>Help()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;s &ap;m &ap;a</Literal> <KeySym>Key</KeySym><Literal>Return</Literal>:</Term>
<ListItem>
<Para><Action>PrimitiveParentActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;s &ap;m &ap;a</Literal> <KeySym>Key</KeySym><Literal>space</Literal>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!--These translations may not directly correspond to a
translation table.
.VL 2i 0 1
.LI "&bsol;*LBTransfer Press:&bsol;*O"
&bsol;*LProcessDrag()&bsol;*O
.LI "&bsol;*LBSelect Press:&bsol;*O"
&bsol;*LArm()&bsol;*O
.LI "&bsol;*LBSelect Click:&bsol;*O"
&bsol;*LActivate()&bsol;*O
.nL
.zA "feature, 5750, R2.0, Added new translation"
.LI "&bsol;*LCtrl&lt;Btn1Down>:&bsol;*O
&bsol;*LButtonTakeFocus()&bsol;*O
.nL
.zZ "feature, 5750, R2.0, Added new translation"
&bsol;*LDisarm()&bsol;*O
.LI "&bsol;*LBSelect Release:&bsol;*O"
&bsol;*LActivate()&bsol;*O
.nL
&bsol;*LDisarm()&bsol;*O
.LI "&bsol;*LBSelect Press 2+:&bsol;*O"
&bsol;*LMultiArm()&bsol;*O
.LI "&bsol;*LBSelect Release 2+:&bsol;*O"
&bsol;*LMultiActivate()&bsol;*O
.nL
&bsol;*LDisarm()&bsol;*O
.LI "&bsol;*LKSelect:&bsol;*O"
&bsol;*LArmAndActivate()&bsol;*O
.LI "&bsol;*LKHelp:&bsol;*O"
&bsol;*LHelp()&bsol;*O
.LE
-->
<Para><Classname>XmPushButton</Classname> inherits menu traversal translations
from <Classname>XmLabel</Classname>.
Additional XmPushButton translations for PushButtons in a
menu system are described in the following list.
In a Popup menu system, <KeySym>Btn3</KeySym> also performs the <KeySym>Btn1</KeySym>
actions.
</Para>
<Para>The following key names are listed in the
X standard key event translation table syntax.
This format is the one used by Motif to
specify the widget actions corresponding to a given key.
A brief overview of the format is provided under
&cdeman.VirtualBindings;.
For a complete description of the format, please refer to the
X Toolkit Instrinsics Documentation.
</Para>
<VariableList>
<VarListEntry>
<Term><KeySym>Btn2Down</KeySym>:</Term>
<ListItem>
<Para><Action>ProcessDrag()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>c&lt;Btn1Down></Literal>:</Term>
<ListItem>
<Para><Action>MenuButtonTakeFocus()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>c&lt;Btn1Up></Literal>:</Term>
<ListItem>
<Para><Action>MenuButtonTakeFocusUp()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>BtnDown</KeySym>:</Term>
<ListItem>
<Para><Action>BtnDown()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>BtnUp</KeySym>:</Term>
<ListItem>
<Para><Action>BtnUp()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfSelect</KeySym>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfActivate</KeySym>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfCancel</KeySym>:</Term>
<ListItem>
<Para><Action>MenuEscape()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfHelp</KeySym>:</Term>
<ListItem>
<Para><Action>Help()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;s &ap;m &ap;a</Literal> <KeySym>Key</KeySym><Literal>Return</Literal>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;s &ap;m &ap;a</Literal> <KeySym>Key</KeySym><Literal>space</Literal>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!--These translations may not directly correspond to a
translation table.
.VL 2i 0 1
.LI "&bsol;*LBSelect Press:&bsol;*O"
&bsol;*LBtnDown()&bsol;*O
.LI "&bsol;*LBSelect Release:&bsol;*O"
&bsol;*LBtnUp()&bsol;*O
.LI "&bsol;*LKActivate:&bsol;*O"
&bsol;*LArmAndActivate()&bsol;*O
.LI "&bsol;*LKSelect:&bsol;*O"
&bsol;*LArmAndActivate()&bsol;*O
.LI "&bsol;*LMAny KCancel:&bsol;*O"
&bsol;*LMenuShellPopdownOne()&bsol;*O
.LE
-->
</RefSect2>
<RefSect2>
<Title>Action Routines</Title>
<Para>The <Classname>XmPushButton</Classname> action routines are
</Para>
<VariableList>
<VarListEntry>
<Term><Action>Activate()</Action>:</Term>
<ListItem>
<Para>This action draws the shadow in the unarmed
state.
If the button is not in a menu and if <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set to True,
the background color reverts to the unarmed color.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, <SystemItem Class="Resource">XmNlabelPixmap</SystemItem> is
used for the button face.
If the pointer is still within the button,
this action calls the callbacks for <SystemItem Class="Resource">XmNactivateCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>Arm()</Action>:</Term>
<ListItem>
<Para>This action arms the PushButton.
It draws the shadow in the armed state.
If the button is not in a menu and if <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set
to True, it fills the button with the color specified by
<SystemItem Class="Resource">XmNarmColor</SystemItem>.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, the <SystemItem Class="Resource">XmNarmPixmap</SystemItem> is
used for the button face.
It calls the <SystemItem Class="Resource">XmNarmCallback</SystemItem> callbacks.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>ArmAndActivate()</Action>:</Term>
<ListItem>
<Para>In a menu, unposts all menus in the menu hierarchy and,
unless the button is already armed,
calls the <SystemItem Class="Resource">XmNarmCallback</SystemItem> callbacks.
This action calls the <SystemItem Class="Resource">XmNactivateCallback</SystemItem> and
<SystemItem Class="Resource">XmNdisarmCallback</SystemItem> callbacks.
</Para>
<Para>Outside a menu, draws the shadow in the armed state and, if
<SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set to True, fills the button with the color
specified by <SystemItem Class="Resource">XmNarmColor</SystemItem>.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, <SystemItem Class="Resource">XmNarmPixmap</SystemItem> is
used for the button face.
This action calls the <SystemItem Class="Resource">XmNarmCallback</SystemItem> callbacks.
</Para>
<Para>Outside a menu, this action also arranges for the following to happen,
either immediately or at a later time:
the shadow is drawn in the unarmed state and, if <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set
to True, the background color reverts to the unarmed color.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, <SystemItem Class="Resource">XmNlabelPixmap</SystemItem> is
used for the button face.
The <SystemItem Class="Resource">XmNactivateCallback</SystemItem> and <SystemItem Class="Resource">XmNdisarmCallback</SystemItem> callbacks are
called.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>BtnDown()</Action>:</Term>
<ListItem>
<Para>This action unposts any menus posted by the PushButton's parent menu,
disables keyboard traversal for the menu, and enables mouse traversal
for the menu.
It draws the shadow in the armed state
and, unless the button is already armed, calls the <SystemItem Class="Resource">XmNarmCallback</SystemItem>
callbacks.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>BtnUp()</Action>:</Term>
<ListItem>
<Para>This action unposts all menus in the menu hierarchy and activates the
PushButton.
It calls the <SystemItem Class="Resource">XmNactivateCallback</SystemItem> callbacks and then the
<SystemItem Class="Resource">XmNdisarmCallback</SystemItem> callbacks.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>ButtonTakeFocus():</Action></Term>
<ListItem>
<Para>Causes the PushButton to take keyboard focus
when <Literal>Ctrl&lt;Btn1Down></Literal> is pressed, without activating the widget.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>Disarm()</Action>:</Term>
<ListItem>
<Para>Calls the callbacks for <SystemItem Class="Resource">XmNdisarmCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>Help()</Action>:</Term>
<ListItem>
<Para>In a Pulldown or Popup MenuPane, unposts all menus in the menu hierarchy
and,
when the shell's keyboard focus policy is
<SystemItem Class="Constant">XmEXPLICIT</SystemItem>,
restores keyboard focus to the widget that had the focus before
the menu system was entered.
This action calls the callbacks for <SystemItem Class="Resource">XmNhelpCallback</SystemItem> if any exist.
If there are no help
callbacks for this widget, this action calls the help callbacks
for the nearest ancestor that has them.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>MenuShellPopdownOne()</Action>:</Term>
<ListItem>
<Para>In a top-level Pulldown MenuPane from a MenuBar, unposts the menu,
disarms the MenuBar CascadeButton and the MenuBar; and,
when the shell's keyboard focus policy is
<SystemItem Class="Constant">XmEXPLICIT</SystemItem>,
restores keyboard
focus to the widget that had the focus before the MenuBar was
entered.
In other Pulldown MenuPanes, it unposts the menu.
</Para>
<Para>In a Popup MenuPane, this action
unposts the menu and restores keyboard focus to the
widget from which the menu was posted.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>MultiActivate()</Action>:</Term>
<ListItem>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>, this action does
nothing.
</Para>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>, this action
increments <Symbol Role="Variable">click_count</Symbol> in the callback structure and
draws the shadow in the unarmed state.
If the button is not in a menu and if <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set to True,
the background color reverts to the unarmed color.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, the <SystemItem Class="Resource">XmNlabelPixmap</SystemItem> is
used for the button face.
If the pointer is within the PushButton, calls the
callbacks for <SystemItem Class="Resource">XmNactivateCallback</SystemItem>
and <SystemItem Class="Resource">XmNdisarmCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>MultiArm()</Action>:</Term>
<ListItem>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>, this action does
nothing.
</Para>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>, this action
draws the shadow in the armed state.
If the button is not in a menu and if <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set
to True, this action fills the button with the color specified by
<SystemItem Class="Resource">XmNarmColor</SystemItem>.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, the <SystemItem Class="Resource">XmNarmPixmap</SystemItem> is
used for the button face.
This action calls the <SystemItem Class="Resource">XmNarmCallback</SystemItem> callbacks.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>ProcessDrag()</Action>:</Term>
<ListItem>
<Para>Drags the contents of a PushButton label, identified when
<Literal>BTransfer</Literal> is pressed.
This action sets the <SystemItem Class="Resource">XmNconvertProc</SystemItem> of the DragContext to a
function that calls the <SystemItem Class="Resource">XmNconvertCallback</SystemItem> procedures, possibly
multiple times, for the <Property>_MOTIF_DROP</Property> selection.
This action is undefined for PushButtons used in a menu system.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Additional Behavior</Title>
<Para>This widget has the following additional behavior:
</Para>
<VariableList>
<VarListEntry>
<Term><KeySym>EnterWindow</KeySym>:</Term>
<ListItem>
<Para>In a menu, if keyboard traversal is enabled, this action does nothing.
Otherwise, it draws the shadow in the armed state and calls the
<SystemItem Class="Resource">XmNarmCallback</SystemItem> callbacks.
</Para>
<Para>If the PushButton is not in a menu and the cursor leaves and then
reenters the PushButton's window while the button is pressed, this
action draws the shadow in the armed state.
If <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set to True, it also fills the button with the
color specified by <SystemItem Class="Resource">XmNarmColor</SystemItem>.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, <SystemItem Class="Resource">XmNarmPixmap</SystemItem> is
used for the button face.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><KeySym>LeaveWindow</KeySym>:</Term>
<ListItem>
<Para>In a menu, if keyboard traversal is enabled, this action does nothing.
Otherwise, it draws the shadow in the unarmed state and calls the
<SystemItem Class="Resource">XmNdisarmCallback</SystemItem> callbacks.
</Para>
<Para>If the PushButton is not in a menu and the cursor leaves the
PushButton's window while the button is pressed, this action draws the
shadow in the unarmed state.
If <SystemItem Class="Resource">XmNfillOnArm</SystemItem> is set to True, the background color reverts to
the unarmed color.
If <SystemItem Class="Resource">XmNlabelType</SystemItem> is <SystemItem Class="Constant">XmPIXMAP</SystemItem>, the <SystemItem Class="Resource">XmNlabelPixmap</SystemItem> is
used for the button face.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Virtual Bindings</Title>
<Para>The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see &cdeman.VirtualBindings;.
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.Core;,
&cdeman.XmCreatePushButton;, &cdeman.XmLabel;,
&cdeman.XmPrimitive;, and &cdeman.XmRowColumn;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
