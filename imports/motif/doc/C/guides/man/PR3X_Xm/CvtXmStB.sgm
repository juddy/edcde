<!-- $XConsortium: CvtXmStB.sgm /main/7 1996/08/30 15:03:27 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN194.rsml.1">
<RefMeta>
<RefEntryTitle>XmCvtXmStringToByteStream</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>XmCvtXmStringToByteStream</Function></RefName>
<RefPurpose>A compound string function that converts a compound string to a Byte Stream format
<IndexTerm>
<Primary>XmCvtXmStringToByteStream</Primary>
</IndexTerm><IndexTerm>
<Primary>compound string functions</Primary>
<Secondary>XmCvtXmStringToByteStream</Secondary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<RefSynopsisDiv>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;Xm/Xm.h>
</FuncSynopsisInfo>
<FuncDef>unsigned int <Function>XmCvtXmStringToByteStream</Function></FuncDef>
<!--<ParamDef><Replaceable>string, prop_return</Replaceable></ParamDef>-->
<ParamDef>XmString <Parameter>string</Parameter></ParamDef>
<ParamDef>unsigned char **<Parameter>prop_return</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para><Function>XmCvtXmStringToByteStream</Function> converts a compound string to a
string of
bytes
representing the compound string in Byte Stream format.
This routine is typically used by the source of a data transfer
operation to produce a Byte Stream representation for transferring a compound
string to a destination.
</Para>
<Para>If <Symbol Role="Variable">prop_return</Symbol> is not NULL, this function creates a string of
characters in Byte Stream format and returns it in <Symbol Role="Variable">prop_return</Symbol>.
The function also returns the number of bytes in <Symbol Role="Variable">prop_return</Symbol>.
If <Symbol Role="Variable">prop_return</Symbol> is NULL, the function does not return the Byte
Stream format
string, but it does calculate and return the number of bytes that would
appear in the Byte Stream format string.
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">string</Symbol></Term>
<ListItem>
<Para>Specifies a compound string to be converted to Byte Stream format
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">prop_return</Symbol></Term>
<ListItem>
<Para>Specifies a pointer to a string in Byte Stream format that is created and
returned by this function.
If <Symbol Role="Variable">prop_return</Symbol> is NULL, no Byte Stream format string is returned.
When a Byte Stream format string is returned, the function allocates
space to hold it.
The application is responsible for managing this allocated space.
The application can recover the allocated space by calling <Function>XtFree</Function>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RETURN</Title>
<Para>Returns the number of bytes in the Byte Stream representation (whether or not
the Byte Stream representation is returned).
</Para>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.XmString; and
&cdeman.XmCvtByteStreamToXmString;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
