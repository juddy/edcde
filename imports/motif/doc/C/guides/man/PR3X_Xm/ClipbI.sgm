<!-- $XConsortium: ClipbI.sgm /main/10 1996/09/25 10:24:35 cdedoc $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN94.rsml.1">
<RefMeta>
<RefEntryTitle>XmClipboardInquirePendingItems</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>XmClipboardInquirePendingItems</Function></RefName>
<RefPurpose>A clipboard function that returns a list of data ID/private ID pairs
<IndexTerm>
<Primary>XmClipboardInquirePending\\%Items</Primary>
</IndexTerm><IndexTerm>
<Primary>clipboard functions</Primary>
<Secondary>XmClipboardInquirePending\\%Items</Secondary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- **-->
<!-- **-->
<!-- **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.-->
<!-- **      All Rights Reserved.-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company-->
<!-- **-->
<!-- **  (c) Copyright 1988 by Massachusetts Institute of Technology-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,-->
<!-- **      Maynard, MA.  All Rights Reserved.-->
<!-- **-->
<!-- **-->
<RefSynopsisDiv>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;Xm/CutPaste.h>
int XmClipboardInquirePendingItems (<Replaceable>display, window, format_name, item_list, count</Replaceable>)
        Display <Replaceable>* display</Replaceable>;
        Window  <Replaceable>window</Replaceable>;
        char    <Replaceable>* format_name</Replaceable>;
        XmClipboardPendingList  <Replaceable>* item_list</Replaceable>;
        unsigned long   <Replaceable>* count</Replaceable>;
</FuncSynopsisInfo>
<FuncDef></FuncDef>
<void>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para><Function>XmClipboardInquirePendingItems</Function> returns a list of
data ID/private ID pairs
for the specified format name. A data item is considered pending if the
application originally passed it by name, the application has not yet
copied the data, and the item has not been deleted from the clipboard.
The application is responsible for freeing the memory provided by this
function to store the list.
To free the memory, call <Function>XtFree</Function>.
</Para>
<Para>This function is used by an application when exiting, to determine if the
data that is passed by name should be sent to the clipboard.
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">display</Symbol></Term>
<ListItem>
<Para>Specifies a pointer to the <StructName Role="typedef">Display</StructName> structure that was returned in a
previous call to <Function>XOpenDisplay</Function> or <Function>XtDisplay</Function>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">window</Symbol></Term>
<ListItem>
<Para>Specifies the window ID of a widget that relates the application window to the
clipboard. The widget's window ID can be obtained through
<Function>XtWindow</Function>.
The same application instance should pass the same window ID to each of the
clipboard functions that it calls.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">format_name</Symbol></Term>
<ListItem>
<Para>Specifies a string that contains the name of the format for which the list
of data ID/private ID pairs is to be obtained.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">item_list</Symbol></Term>
<ListItem>
<Para>Specifies the address of the array of data ID/private ID pairs for the
specified format name. This argument is a type
<StructName Role="typedef">XmClipboardPendingList</StructName>.
The application is
responsible for freeing the memory provided by this function
for storing the list.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">count</Symbol></Term>
<ListItem>
<Para>Specifies the number of items returned in the list. If there is no data for
the specified format name, or if there is no item on the clipboard, this
argument equals 0 (zero).
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RETURN</Title>
<VariableList>
<VarListEntry>
<Term><Symbol>XmClipboardSuccess</Symbol></Term>
<ListItem>
<Para>The function was successful.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol>XmClipboardLocked</Symbol></Term>
<ListItem>
<Para>The function failed because the clipboard was locked by another
application. The application can continue to call the function again with
the same parameters until the lock goes away. This gives the application
the opportunity to ask if the user wants to keep trying or to give up
on the operation.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.XmClipboardStartCopy;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
