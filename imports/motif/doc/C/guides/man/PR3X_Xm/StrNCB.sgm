<!-- $XConsortium: StrNCB.sgm /main/8 1996/09/08 21:06:28 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN438.rsml.1">
<RefMeta>
<RefEntryTitle>XmStringNCopy</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>XmStringNCopy</Function></RefName>
<RefPurpose>A compound string function that creates a copy of a compound string
<IndexTerm>
<Primary>XmStringNCopy</Primary>
</IndexTerm><IndexTerm>
<Primary>compound string functions</Primary>
<Secondary>XmStringNCopy</Secondary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- **-->
<!-- **-->
<!-- **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.-->
<!-- **      All Rights Reserved.-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,-->
<!-- **      Maynard, MA.  All Rights Reserved.-->
<!-- **-->
<!-- **-->
<RefSynopsisDiv>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;Xm/Xm.h>
</FuncSynopsisInfo>
<FuncDef>XmString <Function>XmStringNCopy</Function></FuncDef>
<!--<ParamDef><Replaceable>s1, num_bytes</Replaceable></ParamDef>-->
<ParamDef>XmString <Parameter>s1</Parameter></ParamDef>
<ParamDef>int <Parameter>num_bytes</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>This function is obsolete and exists for compatibility with previous
releases.
<Function>XmStringNCopy</Function> creates a copy of <Symbol Role="Variable">s1</Symbol> that contains a specified
number of bytes, including tags, directional indicators,
and separators. It then returns the
resulting compound string. The original strings are preserved.
The function allocates space for the resulting compound string.
The application is responsible for managing the allocated space.
The application can recover the allocated space by calling <Function>XmStringFree</Function>.
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">s1</Symbol></Term>
<ListItem>
<Para>Specifies the compound string.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">num_bytes</Symbol></Term>
<ListItem>
<Para>Specifies the number of bytes of <Symbol Role="Variable">s1</Symbol> to copy.
If this value is less than the
length of <Symbol Role="Variable">s1</Symbol>, as many bytes as possible, but possibly fewer than
this value, will be appended to <Symbol Role="Variable">s1</Symbol> such that the resulting string
is still a valid compound string.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect1>
<RefSect1>
<Title>RETURN</Title>
<Para>Returns a new compound string.
</Para>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.XmStringCreate; and &cdeman.XmStringFree;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
