<!-- $XConsortium: ArrowBuA.sgm /main/11 1996/09/08 20:24:54 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN41.rsml.1">
<RefMeta>
<RefEntryTitle>XmArrowButton</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Classname>XmArrowButton</Classname></RefName>
<RefPurpose>The ArrowButton widget class
<IndexTerm>
<Primary>XmArrowButton</Primary>
</IndexTerm><IndexTerm>
<Primary>widget class</Primary>
<Secondary>ArrowButton</Secondary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- **-->
<!-- **-->
<!-- **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.-->
<!-- **      All Rights Reserved.-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company-->
<!-- **-->
<!-- **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,-->
<!-- **      Maynard, MA.  All Rights Reserved.-->
<!-- **-->
<!-- **-->
<RefSynopsisDiv>
<Synopsis>&npzwc;#include &lt;Xm/ArrowB.h>
</Synopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para>ArrowButton consists of a directional arrow surrounded by a
border shadow. When it is selected, the shadow changes
to give the appearance that the
ArrowButton has been pressed in. When the
ArrowButton is unselected, the shadow reverts to give the appearance that the
ArrowButton is released, or out.
</Para>
<Para>ArrowButton holds the <Symbol Role="Globalvar">XmQTactivatable</Symbol> trait.
</Para>
<RefSect2>
<Title>Classes</Title>
<Para>ArrowButton inherits behavior, resources, and traits
from the <Classname>Core</Classname> and <Classname>XmPrimitive</Classname> classes.
</Para>
<Para>The class pointer is <Symbol Role="Globalvar">xmArrowButtonWidgetClass</Symbol>.
</Para>
<Para>The class name is <Classname>XmArrowButton</Classname>.
</Para>
</RefSect2>
<RefSect2>
<Title>New Resources</Title>
<Para>The following table defines a set of widget resources used by the programmer
to specify data. The programmer can also set the resource values for the
inherited classes to set attributes for this widget. To reference a
resource by name or by class in a <Filename>.Xdefaults</Filename> file, remove the <SystemItem Class="Constant">XmN</SystemItem> or
<SystemItem Class="Constant">XmC</SystemItem> prefix and use the remaining letters. To specify one of the defined
values for a resource in a <Filename>.Xdefaults</Filename> file, remove the <SystemItem Class="Constant">Xm</SystemItem> prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using <Function>XtSetValues</Function> (S),
retrieved by using <Function>XtGetValues</Function> (G), or is not applicable (N/A).
</Para>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>XmArrowButton Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNactivateCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNarmCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNarrowDirection</Entry>
<Entry>XmCArrowDirection</Entry>
<Entry>unsigned char</Entry>
<Entry>XmARROW_UP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNdetailShadowThickness</Entry>
<Entry>XmCDetailShadowThickness</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNdisarmCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNmultiClick</Entry>
<Entry>XmCMultiClick</Entry>
<Entry>unsigned char</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<VariableList>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNactivateCallback</SystemItem></Term>
<ListItem>
<Para>Specifies a list of callbacks that is called
when the ArrowButton is activated.
To activate the button, press and release <Literal>BSelect</Literal>
while the pointer is inside
the ArrowButton widget. Activating the ArrowButton
also disarms it.
The reason sent by this callback is <SystemItem Class="Constant">XmCR_ACTIVATE</SystemItem>.
This callback uses the <Symbol Role="Globalvar">XmQTactivatable</Symbol> trait.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNarmCallback</SystemItem></Term>
<ListItem>
<Para>Specifies a list of callbacks that is called
when the ArrowButton is armed.
To arm this widget, press <Literal>BSelect</Literal>
while the pointer is inside the ArrowButton.
The reason sent by this callback is <SystemItem Class="Constant">XmCR_ARM</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNarrowDirection</SystemItem></Term>
<ListItem>
<Para>Sets the arrow direction.
The values for this resource are
</Para>
<ItemizedList>
<ListItem>
<Para><SystemItem Class="Constant">XmARROW_UP</SystemItem>
</Para>
</ListItem>
<ListItem>
<Para><SystemItem Class="Constant">XmARROW_DOWN</SystemItem>
</Para>
</ListItem>
<ListItem>
<Para><SystemItem Class="Constant">XmARROW_LEFT</SystemItem>
</Para>
</ListItem>
<ListItem>
<Para><SystemItem Class="Constant">XmARROW_RIGHT</SystemItem>
</Para>
</ListItem>
</ItemizedList>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNdetailShadowThickness</SystemItem></Term>
<ListItem>
<Para>Specifies the thickness of the inside arrow shadows. The default thickness
is 2 pixels.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNdisarmCallback</SystemItem></Term>
<ListItem>
<Para>Specifies a list of callbacks that is called
when the ArrowButton is disarmed.
To disarm this widget, press and release
<Literal>BSelect</Literal> while the pointer is inside the ArrowButton.
The reason for this callback is <SystemItem Class="Constant">XmCR_DISARM</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><SystemItem Class="Resource">XmNmultiClick</SystemItem></Term>
<ListItem>
<Para>If a button click is followed by another button click within the time
span specified by the display's multiclick time, and this resource is
set to <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>, the second click.
is not processed.
If this resource is set to <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>, the event
is processed and <Symbol Role="Variable">click_count</Symbol> is incremented in the callback structure.
When the button is not in a menu, the default value is
<SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Inherited Resources</Title>
<Para>ArrowButton inherits behavior and resources from the
superclasses described in the following table.
For a complete description of each resource, refer to the
reference page for that superclass.
</Para>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>XmPrimitive Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNbottomShadowColor</Entry>
<Entry>XmCBottomShadowColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNbottomShadowPixmap</Entry>
<Entry>XmCBottomShadowPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNconvertCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNforeground</Entry>
<Entry>XmCForeground</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhelpCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNhighlightColor</Entry>
<Entry>XmCHighlightColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhighlightOnEnter</Entry>
<Entry>XmCHighlightOnEnter</Entry>
<Entry>Boolean</Entry>
<Entry>False</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhighlightPixmap</Entry>
<Entry>XmCHighlightPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNhighlightThickness</Entry>
<Entry>XmCHighlightThickness</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<!--no-op:  .tH-->
<Row>
<Entry>XmNlayoutDirection</Entry>
<Entry>XmCLayoutDirection</Entry>
<Entry>XmDirection</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNnavigationType</Entry>
<Entry>XmCNavigationType</Entry>
<Entry>XmNavigationType</Entry>
<Entry>XmNONE</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNpopupHandlerCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNshadowThickness</Entry>
<Entry>XmCShadowThickness</Entry>
<Entry>Dimension</Entry>
<Entry>2</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtopShadowColor</Entry>
<Entry>XmCTopShadowColor</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtopShadowPixmap</Entry>
<Entry>XmCTopShadowPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtraversalOn</Entry>
<Entry>XmCTraversalOn</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNunitType</Entry>
<Entry>XmCUnitType</Entry>
<Entry>unsigned char</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNuserData</Entry>
<Entry>XmCUserData</Entry>
<Entry>XtPointer</Entry>
<Entry>NULL</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
<Para><!-- --><!-- @OSF_COPYRIGHT@--><!-- COPYRIGHT NOTICE--><!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.--><!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for--><!-- the full copyright text.--><!-- --><!-- HISTORY--><!-- --><!--no-op:  .in--></Para>
<InformalTable Frame="All" Remap="center" Orient="Port">
<TGroup Cols="5">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="1">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="2">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="3">
<ColSpec Rowsep="1" Colsep="1" Align="Left" Colname="4">
<ColSpec Rowsep="1" Align="Left" Colname="5">
<TBody>
<Row>
<Entry Align="Center" Nameend="5" Namest="1"><Literal>Core Resource Set</Literal></Entry>
</Row>
<Row>
<Entry Rowsep="1"><Literal>Name</Literal></Entry>
<Entry Rowsep="1"><Literal>Class</Literal></Entry>
<Entry Rowsep="1"><Literal>Type</Literal></Entry>
<Entry Rowsep="1"><Literal>Default</Literal></Entry>
<Entry Rowsep="1"><Literal>Access</Literal></Entry>
</Row>
<Row>
<Entry>XmNaccelerators</Entry>
<Entry>XmCAccelerators</Entry>
<Entry>XtAccelerators</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNancestorSensitive</Entry>
<Entry>XmCSensitive</Entry>
<Entry>Boolean</Entry>
<Entry>dynamic</Entry>
<Entry>G</Entry>
</Row>
<Row>
<Entry>XmNbackground</Entry>
<Entry>XmCBackground</Entry>
<Entry>Pixel</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNbackgroundPixmap</Entry>
<Entry>XmCPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNborderColor</Entry>
<Entry>XmCBorderColor</Entry>
<Entry>Pixel</Entry>
<Entry>XtDefaultForeground</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNborderPixmap</Entry>
<Entry>XmCPixmap</Entry>
<Entry>Pixmap</Entry>
<Entry>XmUNSPECIFIED_PIXMAP</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNborderWidth</Entry>
<Entry>XmCBorderWidth</Entry>
<Entry>Dimension</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNcolormap</Entry>
<Entry>XmCColormap</Entry>
<Entry>Colormap</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNdepth</Entry>
<Entry>XmCDepth</Entry>
<Entry>int</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNdestroyCallback</Entry>
<Entry>XmCCallback</Entry>
<Entry>XtCallbackList</Entry>
<Entry>NULL</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNheight</Entry>
<Entry>XmCHeight</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNinitialResourcesPersistent</Entry>
<Entry>XmCInitialResourcesPersistent</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>C</Entry>
</Row>
<Row>
<Entry>XmNmappedWhenManaged</Entry>
<Entry>XmCMappedWhenManaged</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNscreen</Entry>
<Entry>XmCScreen</Entry>
<Entry>Screen *</Entry>
<Entry>dynamic</Entry>
<Entry>CG</Entry>
</Row>
<Row>
<Entry>XmNsensitive</Entry>
<Entry>XmCSensitive</Entry>
<Entry>Boolean</Entry>
<Entry>True</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNtranslations</Entry>
<Entry>XmCTranslations</Entry>
<Entry>XtTranslations</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNwidth</Entry>
<Entry>XmCWidth</Entry>
<Entry>Dimension</Entry>
<Entry>dynamic</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNx</Entry>
<Entry>XmCPosition</Entry>
<Entry>Position</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
<Row>
<Entry>XmNy</Entry>
<Entry>XmCPosition</Entry>
<Entry>Position</Entry>
<Entry>0</Entry>
<Entry>CSG</Entry>
</Row>
</TBody>
</TGroup>
</InformalTable>
</RefSect2>
<RefSect2>
<Title>Callback Information</Title>
<Para>A pointer to the following structure is passed to each callback:
</Para>
<Synopsis>typedef struct
{
        int <Symbol Role="Variable">reason</Symbol>;
        XEvent <Symbol Role="Variable">* event</Symbol>;
        int <Symbol Role="Variable">click_count</Symbol>;
} XmArrowButtonCallbackStruct;</Synopsis>
<!--no-op:  .fi-->
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">reason</Symbol></Term>
<ListItem>
<Para>Indicates why the callback was invoked.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">event</Symbol></Term>
<ListItem>
<Para>Points to the <Symbol>XEvent</Symbol> that triggered the callback.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">click_count</Symbol></Term>
<ListItem>
<Para>This value is valid only when the reason is <SystemItem Class="Constant">XmCR_ACTIVATE</SystemItem>.
It contains the number of clicks in the last multiclick sequence
if the <SystemItem Class="Resource">XmNmultiClick</SystemItem> resource is set to <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>;
otherwise it contains 1.
The activate callback is invoked for each click if <SystemItem Class="Resource">XmNmultiClick</SystemItem>
is set to <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- -->
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- -->
<!-- HISTORY-->
<!-- -->
<!-- Action Table for XmArrowButton -->
</RefSect2>
<RefSect2>
<Title>Translations</Title>
<Para>XmArrowButton includes translations for XmPrimitive.
The following key names are listed in the
X standard key event translation table syntax.
This format is the one used by Motif to
specify the widget actions corresponding to a given key.
A brief overview of the format is provided under
&cdeman.VirtualBindings;.
For a complete description of the format, please refer to the
X Toolkit Instrinsics Documentation.
</Para>
<VariableList>
<VarListEntry>
<Term><KeySym>EnterWindow</KeySym>:</Term>
<ListItem>
<Para><Action>Enter()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><KeySym>LeaveWindow</KeySym>:</Term>
<ListItem>
<Para><Action>Leave()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>c&lt;Btn1Down></Literal>:</Term>
<ListItem>
<Para><Action>ButtonTakeFocus()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Down</KeySym>:</Term>
<ListItem>
<Para><Action>Arm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Down</KeySym><Literal>,&ap;c</Literal><KeySym>Btn1Up</KeySym>:</Term>
<ListItem>
<Para><Action>Activate() Disarm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Down</KeySym><Literal>(2+)</Literal>:</Term>
<ListItem>
<Para><Action>MultiArm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Up</KeySym><Literal>(2+)</Literal>:</Term>
<ListItem>
<Para><Action>MultiActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;c</Literal><KeySym>Btn1Up</KeySym>:</Term>
<ListItem>
<Para><Action>Activate() Disarm()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfActivate</KeySym>:</Term>
<ListItem>
<Para><Action>PrimitiveParentActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfCancel</KeySym>:</Term>
<ListItem>
<Para><Action>PrimitiveParentCancel()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfSelect</KeySym>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>:</Literal><KeySym>Key</KeySym><KeySym>osfHelp</KeySym>:</Term>
<ListItem>
<Para><Action>Help()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;s &ap;m &ap;a</Literal> <KeySym>Key</KeySym><Literal>Return</Literal>:</Term>
<ListItem>
<Para><Action>PrimitiveParentActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Literal>&ap;s &ap;m &ap;a</Literal> <KeySym>Key</KeySym><Literal>space</Literal>:</Term>
<ListItem>
<Para><Action>ArmAndActivate()</Action>
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<!-- The following list describes additional XmArrowButton translations.-->
<!-- These translations may not directly correspond to a-->
<!-- translation table.-->
<!-- .VL 1.5i-->
<!-- .LI "\*LBSelect Press:\*O"-->
<!-- \*LArm()\*O-->
<!-- .LI "\*LBSelect Click:\*O"-->
<!-- \*LActivate()\*O-->
<!-- #ifdef 1-->
<!-- .zA "feature, 5750, R2.0, Added new translation"-->
<!-- .LI "\*LCtrl<Btn1Down>:\*O-->
<!-- \*LPrimitiveTakeFocus()\*O-->
<!-- .nL-->
<!-- .zZ "feature, 5750, R2.0, Added new translation"-->
<!-- #endif 1-->
<!-- .LI-->
<!-- \*LDisarm()\*O-->
<!-- .LI "\*LBSelect Release\*O:"-->
<!-- \*LActivate()\*O-->
<!-- .LI-->
<!-- \*LDisarm()\*O-->
<!-- .LI "\*LBSelect Press 2+:\*O"-->
<!-- \*LMultiArm()\*O-->
<!-- .LI "\*LBSelect Release 2+:\*O"-->
<!-- \*LMultiActivate()\*O-->
<!-- .LI "\*LKSelect:"\*O-->
<!-- \*LArmAndActivate()\*O-->
<!-- .LI "\*LKHelp:\*O"-->
<!-- \*LHelp()\*O-->
<!-- .LE-->
</RefSect2>
<RefSect2>
<Title>Action Routines</Title>
<Para>The <Classname>XmArrowButton</Classname> action routines are
</Para>
<VariableList>
<VarListEntry>
<Term><Action>Activate()</Action>:</Term>
<ListItem>
<Para>Draws the shadow in the unselected state.
If the pointer is within the ArrowButton,
calls the callbacks for <SystemItem Class="Resource">XmNactivateCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>Arm()</Action>:</Term>
<ListItem>
<Para>Draws the shadow in the selected state and
calls the callbacks for <SystemItem Class="Resource">XmNarmCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>ArmAndActivate()</Action>:</Term>
<ListItem>
<Para>Draws the shadow in the selected state and
calls the callbacks for <SystemItem Class="Resource">XmNarmCallback</SystemItem>.
Arranges for the shadow to be drawn in the unselected state and
the callbacks for <SystemItem Class="Resource">XmNactivateCallback</SystemItem> and <SystemItem Class="Resource">XmNdisarmCallback</SystemItem>
to be called, either immediately or at a later time.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>ButtonTakeFocus():</Action></Term>
<ListItem>
<Para>Causes the ArrowButton to take keyboard focus
when <Literal>Ctrl&lt;Btn1Down></Literal> is pressed, without activating the widget.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>Disarm()</Action>:</Term>
<ListItem>
<Para>Draws the shadow in the unselected state and
calls the callbacks for <SystemItem Class="Resource">XmNdisarmCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>Help()</Action>:</Term>
<ListItem>
<Para>Calls the callbacks for <SystemItem Class="Resource">XmNhelpCallback</SystemItem> if any exist.
If there are no help callbacks for this widget, this action calls the
help callbacks for the nearest ancestor that has them.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>MultiActivate()</Action>:</Term>
<ListItem>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>, this action does
nothing.
</Para>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>, this action
increments <Symbol Role="Variable">click_count</Symbol> in the callback structure and
draws the shadow in the unselected state.
If the pointer is within the ArrowButton, this action calls the
callbacks for <SystemItem Class="Resource">XmNactivateCallback</SystemItem> and <SystemItem Class="Resource">XmNdisarmCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Action>MultiArm()</Action>:</Term>
<ListItem>
<Para>If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_DISCARD</SystemItem>, this action does
nothing.
If <SystemItem Class="Resource">XmNmultiClick</SystemItem> is <SystemItem Class="Constant">XmMULTICLICK_KEEP</SystemItem>, this action
draws the shadow in the selected state and calls the callbacks for
<SystemItem Class="Resource">XmNarmCallback</SystemItem>.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Additional Behavior</Title>
<Para>This widget has the following additional behavior:
</Para>
<VariableList>
<VarListEntry>
<Term><KeySym>EnterWindow</KeySym>:</Term>
<ListItem>
<Para>Draws the ArrowButton shadow in its selected state if the
pointer leaves and re-enters the window while <KeySym>Btn1</KeySym> is pressed.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><KeySym>LeaveWindow</KeySym>:</Term>
<ListItem>
<Para>Draws the ArrowButton shadow in its unselected state
if the pointer leaves the window while <KeySym>Btn1</KeySym> is pressed.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</RefSect2>
<RefSect2>
<Title>Virtual Bindings</Title>
<Para>The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see &cdeman.VirtualBindings;.
</Para>
</RefSect2>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.Core;, &cdeman.XmCreateArrowButton;, and &cdeman.XmPrimitive;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
