<!-- $XConsortium: StrCoB.sgm /main/8 1996/09/08 21:03:13 rws $ -->
<!-- (c) Copyright 1995 Digital Equipment Corporation. -->
<!-- (c) Copyright 1995 Hewlett-Packard Company. -->
<!-- (c) Copyright 1995 International Business Machines Corp. -->
<!-- (c) Copyright 1995 Sun Microsystems, Inc. -->
<!-- (c) Copyright 1995 Novell, Inc. -->
<!-- (c) Copyright 1995 FUJITSU LIMITED. -->
<!-- (c) Copyright 1995 Hitachi. -->

<RefEntry Id="CDEMMA.MAN407.rsml.1">
<RefMeta>
<RefEntryTitle>XmStringComponentCreate</RefEntryTitle>
<ManVolNum>library call</ManVolNum>
</RefMeta>
<RefNameDiv>
<RefName><Function>XmStringComponentCreate</Function></RefName>
<RefPurpose>A compound string function that creates arbitrary components
<IndexTerm>
<Primary>XmStringComponentCreate</Primary>
</IndexTerm></RefPurpose>
</RefNameDiv>
<!-- @OSF_COPYRIGHT@-->
<!-- COPYRIGHT NOTICE-->
<!-- Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.-->
<!-- ALL RIGHTS RESERVED (MOTIF). See the file named COPY.MOTIF.DOC for-->
<!-- the full copyright text.-->
<!-- HISTORY-->
<RefSynopsisDiv>
<FuncSynopsis>
<FuncSynopsisInfo>#include &lt;Xm/Xm.h>
</FuncSynopsisInfo>
<FuncDef>XmString <Function>XmStringComponentCreate</Function></FuncDef>
<!--<ParamDef><Replaceable>c_type, length, value</Replaceable></ParamDef>-->
<ParamDef>XmStringComponentType <Parameter>c_type</Parameter></ParamDef>
<ParamDef>unsigned int <Parameter>length</Parameter></ParamDef>
<ParamDef>XtPointer <Parameter>value</Parameter></ParamDef>
</FuncSynopsis>
</RefSynopsisDiv>
<RefSect1>
<Title>DESCRIPTION</Title>
<Para><Function>XmStringComponentCreate</Function> creates a new <StructName Role="typedef">XmString</StructName> component
of type <Symbol Role="Variable">c_type</Symbol>, containing <Symbol Role="Variable">value</Symbol>. If <Symbol Role="Variable">value</Symbol> is invalid
for the particular component type, this function fails and
returns NULL.
</Para>
<VariableList>
<VarListEntry>
<Term><Symbol Role="Variable">c_type</Symbol></Term>
<ListItem>
<Para>Specifies the type of component to be created.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">length</Symbol></Term>
<ListItem>
<Para>Specifies the length in bytes of <Symbol Role="Variable">value</Symbol>.
Note that this must be precisely the length of the <Symbol Role="Variable">value</Symbol>
string, <Emphasis>not</Emphasis> including any trailing null characters.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term><Symbol Role="Variable">value</Symbol></Term>
<ListItem>
<Para>Specifies the value to be used in the creation of the component.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
<Para>Refer to the &cdeman.XmStringComponentType; reference page for a list of
the possible <StructName Role="typedef">XmString</StructName> component types.
</Para>
</RefSect1>
<RefSect1>
<Title>RETURN</Title>
<Para>If <Symbol Role="Variable">value</Symbol> is invalid for <Symbol Role="Variable">c_type</Symbol>, fails
and returns NULL. Otherwise, this function returns a new compound string.
When the application no longer needs the returned compound string,
the application should call <Function>XmStringFree</Function>.
</Para>
</RefSect1>
<RefSect1>
<Title>RELATED</Title>
<Para>&cdeman.XmString;,
<Function>XmStringGetNextTriple</Function>, <StructName Role="typedef">XmStringComponentType</StructName>, and
&cdeman.XmStringFree;.
</Para>
</RefSect1>
</RefEntry>
<!--fickle 1.09 7/2/95-->
